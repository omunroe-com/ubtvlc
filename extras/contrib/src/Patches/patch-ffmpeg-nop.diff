Index: libavcodec/i386/simple_idct_mmx.c
===================================================================
RCS file: /cvsroot/ffmpeg/ffmpeg/libavcodec/i386/simple_idct_mmx.c,v
retrieving revision 1.16
diff -u -r1.16 simple_idct_mmx.c
--- libavcodec/i386/simple_idct_mmx.c	12 Jan 2006 22:43:18 -0000	1.16
+++ libavcodec/i386/simple_idct_mmx.c	26 Jan 2006 22:02:55 -0000
@@ -459,13 +459,12 @@
 
 
 //IDCT(      src0,   src4,   src1,    src5,    dst, rounder, shift)
-COL_IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-COL_IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-COL_IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-COL_IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+COL_IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+COL_IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+COL_IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+COL_IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
 
 #else
-
 #define DC_COND_IDCT(src0, src4, src1, src5, dst, rounder, shift) \
         "movq " #src0 ", %%mm0          \n\t" /* R4     R0      r4      r0 */\
         "movq " #src4 ", %%mm1          \n\t" /* R6     R2      r6      r2 */\
@@ -783,10 +782,10 @@
 
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
         "#.balign 16                    \n\t"\
@@ -860,10 +859,10 @@
         "movd %%mm5, 80+" #dst "        \n\t"
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
         "#.balign 16                    \n\t"\
@@ -928,10 +927,10 @@
 
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
         "#.balign 16                    \n\t"\
@@ -1007,10 +1006,10 @@
         "movd %%mm5, 80+" #dst "        \n\t"
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
         "#.balign 16                    \n\t"\
@@ -1073,10 +1072,10 @@
 
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
         "#.balign 16                    \n\t"\
@@ -1141,10 +1140,10 @@
 
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    0(%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-//IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-//IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    0(%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+//IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+//IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
 
@@ -1217,10 +1216,10 @@
 
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(    (%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
         "jmp 9f                         \n\t"
 
 
@@ -1259,10 +1258,10 @@
         "movq %%mm0, 80+" #dst "        \n\t"
 
 //IDCT(  src0,   src4,   src1,    src5,    dst, rounder, shift)
-IDCT(   0(%1), 64(%1), 32(%1),  96(%1),  0(%0),/nop, 20)
-//IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),/nop, 20)
-IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),/nop, 20)
-//IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),/nop, 20)
+IDCT(   0(%1), 64(%1), 32(%1),  96(%1),  0(%0),#nop, 20)
+//IDCT(   8(%1), 72(%1), 40(%1), 104(%1),  4(%0),#nop, 20)
+IDCT(  16(%1), 80(%1), 48(%1), 112(%1),  8(%0),#nop, 20)
+//IDCT(  24(%1), 88(%1), 56(%1), 120(%1), 12(%0),#nop, 20)
 
 
 #endif
