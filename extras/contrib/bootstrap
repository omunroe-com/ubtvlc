#!/bin/sh
# ***************************************************************************
# bootstrap : Set up config.mak
# ***************************************************************************
# Copyright (C) 2003 the VideoLAN team
# $Id: bootstrap 12655 2005-09-22 21:17:14Z titer $
#
# Authors: Christophe Massiot <massiot@via.ecp.fr>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA.
# ***************************************************************************

if test "$#" -gt "1"; then
  echo "Usage: $0 <host>" >&2
  echo "  Prepare config.mak file." >&2
  exit 1
fi

LANG=C
export LANG
set -e
set -x

BUILD=`gcc -dumpmachine`
if test "$#" = "1"; then
  HOST="$1"
else
  HOST="$BUILD"
fi

echo -e "# Automatically generated by bootstrap.\n# Make changes if you know what you're doing.\n" >| config.mak

echo "BUILD = $BUILD" >> config.mak
echo "HOST = $HOST" >> config.mak

case $HOST in
    ppc-darwin)
# Mac OS X < 10.4
	    echo "EXTRA_CPPFLAGS = -no-cpp-precomp" >> config.mak
	;;
    powerpc-apple-darwin8)
# Mac OS X 10.4
# Makefile cross compiling is only supported with gcc-4.0
# ENVP defines the oldest environment on which the program will be able to run
# SDK 10.2.8 requires gcc-3.3 (so we cannot use that SDK)
            echo "ENVP = MACOSX_DEPLOYMENT_TARGET=10.3" >> config.mak
	    echo "MACOSX_SDK = /Developer/SDKs/MacOSX10.3.0.sdk" >> config.mak
#	    echo "EXTRA_CFLAGS = -D\${ENVP} -isysroot \${MACOSX_SDK}" >> config.mak
	    echo "EXTRA_CPPFLAGS = -no-cpp-precomp" >> config.mak
#	    echo "EXTRA_LDFLAGS = -isysroot \${MACOSX_SDK} -Wl,-syslibroot,\${MACOSX_SDK}" >> config.mak
        ;;
    i586-pc-beos)
            if test -f /boot/beos/system/lib/libbind.so; then
                echo "EXTRA_LDFLAGS = -lbind -lsocket" >> config.mak
            else
                echo "EXTRA_LDFLAGS = -lnet" >> config.mak
            fi
        ;;
    *)
        ;;
esac

if which curl >/dev/null; then
	echo "WGET = curl -O" >> config.mak
elif wget --version >/dev/null 2>&1; then
	echo "WGET = wget" >> config.mak
else
	echo "You need at least wget or curl to fetch the packages." >&2
	exit 1
fi

if test -f /sw/bin/svn; then
        echo "SVN = /sw/bin/svn" >> config.mak
elif test -f /usr/local/bin/svn; then
        echo "SVN = /usr/local/bin/svn" >> config.mak
elif svn help >/dev/null 2>&1; then
        echo "SVN = svn" >> config.mak
else
        echo "You do not have a subversion client installed." >&2
fi

echo "PREFIX = `pwd`" >> config.mak
