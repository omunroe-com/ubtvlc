Index: vlc-0.8.6.e/configure.ac
===================================================================
--- vlc-0.8.6.e.orig/configure.ac	2008-06-22 16:26:58.000000000 +1000
+++ vlc-0.8.6.e/configure.ac	2008-06-22 16:26:58.000000000 +1000
@@ -4763,6 +4763,20 @@
    fi])
 
 dnl
+dnl  Pulseaudio module
+dnl
+AC_ARG_ENABLE(pulse,
+  [  --enable-pulse          Pulseaudio support (default enabled)])
+  if test "${enable_pulse}" != "no"
+   then
+     PKG_CHECK_MODULES(PULSE, libpulse >= 0.9.8,
+       [ VLC_ADD_PLUGINS([pulse])
+        VLC_ADD_CFLAGS([pulse],[${PULSE_CFLAGS}])
+        VLC_ADD_LDFLAGS([pulse],[${PULSE_LIBS}])]:,
+       [AC_MSG_WARN(pulsaudio library not found)])
+   fi
+
+dnl
 dnl  MacOS X module
 dnl
 ORIGCFLAGS=$CFLAGS
Index: vlc-0.8.6.e/modules/audio_output/Modules.am
===================================================================
--- vlc-0.8.6.e.orig/modules/audio_output/Modules.am	2007-11-22 09:23:22.000000000 +1100
+++ vlc-0.8.6.e/modules/audio_output/Modules.am	2008-06-22 16:26:58.000000000 +1000
@@ -10,3 +10,4 @@
 SOURCES_portaudio = portaudio.c
 SOURCES_auhal = auhal.c
 SOURCES_jack = jack.c
+SOURCES_pulse = pulse.c
Index: vlc-0.8.6.e/modules/audio_output/pulse.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vlc-0.8.6.e/modules/audio_output/pulse.c	2008-06-22 16:26:58.000000000 +1000
@@ -0,0 +1,470 @@
+/*****************************************************************************
+ * pulse.c : Pulseaudio output plugin for vlc
+ *****************************************************************************
+ * Copyright (C) 2008 the VideoLAN team
+ *
+ * Authors: Martin Hamrle <hamrle @ post . cz>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
+ *****************************************************************************/
+
+/*****************************************************************************
+ * Preamble
+ *****************************************************************************/
+#ifdef HAVE_CONFIG_H
+# include "config.h"
+#endif
+
+#include <vlc/vlc.h>
+
+#include <vlc/aout.h>
+#include "aout_internal.h"
+
+#include <pulse/pulseaudio.h>
+
+/*****************************************************************************
+ * aout_sys_t: Pulseaudio output method descriptor
+ *****************************************************************************
+ * This structure is part of the audio output thread descriptor.
+ * It describes the specific properties of an audio device.
+ *****************************************************************************/
+struct aout_sys_t
+{
+    /** PulseAudio playback stream object */
+    struct pa_stream *stream;
+
+    /** PulseAudio connection context */
+    struct pa_context *context;
+
+    /** Main event loop object */
+    struct pa_threaded_mainloop *mainloop;
+
+    int started;
+    size_t buffer_size;
+    mtime_t start_date;
+};
+
+#define    PULSE_CLIENT_NAME N_("VLC media player")
+
+#if 0
+#define PULSE_DEBUG( ...) \
+    msg_Dbg( p_aout, __VA_ARGS__ )
+#else
+#define PULSE_DEBUG( ...) \
+    (void) 0
+#endif
+
+
+#define CHECK_DEAD_GOTO(label) do { \
+if (!p_sys->context || pa_context_get_state(p_sys->context) != PA_CONTEXT_READY || \
+    !p_sys->stream || pa_stream_get_state(p_sys->stream) != PA_STREAM_READY) { \
+        msg_Err(p_aout, "Connection died: %s", p_sys->context ? pa_strerror(pa_context_errno(p_sys->context)) : "NULL"); \
+        goto label; \
+    }  \
+} while(0);
+/*****************************************************************************
+ * Local prototypes
+ *****************************************************************************/
+static int  Open        ( vlc_object_t * );
+static void Close       ( vlc_object_t * );
+static void Play        ( aout_instance_t * );
+
+static void context_state_cb(pa_context *c, void *userdata);
+static void stream_state_cb(pa_stream *s, void * userdata);
+static void stream_request_cb(pa_stream *s, size_t length, void *userdata);
+static void stream_latency_update_cb(pa_stream *s, void *userdata);
+static void success_cb(pa_stream *s, int sucess, void *userdata);
+static void uninit(aout_instance_t *p_aout);
+/*****************************************************************************
+ * Module descriptor
+ *****************************************************************************/
+vlc_module_begin();
+    set_shortname( "Pulse Audio" );
+    set_description( _("Pulseaudio audio output") );
+    set_capability( "audio output", 200 );
+    set_category( CAT_AUDIO );
+    set_subcategory( SUBCAT_AUDIO_AOUT );
+    add_shortcut( "pulseaudio" );
+    add_shortcut( "pa" );
+    set_callbacks( Open, Close );
+vlc_module_end();
+
+/*****************************************************************************
+ * Open: open the audio device
+ *****************************************************************************/
+static int Open ( vlc_object_t *p_this )
+{
+    aout_instance_t *p_aout = (aout_instance_t *)p_this;
+    struct aout_sys_t * p_sys;
+    struct pa_sample_spec ss;
+    const struct pa_buffer_attr *buffer_attr;
+    struct pa_buffer_attr a;
+    struct pa_channel_map map;
+
+    /* Allocate structures */
+    p_aout->output.p_sys = p_sys = malloc( sizeof( aout_sys_t ) );
+    if( p_sys == NULL )
+    {
+        msg_Err( p_aout, "out of memory" );
+        return VLC_ENOMEM;
+    }
+    p_sys->started = 0;
+    p_sys->stream = NULL;
+    p_sys->mainloop = NULL;
+    p_sys->context = NULL;
+
+    PULSE_DEBUG( "Pulse start initialization");
+
+    ss.rate = p_aout->output.output.i_rate;
+    ss.channels = 2;
+
+    ss.format = PA_SAMPLE_S16LE;
+    p_aout->output.output.i_physical_channels =
+            AOUT_CHAN_LEFT | AOUT_CHAN_RIGHT;
+    p_aout->output.output.i_format = AOUT_FMT_S16_NE;
+
+    if (!pa_sample_spec_valid(&ss)) {
+        msg_Err(p_aout,"Invalid sample spec");
+        goto fail;
+    }
+    
+    a.maxlength = pa_bytes_per_second(&ss)/4/pa_frame_size(&ss);
+    a.tlength = a.maxlength*9/10;
+    a.prebuf = a.tlength/2;
+    a.minreq = a.tlength/10;
+
+    a.maxlength *= pa_frame_size(&ss);
+    a.tlength *= pa_frame_size(&ss);
+    a.prebuf *= pa_frame_size(&ss);
+    a.minreq *= pa_frame_size(&ss);
+
+    p_sys->buffer_size = a.minreq;
+
+    pa_channel_map_init_stereo(&map);
+
+
+    if (!(p_sys->mainloop = pa_threaded_mainloop_new())) {
+        msg_Err(p_aout, "Failed to allocate main loop");
+        goto fail;
+    }
+
+    if (!(p_sys->context = pa_context_new(pa_threaded_mainloop_get_api(p_sys->mainloop), _( PULSE_CLIENT_NAME )))) {
+        msg_Err(p_aout, "Failed to allocate context");
+        goto fail;
+    }
+
+    pa_context_set_state_callback(p_sys->context, context_state_cb, p_aout);
+
+    PULSE_DEBUG( "Pulse before context connect");
+
+    if (pa_context_connect(p_sys->context, NULL, 0, NULL) < 0) {
+        msg_Err(p_aout, "Failed to connect to server: %s", pa_strerror(pa_context_errno(p_sys->context)));
+        goto fail;
+    }
+
+    PULSE_DEBUG( "Pulse after context connect");
+
+    pa_threaded_mainloop_lock(p_sys->mainloop);
+    
+    if (pa_threaded_mainloop_start(p_sys->mainloop) < 0) {
+        msg_Err(p_aout, "Failed to start main loop");
+        goto unlock_and_fail;
+    }
+
+    msg_Dbg(p_aout, "Pulse mainloop started");
+
+    /* Wait until the context is ready */
+    pa_threaded_mainloop_wait(p_sys->mainloop);
+
+    if (pa_context_get_state(p_sys->context) != PA_CONTEXT_READY) {
+        msg_Err(p_aout, "Failed to connect to server: %s", pa_strerror(pa_context_errno(p_sys->context)));
+        goto unlock_and_fail;
+    }
+
+    if (!(p_sys->stream = pa_stream_new(p_sys->context, "audio stream", &ss, &map))) {
+        msg_Err(p_aout, "Failed to create stream: %s", pa_strerror(pa_context_errno(p_sys->context)));
+        goto unlock_and_fail;
+    }
+
+    PULSE_DEBUG( "Pulse after new stream");
+
+    pa_stream_set_state_callback(p_sys->stream, stream_state_cb, p_aout);
+    pa_stream_set_write_callback(p_sys->stream, stream_request_cb, p_aout);
+    pa_stream_set_latency_update_callback(p_sys->stream, stream_latency_update_cb, p_aout);
+
+    if (pa_stream_connect_playback(p_sys->stream, NULL, &a, PA_STREAM_INTERPOLATE_TIMING|PA_STREAM_AUTO_TIMING_UPDATE, NULL, NULL) < 0) {
+        msg_Err(p_aout, "Failed to connect stream: %s", pa_strerror(pa_context_errno(p_sys->context)));
+        goto unlock_and_fail;
+    }
+
+     PULSE_DEBUG("Pulse stream connect");
+
+    /* Wait until the stream is ready */
+    pa_threaded_mainloop_wait(p_sys->mainloop);
+
+    msg_Dbg(p_aout,"Pulse stream connected");
+
+    if (pa_stream_get_state(p_sys->stream) != PA_STREAM_READY) {
+        msg_Err(p_aout, "Failed to connect to server: %s", pa_strerror(pa_context_errno(p_sys->context)));
+        goto unlock_and_fail;
+    }
+
+
+    PULSE_DEBUG("Pulse after stream get status");
+
+    pa_threaded_mainloop_unlock(p_sys->mainloop);
+
+    buffer_attr = pa_stream_get_buffer_attr(p_sys->stream);
+    p_aout->output.i_nb_samples = buffer_attr->minreq / pa_frame_size(&ss);
+    p_aout->output.pf_play = Play;
+    aout_VolumeSoftInit(p_aout);
+    msg_Dbg(p_aout, "Pulse initialized successfully");
+    {
+        char cmt[PA_CHANNEL_MAP_SNPRINT_MAX], sst[PA_SAMPLE_SPEC_SNPRINT_MAX];
+
+        msg_Dbg(p_aout, "Buffer metrics: maxlength=%u, tlength=%u, prebuf=%u, minreq=%u", buffer_attr->maxlength, buffer_attr->tlength, buffer_attr->prebuf, buffer_attr->minreq);
+        msg_Dbg(p_aout, "Using sample spec '%s', channel map '%s'.",
+                pa_sample_spec_snprint(sst, sizeof(sst), pa_stream_get_sample_spec(p_sys->stream)),
+                pa_channel_map_snprint(cmt, sizeof(cmt), pa_stream_get_channel_map(p_sys->stream)));
+
+            msg_Dbg(p_aout, "Connected to device %s (%u, %ssuspended).",
+                        pa_stream_get_device_name(p_sys->stream),
+                        pa_stream_get_device_index(p_sys->stream),
+                        pa_stream_is_suspended(p_sys->stream) ? "" : "not ");
+    }
+
+    return VLC_SUCCESS;
+
+unlock_and_fail:
+    msg_Dbg(p_aout, "Pulse initialization unlock and fail");
+
+    if (p_sys->mainloop)
+        pa_threaded_mainloop_unlock(p_sys->mainloop);
+fail:
+    msg_Err(p_aout, "Pulse initialization failed");
+    uninit(p_aout);
+    return VLC_EGENERIC;
+}
+
+/*****************************************************************************
+ * Play: play a sound samples buffer
+ *****************************************************************************/
+static void Play( aout_instance_t * p_aout )
+{
+    struct aout_sys_t * p_sys = (struct aout_sys_t *) p_aout->output.p_sys;
+
+    pa_operation *o;
+
+    if(!p_sys->started){
+        msg_Dbg(p_aout, "Pulse stream started");
+        p_sys->start_date =
+            aout_FifoFirstDate( p_aout, &p_aout->output.fifo );
+        p_sys->started = 1;
+
+        pa_threaded_mainloop_lock(p_sys->mainloop);
+        if((o = pa_stream_flush(p_sys->stream, success_cb, p_aout))){
+            pa_operation_unref(o);
+        }
+        pa_threaded_mainloop_unlock(p_sys->mainloop);
+
+        pa_threaded_mainloop_signal(p_sys->mainloop, 0);
+    }
+}
+
+/*****************************************************************************
+ * Close: close the audio device
+ *****************************************************************************/
+static void Close ( vlc_object_t *p_this )
+{
+    aout_instance_t *p_aout = (aout_instance_t *)p_this;
+    struct aout_sys_t * p_sys = p_aout->output.p_sys;
+
+    msg_Dbg(p_aout, "Pulse Close");
+
+    if(p_sys->stream){
+        pa_operation *o;
+        pa_threaded_mainloop_lock(p_sys->mainloop);
+        pa_stream_set_write_callback(p_sys->stream, NULL, NULL);
+
+        if((o = pa_stream_drain(p_sys->stream, success_cb, p_aout))){
+            while (pa_operation_get_state(o) != PA_OPERATION_DONE) {
+                CHECK_DEAD_GOTO(fail);
+                pa_threaded_mainloop_wait(p_sys->mainloop);
+            }
+
+        fail:
+
+            pa_operation_unref(o);
+        }
+
+        pa_threaded_mainloop_unlock(p_sys->mainloop);
+    }
+    uninit(p_aout);
+}
+
+static void uninit(aout_instance_t *p_aout){
+    struct aout_sys_t * p_sys = p_aout->output.p_sys;
+
+    if (p_sys->mainloop)
+        pa_threaded_mainloop_stop(p_sys->mainloop);
+
+    if (p_sys->stream) {
+        pa_stream_disconnect(p_sys->stream);
+        pa_stream_unref(p_sys->stream);
+        p_sys->stream = NULL;
+    }
+
+    if (p_sys->context) {
+        pa_context_disconnect(p_sys->context);
+        pa_context_unref(p_sys->context);
+        p_sys->context = NULL;
+    }
+
+    if (p_sys->mainloop) {
+        pa_threaded_mainloop_free(p_sys->mainloop);
+        p_sys->mainloop = NULL;
+    }
+
+    free(p_sys);
+    p_aout->output.p_sys = NULL;
+}
+
+static void context_state_cb(pa_context *c, void *userdata) {
+    aout_instance_t *p_aout = (aout_instance_t *)userdata;
+    struct aout_sys_t * p_sys = (struct aout_sys_t *) p_aout->output.p_sys;
+
+    assert(c);
+
+    PULSE_DEBUG( "Pulse context state changed");
+
+    switch (pa_context_get_state(c)) {
+        case PA_CONTEXT_READY:
+        case PA_CONTEXT_TERMINATED:
+        case PA_CONTEXT_FAILED:
+        PULSE_DEBUG( "Pulse context state changed signal");
+            pa_threaded_mainloop_signal(p_sys->mainloop, 0);
+            break;
+
+        case PA_CONTEXT_UNCONNECTED:
+        case PA_CONTEXT_CONNECTING:
+        case PA_CONTEXT_AUTHORIZING:
+        case PA_CONTEXT_SETTING_NAME:
+        PULSE_DEBUG( "Pulse context state changed no signal");
+            break;
+    }
+}
+
+static void stream_state_cb(pa_stream *s, void * userdata) {
+    aout_instance_t *p_aout = (aout_instance_t *)userdata;
+    struct aout_sys_t * p_sys = (struct aout_sys_t *) p_aout->output.p_sys;
+
+    assert(s);
+
+    PULSE_DEBUG( "Pulse stream state changed");
+
+    switch (pa_stream_get_state(s)) {
+
+        case PA_STREAM_READY:
+        case PA_STREAM_FAILED:
+        case PA_STREAM_TERMINATED:
+            pa_threaded_mainloop_signal(p_sys->mainloop, 0);
+            break;
+
+        case PA_STREAM_UNCONNECTED:
+        case PA_STREAM_CREATING:
+            break;
+    }
+}
+
+static void stream_request_cb(pa_stream *s, size_t length, void *userdata) {
+    aout_instance_t *p_aout = (aout_instance_t *)userdata;
+    struct aout_sys_t * p_sys = (struct aout_sys_t *) p_aout->output.p_sys;
+    mtime_t next_date;
+
+    assert(s);
+    assert(p_sys);
+
+    size_t buffer_size = p_sys->buffer_size;
+
+    PULSE_DEBUG( "Pulse stream request %d", length);
+
+    do{
+        aout_buffer_t *   p_buffer = NULL;
+        if(p_sys->started){
+            pa_usec_t latency;
+            int negative;
+            if(pa_stream_get_latency(p_sys->stream, &latency, &negative)<0){
+                if (pa_context_errno(p_sys->context) != PA_ERR_NODATA) {
+                    msg_Err(p_aout, "pa_stream_get_latency() failed: %s", pa_strerror(pa_context_errno(p_sys->context)));
+                }
+                latency = 0;
+
+            }
+            PULSE_DEBUG( "Pulse stream request latency="I64Fd"", latency);
+            next_date = mdate() + latency;
+
+
+            if(p_sys->start_date < next_date + AOUT_PTS_TOLERANCE ){
+    /*
+                  vlc_mutex_lock( &p_aout->output_fifo_lock );
+                p_buffer = aout_FifoPop( p_aout, &p_aout->output.fifo );
+                vlc_mutex_unlock( &p_aout->output_fifo_lock );
+    */
+                p_buffer = aout_OutputNextBuffer( p_aout, next_date, 0);
+            }
+        }
+
+        if ( p_buffer != NULL )
+        {
+            PULSE_DEBUG( "Pulse stream request write buffer %d", p_buffer->i_nb_bytes);
+            pa_stream_write(p_sys->stream, p_buffer->p_buffer, p_buffer->i_nb_bytes, NULL, 0, PA_SEEK_RELATIVE);
+            length -= p_buffer->i_nb_bytes;
+            aout_BufferFree( p_buffer );
+        }
+        else
+        {
+            PULSE_DEBUG( "Pulse stream request write zeroes");
+            void *data = pa_xmalloc(buffer_size);
+            bzero(data, buffer_size);
+            pa_stream_write(p_sys->stream, data, buffer_size, pa_xfree, 0, PA_SEEK_RELATIVE);
+            length -= buffer_size;
+        }
+    }while(length > buffer_size);
+
+    pa_threaded_mainloop_signal(p_sys->mainloop, 0);
+}
+
+static void stream_latency_update_cb(pa_stream *s, void *userdata) {
+    aout_instance_t *p_aout = (aout_instance_t *)userdata;
+    struct aout_sys_t * p_sys = (struct aout_sys_t *) p_aout->output.p_sys;
+
+    assert(s);
+
+    PULSE_DEBUG( "Pulse stream latency update");
+
+    pa_threaded_mainloop_signal(p_sys->mainloop, 0);
+}
+
+static void success_cb(pa_stream *s, int sucess, void *userdata)
+{
+    aout_instance_t *p_aout = (aout_instance_t *)userdata;
+    struct aout_sys_t * p_sys = (struct aout_sys_t *) p_aout->output.p_sys;
+
+    assert(s);
+
+    pa_threaded_mainloop_signal(p_sys->mainloop, 0);
+}
+
+#undef PULSE_DEBUG
Index: vlc-0.8.6.e/configure
===================================================================
--- vlc-0.8.6.e.orig/configure	2008-02-25 06:07:09.000000000 +1100
+++ vlc-0.8.6.e/configure	2008-06-22 16:26:58.000000000 +1000
@@ -972,6 +972,8 @@
 GTK2_CFLAGS
 GTK2_LIBS
 WX_CONFIG
+PULSE_CFLAGS
+PULSE_LIBS
 DAAP_CFLAGS
 DAAP_LIBS
 BONJOUR_CFLAGS
@@ -1083,6 +1085,8 @@
 SVG_LIBS
 GTK2_CFLAGS
 GTK2_LIBS
+PULSE_CFLAGS
+PULSE_LIBS
 DAAP_CFLAGS
 DAAP_LIBS
 BONJOUR_CFLAGS
@@ -1797,6 +1801,7 @@
   --enable-pda            PDA interface needs Gtk2 support (default disabled)
   --enable-wxwidgets      wxWidgets support (default enabled)
   --enable-opie           Qt embedded interface support (default disabled)
+  --enable-pulse          Pulseaudio support (default enabled)
   --enable-macosx         MacOS X support (default enabled on MacOS X)
   --enable-qnx            QNX RTOS support (default enabled on QNX RTOS)
   --enable-ncurses        ncurses interface support (default disabled)
@@ -1961,6 +1966,9 @@
   SVG_LIBS    linker flags for SVG, overriding pkg-config
   GTK2_CFLAGS C compiler flags for GTK2, overriding pkg-config
   GTK2_LIBS   linker flags for GTK2, overriding pkg-config
+  PULSE_CFLAGS
+              C compiler flags for PULSE, overriding pkg-config
+  PULSE_LIBS  linker flags for PULSE, overriding pkg-config
   DAAP_CFLAGS C compiler flags for DAAP, overriding pkg-config
   DAAP_LIBS   linker flags for DAAP, overriding pkg-config
   BONJOUR_CFLAGS
@@ -59760,6 +59768,102 @@
 fi
 
 
+# Check whether --enable-pulse was given.
+if test "${enable_pulse+set}" = set; then
+  enableval=$enable_pulse;
+fi
+
+  if test "${enable_pulse}" != "no"
+   then
+
+pkg_failed=no
+{ echo "$as_me:$LINENO: checking for PULSE" >&5
+echo $ECHO_N "checking for PULSE... $ECHO_C" >&6; }
+
+if test -n "$PKG_CONFIG"; then
+    if test -n "$PULSE_CFLAGS"; then
+        pkg_cv_PULSE_CFLAGS="$PULSE_CFLAGS"
+    else
+        if test -n "$PKG_CONFIG" && \
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libpulse >= 0.9.8\"") >&5
+  ($PKG_CONFIG --exists --print-errors "libpulse >= 0.9.8") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  pkg_cv_PULSE_CFLAGS=`$PKG_CONFIG --cflags "libpulse >= 0.9.8" 2>/dev/null`
+else
+  pkg_failed=yes
+fi
+    fi
+else
+	pkg_failed=untried
+fi
+if test -n "$PKG_CONFIG"; then
+    if test -n "$PULSE_LIBS"; then
+        pkg_cv_PULSE_LIBS="$PULSE_LIBS"
+    else
+        if test -n "$PKG_CONFIG" && \
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libpulse >= 0.9.8\"") >&5
+  ($PKG_CONFIG --exists --print-errors "libpulse >= 0.9.8") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  pkg_cv_PULSE_LIBS=`$PKG_CONFIG --libs "libpulse >= 0.9.8" 2>/dev/null`
+else
+  pkg_failed=yes
+fi
+    fi
+else
+	pkg_failed=untried
+fi
+
+
+
+if test $pkg_failed = yes; then
+
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi
+        if test $_pkg_short_errors_supported = yes; then
+	        PULSE_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "libpulse >= 0.9.8"`
+        else
+	        PULSE_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libpulse >= 0.9.8"`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$PULSE_PKG_ERRORS" >&5
+
+	{ echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+                { echo "$as_me:$LINENO: WARNING: pulsaudio library not found" >&5
+echo "$as_me: WARNING: pulsaudio library not found" >&2;}
+elif test $pkg_failed = untried; then
+	{ echo "$as_me:$LINENO: WARNING: pulsaudio library not found" >&5
+echo "$as_me: WARNING: pulsaudio library not found" >&2;}
+else
+	PULSE_CFLAGS=$pkg_cv_PULSE_CFLAGS
+	PULSE_LIBS=$pkg_cv_PULSE_LIBS
+        { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+
+  PLUGINS="${PLUGINS} pulse"
+
+
+  for element in pulse; do
+    eval "CFLAGS_${element}="'"$'"{CFLAGS_${element}} ${PULSE_CFLAGS}"'"'
+    am_modules_with_cflags="${am_modules_with_cflags} ${element}"
+  done
+
+
+  for element in pulse; do
+    eval "LDFLAGS_${element}="'"'"${PULSE_LIBS} "'$'"{LDFLAGS_${element}} "'"'
+    am_modules_with_ldflags="${am_modules_with_ldflags} ${element}"
+  done
+:
+fi
+   fi
+
 ORIGCFLAGS=$CFLAGS
 CFLAGS="$CFLAGS -x objective-c"
 # Check whether --enable-macosx was given.
Index: vlc-0.8.6.e/modules/audio_output/Makefile.in
===================================================================
--- vlc-0.8.6.e.orig/modules/audio_output/Makefile.in	2008-02-25 06:07:20.000000000 +1100
+++ vlc-0.8.6.e/modules/audio_output/Makefile.in	2008-06-22 16:27:48.000000000 +1000
@@ -175,15 +175,25 @@
 am__objects_22 = libportaudio_plugin_a-portaudio.$(OBJEXT)
 am_libportaudio_plugin_a_OBJECTS = $(am__objects_22)
 libportaudio_plugin_a_OBJECTS = $(am_libportaudio_plugin_a_OBJECTS)
+libpulse_a_AR = $(AR) $(ARFLAGS)
+libpulse_a_LIBADD =
+am__objects_23 = libpulse_a-pulse.$(OBJEXT)
+am_libpulse_a_OBJECTS = $(am__objects_23)
+libpulse_a_OBJECTS = $(am_libpulse_a_OBJECTS)
+libpulse_plugin_a_AR = $(AR) $(ARFLAGS)
+libpulse_plugin_a_LIBADD =
+am__objects_24 = libpulse_plugin_a-pulse.$(OBJEXT)
+am_libpulse_plugin_a_OBJECTS = $(am__objects_24)
+libpulse_plugin_a_OBJECTS = $(am_libpulse_plugin_a_OBJECTS)
 libwaveout_a_AR = $(AR) $(ARFLAGS)
 libwaveout_a_LIBADD =
-am__objects_23 = libwaveout_a-waveout.$(OBJEXT)
-am_libwaveout_a_OBJECTS = $(am__objects_23)
+am__objects_25 = libwaveout_a-waveout.$(OBJEXT)
+am_libwaveout_a_OBJECTS = $(am__objects_25)
 libwaveout_a_OBJECTS = $(am_libwaveout_a_OBJECTS)
 libwaveout_plugin_a_AR = $(AR) $(ARFLAGS)
 libwaveout_plugin_a_LIBADD =
-am__objects_24 = libwaveout_plugin_a-waveout.$(OBJEXT)
-am_libwaveout_plugin_a_OBJECTS = $(am__objects_24)
+am__objects_26 = libwaveout_plugin_a-waveout.$(OBJEXT)
+am_libwaveout_plugin_a_OBJECTS = $(am__objects_26)
 libwaveout_plugin_a_OBJECTS = $(am_libwaveout_plugin_a_OBJECTS)
 am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
 am__vpath_adj = case $$p in \
@@ -195,105 +205,113 @@
 libvlcLTLIBRARIES_INSTALL = $(INSTALL)
 LTLIBRARIES = $(libvlc_LTLIBRARIES) $(noinst_LTLIBRARIES)
 libalsa_builtin_la_LIBADD =
-am__objects_25 = libalsa_builtin_la-alsa.lo
-am_libalsa_builtin_la_OBJECTS = $(am__objects_25)
+am__objects_27 = libalsa_builtin_la-alsa.lo
+am_libalsa_builtin_la_OBJECTS = $(am__objects_27)
 libalsa_builtin_la_OBJECTS = $(am_libalsa_builtin_la_OBJECTS)
 am__DEPENDENCIES_1 = $(top_builddir)/src/libvlc.la
 libalsa_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_26 = libalsa_plugin_la-alsa.lo
-am_libalsa_plugin_la_OBJECTS = $(am__objects_26)
+am__objects_28 = libalsa_plugin_la-alsa.lo
+am_libalsa_plugin_la_OBJECTS = $(am__objects_28)
 libalsa_plugin_la_OBJECTS = $(am_libalsa_plugin_la_OBJECTS)
 libaout_directx_builtin_la_LIBADD =
-am__objects_27 = libaout_directx_builtin_la-directx.lo
-am_libaout_directx_builtin_la_OBJECTS = $(am__objects_27)
+am__objects_29 = libaout_directx_builtin_la-directx.lo
+am_libaout_directx_builtin_la_OBJECTS = $(am__objects_29)
 libaout_directx_builtin_la_OBJECTS =  \
 	$(am_libaout_directx_builtin_la_OBJECTS)
 libaout_directx_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_28 = libaout_directx_plugin_la-directx.lo
-am_libaout_directx_plugin_la_OBJECTS = $(am__objects_28)
+am__objects_30 = libaout_directx_plugin_la-directx.lo
+am_libaout_directx_plugin_la_OBJECTS = $(am__objects_30)
 libaout_directx_plugin_la_OBJECTS =  \
 	$(am_libaout_directx_plugin_la_OBJECTS)
 libaout_file_builtin_la_LIBADD =
-am__objects_29 = libaout_file_builtin_la-file.lo
-am_libaout_file_builtin_la_OBJECTS = $(am__objects_29)
+am__objects_31 = libaout_file_builtin_la-file.lo
+am_libaout_file_builtin_la_OBJECTS = $(am__objects_31)
 libaout_file_builtin_la_OBJECTS =  \
 	$(am_libaout_file_builtin_la_OBJECTS)
 libaout_file_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_30 = libaout_file_plugin_la-file.lo
-am_libaout_file_plugin_la_OBJECTS = $(am__objects_30)
+am__objects_32 = libaout_file_plugin_la-file.lo
+am_libaout_file_plugin_la_OBJECTS = $(am__objects_32)
 libaout_file_plugin_la_OBJECTS = $(am_libaout_file_plugin_la_OBJECTS)
 libaout_sdl_builtin_la_LIBADD =
-am__objects_31 = libaout_sdl_builtin_la-sdl.lo
-am_libaout_sdl_builtin_la_OBJECTS = $(am__objects_31)
+am__objects_33 = libaout_sdl_builtin_la-sdl.lo
+am_libaout_sdl_builtin_la_OBJECTS = $(am__objects_33)
 libaout_sdl_builtin_la_OBJECTS = $(am_libaout_sdl_builtin_la_OBJECTS)
 libaout_sdl_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_32 = libaout_sdl_plugin_la-sdl.lo
-am_libaout_sdl_plugin_la_OBJECTS = $(am__objects_32)
+am__objects_34 = libaout_sdl_plugin_la-sdl.lo
+am_libaout_sdl_plugin_la_OBJECTS = $(am__objects_34)
 libaout_sdl_plugin_la_OBJECTS = $(am_libaout_sdl_plugin_la_OBJECTS)
 libarts_builtin_la_LIBADD =
-am__objects_33 = libarts_builtin_la-arts.lo
-am_libarts_builtin_la_OBJECTS = $(am__objects_33)
+am__objects_35 = libarts_builtin_la-arts.lo
+am_libarts_builtin_la_OBJECTS = $(am__objects_35)
 libarts_builtin_la_OBJECTS = $(am_libarts_builtin_la_OBJECTS)
 libarts_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_34 = libarts_plugin_la-arts.lo
-am_libarts_plugin_la_OBJECTS = $(am__objects_34)
+am__objects_36 = libarts_plugin_la-arts.lo
+am_libarts_plugin_la_OBJECTS = $(am__objects_36)
 libarts_plugin_la_OBJECTS = $(am_libarts_plugin_la_OBJECTS)
 libauhal_builtin_la_LIBADD =
-am__objects_35 = libauhal_builtin_la-auhal.lo
-am_libauhal_builtin_la_OBJECTS = $(am__objects_35)
+am__objects_37 = libauhal_builtin_la-auhal.lo
+am_libauhal_builtin_la_OBJECTS = $(am__objects_37)
 libauhal_builtin_la_OBJECTS = $(am_libauhal_builtin_la_OBJECTS)
 libauhal_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_36 = libauhal_plugin_la-auhal.lo
-am_libauhal_plugin_la_OBJECTS = $(am__objects_36)
+am__objects_38 = libauhal_plugin_la-auhal.lo
+am_libauhal_plugin_la_OBJECTS = $(am__objects_38)
 libauhal_plugin_la_OBJECTS = $(am_libauhal_plugin_la_OBJECTS)
 libesd_builtin_la_LIBADD =
-am__objects_37 = libesd_builtin_la-esd.lo
-am_libesd_builtin_la_OBJECTS = $(am__objects_37)
+am__objects_39 = libesd_builtin_la-esd.lo
+am_libesd_builtin_la_OBJECTS = $(am__objects_39)
 libesd_builtin_la_OBJECTS = $(am_libesd_builtin_la_OBJECTS)
 libesd_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_38 = libesd_plugin_la-esd.lo
-am_libesd_plugin_la_OBJECTS = $(am__objects_38)
+am__objects_40 = libesd_plugin_la-esd.lo
+am_libesd_plugin_la_OBJECTS = $(am__objects_40)
 libesd_plugin_la_OBJECTS = $(am_libesd_plugin_la_OBJECTS)
 libhd1000a_builtin_la_LIBADD =
-am__objects_39 = libhd1000a_builtin_la-hd1000a.lo
-am_libhd1000a_builtin_la_OBJECTS = $(am__objects_39)
+am__objects_41 = libhd1000a_builtin_la-hd1000a.lo
+am_libhd1000a_builtin_la_OBJECTS = $(am__objects_41)
 libhd1000a_builtin_la_OBJECTS = $(am_libhd1000a_builtin_la_OBJECTS)
 libhd1000a_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_40 = libhd1000a_plugin_la-hd1000a.lo
-am_libhd1000a_plugin_la_OBJECTS = $(am__objects_40)
+am__objects_42 = libhd1000a_plugin_la-hd1000a.lo
+am_libhd1000a_plugin_la_OBJECTS = $(am__objects_42)
 libhd1000a_plugin_la_OBJECTS = $(am_libhd1000a_plugin_la_OBJECTS)
 libjack_builtin_la_LIBADD =
-am__objects_41 = libjack_builtin_la-jack.lo
-am_libjack_builtin_la_OBJECTS = $(am__objects_41)
+am__objects_43 = libjack_builtin_la-jack.lo
+am_libjack_builtin_la_OBJECTS = $(am__objects_43)
 libjack_builtin_la_OBJECTS = $(am_libjack_builtin_la_OBJECTS)
 libjack_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_42 = libjack_plugin_la-jack.lo
-am_libjack_plugin_la_OBJECTS = $(am__objects_42)
+am__objects_44 = libjack_plugin_la-jack.lo
+am_libjack_plugin_la_OBJECTS = $(am__objects_44)
 libjack_plugin_la_OBJECTS = $(am_libjack_plugin_la_OBJECTS)
 liboss_builtin_la_LIBADD =
-am__objects_43 = liboss_builtin_la-oss.lo
-am_liboss_builtin_la_OBJECTS = $(am__objects_43)
+am__objects_45 = liboss_builtin_la-oss.lo
+am_liboss_builtin_la_OBJECTS = $(am__objects_45)
 liboss_builtin_la_OBJECTS = $(am_liboss_builtin_la_OBJECTS)
 liboss_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_44 = liboss_plugin_la-oss.lo
-am_liboss_plugin_la_OBJECTS = $(am__objects_44)
+am__objects_46 = liboss_plugin_la-oss.lo
+am_liboss_plugin_la_OBJECTS = $(am__objects_46)
 liboss_plugin_la_OBJECTS = $(am_liboss_plugin_la_OBJECTS)
 libportaudio_builtin_la_LIBADD =
-am__objects_45 = libportaudio_builtin_la-portaudio.lo
-am_libportaudio_builtin_la_OBJECTS = $(am__objects_45)
+am__objects_47 = libportaudio_builtin_la-portaudio.lo
+am_libportaudio_builtin_la_OBJECTS = $(am__objects_47)
 libportaudio_builtin_la_OBJECTS =  \
 	$(am_libportaudio_builtin_la_OBJECTS)
 libportaudio_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_46 = libportaudio_plugin_la-portaudio.lo
-am_libportaudio_plugin_la_OBJECTS = $(am__objects_46)
+am__objects_48 = libportaudio_plugin_la-portaudio.lo
+am_libportaudio_plugin_la_OBJECTS = $(am__objects_48)
 libportaudio_plugin_la_OBJECTS = $(am_libportaudio_plugin_la_OBJECTS)
+libpulse_builtin_la_LIBADD =
+am__objects_49 = libpulse_builtin_la-pulse.lo
+am_libpulse_builtin_la_OBJECTS = $(am__objects_49)
+libpulse_builtin_la_OBJECTS = $(am_libpulse_builtin_la_OBJECTS)
+libpulse_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_50 = libpulse_plugin_la-pulse.lo
+am_libpulse_plugin_la_OBJECTS = $(am__objects_50)
+libpulse_plugin_la_OBJECTS = $(am_libpulse_plugin_la_OBJECTS)
 libwaveout_builtin_la_LIBADD =
-am__objects_47 = libwaveout_builtin_la-waveout.lo
-am_libwaveout_builtin_la_OBJECTS = $(am__objects_47)
+am__objects_51 = libwaveout_builtin_la-waveout.lo
+am_libwaveout_builtin_la_OBJECTS = $(am__objects_51)
 libwaveout_builtin_la_OBJECTS = $(am_libwaveout_builtin_la_OBJECTS)
 libwaveout_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_48 = libwaveout_plugin_la-waveout.lo
-am_libwaveout_plugin_la_OBJECTS = $(am__objects_48)
+am__objects_52 = libwaveout_plugin_la-waveout.lo
+am_libwaveout_plugin_la_OBJECTS = $(am__objects_52)
 libwaveout_plugin_la_OBJECTS = $(am_libwaveout_plugin_la_OBJECTS)
 DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
@@ -325,7 +343,8 @@
 	$(libhd1000a_plugin_a_SOURCES) $(libjack_a_SOURCES) \
 	$(libjack_plugin_a_SOURCES) $(liboss_a_SOURCES) \
 	$(liboss_plugin_a_SOURCES) $(libportaudio_a_SOURCES) \
-	$(libportaudio_plugin_a_SOURCES) $(libwaveout_a_SOURCES) \
+	$(libportaudio_plugin_a_SOURCES) $(libpulse_a_SOURCES) \
+	$(libpulse_plugin_a_SOURCES) $(libwaveout_a_SOURCES) \
 	$(libwaveout_plugin_a_SOURCES) $(libalsa_builtin_la_SOURCES) \
 	$(libalsa_plugin_la_SOURCES) \
 	$(libaout_directx_builtin_la_SOURCES) \
@@ -341,6 +360,7 @@
 	$(libjack_plugin_la_SOURCES) $(liboss_builtin_la_SOURCES) \
 	$(liboss_plugin_la_SOURCES) $(libportaudio_builtin_la_SOURCES) \
 	$(libportaudio_plugin_la_SOURCES) \
+	$(libpulse_builtin_la_SOURCES) $(libpulse_plugin_la_SOURCES) \
 	$(libwaveout_builtin_la_SOURCES) \
 	$(libwaveout_plugin_la_SOURCES)
 DIST_SOURCES = $(libalsa_a_SOURCES) $(libalsa_plugin_a_SOURCES) \
@@ -354,7 +374,8 @@
 	$(libhd1000a_plugin_a_SOURCES) $(libjack_a_SOURCES) \
 	$(libjack_plugin_a_SOURCES) $(liboss_a_SOURCES) \
 	$(liboss_plugin_a_SOURCES) $(libportaudio_a_SOURCES) \
-	$(libportaudio_plugin_a_SOURCES) $(libwaveout_a_SOURCES) \
+	$(libportaudio_plugin_a_SOURCES) $(libpulse_a_SOURCES) \
+	$(libpulse_plugin_a_SOURCES) $(libwaveout_a_SOURCES) \
 	$(libwaveout_plugin_a_SOURCES) $(libalsa_builtin_la_SOURCES) \
 	$(libalsa_plugin_la_SOURCES) \
 	$(libaout_directx_builtin_la_SOURCES) \
@@ -370,6 +391,7 @@
 	$(libjack_plugin_la_SOURCES) $(liboss_builtin_la_SOURCES) \
 	$(liboss_plugin_la_SOURCES) $(libportaudio_builtin_la_SOURCES) \
 	$(libportaudio_plugin_la_SOURCES) \
+	$(libpulse_builtin_la_SOURCES) $(libpulse_plugin_la_SOURCES) \
 	$(libwaveout_builtin_la_SOURCES) \
 	$(libwaveout_plugin_la_SOURCES)
 RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
@@ -555,6 +577,8 @@
 POSTPROC_CFLAGS = @POSTPROC_CFLAGS@
 POSTPROC_LIBS = @POSTPROC_LIBS@
 POSUB = @POSUB@
+PULSE_CFLAGS = @PULSE_CFLAGS@
+PULSE_LIBS = @PULSE_LIBS@
 RANLIB = @RANLIB@
 SDL11_CONFIG = @SDL11_CONFIG@
 SDL12_CONFIG = @SDL12_CONFIG@
@@ -652,7 +676,7 @@
 target_vendor = @target_vendor@
 uudecode = @uudecode@
 basedir = audio_output
-mods = alsa arts aout_directx esd aout_file oss aout_sdl waveout hd1000a portaudio auhal jack
+mods = alsa arts aout_directx esd aout_file oss aout_sdl waveout hd1000a portaudio auhal jack pulse
 NULL = 
 libvlc_LTLIBRARIES = 
 noinst_LTLIBRARIES = 
@@ -662,8 +686,8 @@
 SUBDIRS = 
 SUFFIXES = _plugin$(LIBEXT) _plugin.a
 libvlcdir = $(libdir)/vlc/$(basedir)
-EXTRA_LIBRARIES = libalsa_plugin.a libalsa.a libarts_plugin.a libarts.a libaout_directx_plugin.a libaout_directx.a libesd_plugin.a libesd.a libaout_file_plugin.a libaout_file.a liboss_plugin.a liboss.a libaout_sdl_plugin.a libaout_sdl.a libwaveout_plugin.a libwaveout.a libhd1000a_plugin.a libhd1000a.a libportaudio_plugin.a libportaudio.a libauhal_plugin.a libauhal.a libjack_plugin.a libjack.a
-EXTRA_LTLIBRARIES = libalsa_plugin.la libalsa_builtin.la libarts_plugin.la libarts_builtin.la libaout_directx_plugin.la libaout_directx_builtin.la libesd_plugin.la libesd_builtin.la libaout_file_plugin.la libaout_file_builtin.la liboss_plugin.la liboss_builtin.la libaout_sdl_plugin.la libaout_sdl_builtin.la libwaveout_plugin.la libwaveout_builtin.la libhd1000a_plugin.la libhd1000a_builtin.la libportaudio_plugin.la libportaudio_builtin.la libauhal_plugin.la libauhal_builtin.la libjack_plugin.la libjack_builtin.la
+EXTRA_LIBRARIES = libalsa_plugin.a libalsa.a libarts_plugin.a libarts.a libaout_directx_plugin.a libaout_directx.a libesd_plugin.a libesd.a libaout_file_plugin.a libaout_file.a liboss_plugin.a liboss.a libaout_sdl_plugin.a libaout_sdl.a libwaveout_plugin.a libwaveout.a libhd1000a_plugin.a libhd1000a.a libportaudio_plugin.a libportaudio.a libauhal_plugin.a libauhal.a libjack_plugin.a libjack.a libpulse_plugin.a libpulse.a
+EXTRA_LTLIBRARIES = libalsa_plugin.la libalsa_builtin.la libarts_plugin.la libarts_builtin.la libaout_directx_plugin.la libaout_directx_builtin.la libesd_plugin.la libesd_builtin.la libaout_file_plugin.la libaout_file_builtin.la liboss_plugin.la liboss_builtin.la libaout_sdl_plugin.la libaout_sdl_builtin.la libwaveout_plugin.la libwaveout_builtin.la libhd1000a_plugin.la libhd1000a_builtin.la libportaudio_plugin.la libportaudio_builtin.la libauhal_plugin.la libauhal_builtin.la libjack_plugin.la libjack_builtin.la libpulse_plugin.la libpulse_builtin.la
 SOURCES_alsa = alsa.c
 SOURCES_arts = arts.c
 SOURCES_aout_directx = directx.c
@@ -676,6 +700,7 @@
 SOURCES_portaudio = portaudio.c
 SOURCES_auhal = auhal.c
 SOURCES_jack = jack.c
+SOURCES_pulse = pulse.c
 LTLIBVLC = $(top_builddir)/src/libvlc.la
 @BUILD_SHARED_TRUE@LIBVLC = $(top_builddir)/src/libvlc$(LIBEXT)
 @BUILD_SHARED_TRUE@LIBADD = $(LIBVLC)
@@ -943,6 +968,28 @@
 libjack_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin jack`
 libjack_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin jack`
 libjack_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin jack`
+
+# The pulse plugin
+libpulse_plugin_a_SOURCES = $(SOURCES_pulse)
+libpulse_plugin_la_SOURCES = $(SOURCES_pulse)
+libpulse_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin pulse`
+libpulse_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin pulse`
+libpulse_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin pulse`
+libpulse_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin pulse`
+libpulse_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin pulse`
+libpulse_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin pulse`
+libpulse_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin pulse` \
+	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)
+
+libpulse_plugin_la_LIBADD = $(LTLIBVLC)
+libpulse_a_SOURCES = $(SOURCES_pulse)
+libpulse_builtin_la_SOURCES = $(SOURCES_pulse)
+libpulse_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic pulse`
+libpulse_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic pulse`
+libpulse_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic pulse`
+libpulse_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin pulse`
+libpulse_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pulse`
+libpulse_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pulse`
 all: $(BUILT_SOURCES)
 	$(MAKE) $(AM_MAKEFLAGS) all-recursive
 
@@ -1065,6 +1112,14 @@
 	-rm -f libportaudio_plugin.a
 	$(libportaudio_plugin_a_AR) libportaudio_plugin.a $(libportaudio_plugin_a_OBJECTS) $(libportaudio_plugin_a_LIBADD)
 	$(RANLIB) libportaudio_plugin.a
+libpulse.a: $(libpulse_a_OBJECTS) $(libpulse_a_DEPENDENCIES) 
+	-rm -f libpulse.a
+	$(libpulse_a_AR) libpulse.a $(libpulse_a_OBJECTS) $(libpulse_a_LIBADD)
+	$(RANLIB) libpulse.a
+libpulse_plugin.a: $(libpulse_plugin_a_OBJECTS) $(libpulse_plugin_a_DEPENDENCIES) 
+	-rm -f libpulse_plugin.a
+	$(libpulse_plugin_a_AR) libpulse_plugin.a $(libpulse_plugin_a_OBJECTS) $(libpulse_plugin_a_LIBADD)
+	$(RANLIB) libpulse_plugin.a
 libwaveout.a: $(libwaveout_a_OBJECTS) $(libwaveout_a_DEPENDENCIES) 
 	-rm -f libwaveout.a
 	$(libwaveout_a_AR) libwaveout.a $(libwaveout_a_OBJECTS) $(libwaveout_a_LIBADD)
@@ -1153,6 +1208,10 @@
 	$(LINK)  $(libportaudio_builtin_la_LDFLAGS) $(libportaudio_builtin_la_OBJECTS) $(libportaudio_builtin_la_LIBADD) $(LIBS)
 libportaudio_plugin.la: $(libportaudio_plugin_la_OBJECTS) $(libportaudio_plugin_la_DEPENDENCIES) 
 	$(LINK)  $(libportaudio_plugin_la_LDFLAGS) $(libportaudio_plugin_la_OBJECTS) $(libportaudio_plugin_la_LIBADD) $(LIBS)
+libpulse_builtin.la: $(libpulse_builtin_la_OBJECTS) $(libpulse_builtin_la_DEPENDENCIES) 
+	$(LINK)  $(libpulse_builtin_la_LDFLAGS) $(libpulse_builtin_la_OBJECTS) $(libpulse_builtin_la_LIBADD) $(LIBS)
+libpulse_plugin.la: $(libpulse_plugin_la_OBJECTS) $(libpulse_plugin_la_DEPENDENCIES) 
+	$(LINK)  $(libpulse_plugin_la_LDFLAGS) $(libpulse_plugin_la_OBJECTS) $(libpulse_plugin_la_LIBADD) $(LIBS)
 libwaveout_builtin.la: $(libwaveout_builtin_la_OBJECTS) $(libwaveout_builtin_la_DEPENDENCIES) 
 	$(LINK)  $(libwaveout_builtin_la_LDFLAGS) $(libwaveout_builtin_la_OBJECTS) $(libwaveout_builtin_la_LIBADD) $(LIBS)
 libwaveout_plugin.la: $(libwaveout_plugin_la_OBJECTS) $(libwaveout_plugin_la_DEPENDENCIES) 
@@ -1208,6 +1267,10 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libportaudio_builtin_la-portaudio.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libportaudio_plugin_a-portaudio.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libportaudio_plugin_la-portaudio.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpulse_a-pulse.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpulse_builtin_la-pulse.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpulse_plugin_a-pulse.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpulse_plugin_la-pulse.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwaveout_a-waveout.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwaveout_builtin_la-waveout.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwaveout_plugin_a-waveout.Po@am__quote@
@@ -1514,6 +1577,34 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libportaudio_plugin_a_CFLAGS) $(CFLAGS) -c -o libportaudio_plugin_a-portaudio.obj `if test -f 'portaudio.c'; then $(CYGPATH_W) 'portaudio.c'; else $(CYGPATH_W) '$(srcdir)/portaudio.c'; fi`
 
+libpulse_a-pulse.o: pulse.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_a_CFLAGS) $(CFLAGS) -MT libpulse_a-pulse.o -MD -MP -MF "$(DEPDIR)/libpulse_a-pulse.Tpo" -c -o libpulse_a-pulse.o `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libpulse_a-pulse.Tpo" "$(DEPDIR)/libpulse_a-pulse.Po"; else rm -f "$(DEPDIR)/libpulse_a-pulse.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pulse.c' object='libpulse_a-pulse.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_a_CFLAGS) $(CFLAGS) -c -o libpulse_a-pulse.o `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c
+
+libpulse_a-pulse.obj: pulse.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_a_CFLAGS) $(CFLAGS) -MT libpulse_a-pulse.obj -MD -MP -MF "$(DEPDIR)/libpulse_a-pulse.Tpo" -c -o libpulse_a-pulse.obj `if test -f 'pulse.c'; then $(CYGPATH_W) 'pulse.c'; else $(CYGPATH_W) '$(srcdir)/pulse.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libpulse_a-pulse.Tpo" "$(DEPDIR)/libpulse_a-pulse.Po"; else rm -f "$(DEPDIR)/libpulse_a-pulse.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pulse.c' object='libpulse_a-pulse.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_a_CFLAGS) $(CFLAGS) -c -o libpulse_a-pulse.obj `if test -f 'pulse.c'; then $(CYGPATH_W) 'pulse.c'; else $(CYGPATH_W) '$(srcdir)/pulse.c'; fi`
+
+libpulse_plugin_a-pulse.o: pulse.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_a_CFLAGS) $(CFLAGS) -MT libpulse_plugin_a-pulse.o -MD -MP -MF "$(DEPDIR)/libpulse_plugin_a-pulse.Tpo" -c -o libpulse_plugin_a-pulse.o `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libpulse_plugin_a-pulse.Tpo" "$(DEPDIR)/libpulse_plugin_a-pulse.Po"; else rm -f "$(DEPDIR)/libpulse_plugin_a-pulse.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pulse.c' object='libpulse_plugin_a-pulse.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_a_CFLAGS) $(CFLAGS) -c -o libpulse_plugin_a-pulse.o `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c
+
+libpulse_plugin_a-pulse.obj: pulse.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_a_CFLAGS) $(CFLAGS) -MT libpulse_plugin_a-pulse.obj -MD -MP -MF "$(DEPDIR)/libpulse_plugin_a-pulse.Tpo" -c -o libpulse_plugin_a-pulse.obj `if test -f 'pulse.c'; then $(CYGPATH_W) 'pulse.c'; else $(CYGPATH_W) '$(srcdir)/pulse.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libpulse_plugin_a-pulse.Tpo" "$(DEPDIR)/libpulse_plugin_a-pulse.Po"; else rm -f "$(DEPDIR)/libpulse_plugin_a-pulse.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pulse.c' object='libpulse_plugin_a-pulse.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_a_CFLAGS) $(CFLAGS) -c -o libpulse_plugin_a-pulse.obj `if test -f 'pulse.c'; then $(CYGPATH_W) 'pulse.c'; else $(CYGPATH_W) '$(srcdir)/pulse.c'; fi`
+
 libwaveout_a-waveout.o: waveout.c
 @am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwaveout_a_CFLAGS) $(CFLAGS) -MT libwaveout_a-waveout.o -MD -MP -MF "$(DEPDIR)/libwaveout_a-waveout.Tpo" -c -o libwaveout_a-waveout.o `test -f 'waveout.c' || echo '$(srcdir)/'`waveout.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libwaveout_a-waveout.Tpo" "$(DEPDIR)/libwaveout_a-waveout.Po"; else rm -f "$(DEPDIR)/libwaveout_a-waveout.Tpo"; exit 1; fi
@@ -1682,6 +1773,20 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libportaudio_plugin_la_CFLAGS) $(CFLAGS) -c -o libportaudio_plugin_la-portaudio.lo `test -f 'portaudio.c' || echo '$(srcdir)/'`portaudio.c
 
+libpulse_builtin_la-pulse.lo: pulse.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_builtin_la_CFLAGS) $(CFLAGS) -MT libpulse_builtin_la-pulse.lo -MD -MP -MF "$(DEPDIR)/libpulse_builtin_la-pulse.Tpo" -c -o libpulse_builtin_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libpulse_builtin_la-pulse.Tpo" "$(DEPDIR)/libpulse_builtin_la-pulse.Plo"; else rm -f "$(DEPDIR)/libpulse_builtin_la-pulse.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pulse.c' object='libpulse_builtin_la-pulse.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_builtin_la_CFLAGS) $(CFLAGS) -c -o libpulse_builtin_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c
+
+libpulse_plugin_la-pulse.lo: pulse.c
+@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_la_CFLAGS) $(CFLAGS) -MT libpulse_plugin_la-pulse.lo -MD -MP -MF "$(DEPDIR)/libpulse_plugin_la-pulse.Tpo" -c -o libpulse_plugin_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libpulse_plugin_la-pulse.Tpo" "$(DEPDIR)/libpulse_plugin_la-pulse.Plo"; else rm -f "$(DEPDIR)/libpulse_plugin_la-pulse.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pulse.c' object='libpulse_plugin_la-pulse.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_la_CFLAGS) $(CFLAGS) -c -o libpulse_plugin_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c
+
 libwaveout_builtin_la-waveout.lo: waveout.c
 @am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwaveout_builtin_la_CFLAGS) $(CFLAGS) -MT libwaveout_builtin_la-waveout.lo -MD -MP -MF "$(DEPDIR)/libwaveout_builtin_la-waveout.Tpo" -c -o libwaveout_builtin_la-waveout.lo `test -f 'waveout.c' || echo '$(srcdir)/'`waveout.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libwaveout_builtin_la-waveout.Tpo" "$(DEPDIR)/libwaveout_builtin_la-waveout.Plo"; else rm -f "$(DEPDIR)/libwaveout_builtin_la-waveout.Tpo"; exit 1; fi
Index: vlc-0.8.6.e/modules/audio_output/Makefile.am
===================================================================
--- vlc-0.8.6.e.orig/modules/audio_output/Makefile.am	2008-02-25 06:06:43.000000000 +1100
+++ vlc-0.8.6.e/modules/audio_output/Makefile.am	2008-06-22 16:26:58.000000000 +1000
@@ -3,7 +3,7 @@
 # DO NOT EDIT - edit Modules.am or $(top_srcdir)/bootstrap instead
 
 basedir = audio_output
-mods = alsa arts aout_directx esd aout_file oss aout_sdl waveout hd1000a portaudio auhal jack
+mods = alsa arts aout_directx esd aout_file oss aout_sdl waveout hd1000a portaudio auhal jack pulse
 
 NULL =
 libvlc_LTLIBRARIES =
@@ -16,8 +16,8 @@
 
 libvlcdir = $(libdir)/vlc/$(basedir)
 
-EXTRA_LIBRARIES =  libalsa_plugin.a libalsa.a libarts_plugin.a libarts.a libaout_directx_plugin.a libaout_directx.a libesd_plugin.a libesd.a libaout_file_plugin.a libaout_file.a liboss_plugin.a liboss.a libaout_sdl_plugin.a libaout_sdl.a libwaveout_plugin.a libwaveout.a libhd1000a_plugin.a libhd1000a.a libportaudio_plugin.a libportaudio.a libauhal_plugin.a libauhal.a libjack_plugin.a libjack.a
-EXTRA_LTLIBRARIES =  libalsa_plugin.la libalsa_builtin.la libarts_plugin.la libarts_builtin.la libaout_directx_plugin.la libaout_directx_builtin.la libesd_plugin.la libesd_builtin.la libaout_file_plugin.la libaout_file_builtin.la liboss_plugin.la liboss_builtin.la libaout_sdl_plugin.la libaout_sdl_builtin.la libwaveout_plugin.la libwaveout_builtin.la libhd1000a_plugin.la libhd1000a_builtin.la libportaudio_plugin.la libportaudio_builtin.la libauhal_plugin.la libauhal_builtin.la libjack_plugin.la libjack_builtin.la
+EXTRA_LIBRARIES =  libalsa_plugin.a libalsa.a libarts_plugin.a libarts.a libaout_directx_plugin.a libaout_directx.a libesd_plugin.a libesd.a libaout_file_plugin.a libaout_file.a liboss_plugin.a liboss.a libaout_sdl_plugin.a libaout_sdl.a libwaveout_plugin.a libwaveout.a libhd1000a_plugin.a libhd1000a.a libportaudio_plugin.a libportaudio.a libauhal_plugin.a libauhal.a libjack_plugin.a libjack.a libpulse_plugin.a libpulse.a
+EXTRA_LTLIBRARIES =  libalsa_plugin.la libalsa_builtin.la libarts_plugin.la libarts_builtin.la libaout_directx_plugin.la libaout_directx_builtin.la libesd_plugin.la libesd_builtin.la libaout_file_plugin.la libaout_file_builtin.la liboss_plugin.la liboss_builtin.la libaout_sdl_plugin.la libaout_sdl_builtin.la libwaveout_plugin.la libwaveout_builtin.la libhd1000a_plugin.la libhd1000a_builtin.la libportaudio_plugin.la libportaudio_builtin.la libauhal_plugin.la libauhal_builtin.la libjack_plugin.la libjack_builtin.la libpulse_plugin.la libpulse_builtin.la
 
 include Modules.am
 
@@ -364,3 +364,26 @@
 libjack_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin jack`
 libjack_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin jack`
 
+# The pulse plugin
+
+libpulse_plugin_a_SOURCES = $(SOURCES_pulse)
+libpulse_plugin_la_SOURCES = $(SOURCES_pulse)
+libpulse_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin pulse`
+libpulse_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin pulse`
+libpulse_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin pulse`
+libpulse_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin pulse`
+libpulse_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin pulse`
+libpulse_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin pulse`
+libpulse_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin pulse` \
+	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)
+libpulse_plugin_la_LIBADD = $(LTLIBVLC)
+
+libpulse_a_SOURCES = $(SOURCES_pulse)
+libpulse_builtin_la_SOURCES = $(SOURCES_pulse)
+libpulse_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic pulse`
+libpulse_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic pulse`
+libpulse_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic pulse`
+libpulse_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin pulse`
+libpulse_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pulse`
+libpulse_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pulse`
+
