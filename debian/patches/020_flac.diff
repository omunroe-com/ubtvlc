Index: /trunk/THANKS
===================================================================
--- /trunk/THANKS (revision 18854)
+++ /trunk/THANKS (revision 18855)
@@ -25,4 +25,5 @@
 Arnaud Gomes-do-Vale <arnaud at carrosse.frmug.org> - autoconf patches
 Arwed v. Merkatz <v.merkatz at gmx dot net> - Gamma correction for adjust filter
+Ats (through Trac) - libFLAC >= 1.1.3 API support
 Aurelien - Patch for modules/stream_output/rtp.c proper test for NULL
 Basil Achermann <vlc at acherma dot com> - Patch to handle esc and space key events from VLCControl (OSX)
Index: /trunk/modules/codec/flac.c
===================================================================
--- /trunk/modules/codec/flac.c (revision 18062)
+++ /trunk/modules/codec/flac.c (revision 18855)
@@ -42,4 +42,8 @@
 #define MAX_FLAC_HEADER_SIZE 16
 
+#if defined(FLAC_API_VERSION_CURRENT) && FLAC_API_VERSION_CURRENT >= 8
+#   define USE_NEW_FLAC_API
+#endif
+
 /*****************************************************************************
  * decoder_sys_t : FLAC decoder descriptor
@@ -227,4 +231,23 @@
     }
 
+#ifdef USE_NEW_FLAC_API
+    if( FLAC__stream_decoder_init_stream( p_sys->p_flac,
+                                          DecoderReadCallback,
+                                          NULL,
+                                          NULL,
+                                          NULL,
+                                          NULL,
+                                          DecoderWriteCallback,
+                                          DecoderMetadataCallback,
+                                          DecoderErrorCallback,
+                                          p_dec )
+        != FLAC__STREAM_DECODER_INIT_STATUS_OK )
+    {
+        msg_Err( p_dec, "FLAC__stream_decoder_init_stream() failed" );
+        FLAC__stream_decoder_delete( p_sys->p_flac );
+        free( p_sys );
+        return VLC_EGENERIC;
+    }
+#else
     FLAC__stream_decoder_set_read_callback( p_sys->p_flac,
                                             DecoderReadCallback );
@@ -238,4 +261,5 @@
 
     FLAC__stream_decoder_init( p_sys->p_flac );
+#endif
 #endif
 
@@ -732,14 +756,25 @@
         msg_Dbg( p_dec, "the decoder has reached the end of the stream." );
         break;
+#ifdef USE_NEW_FLAC_API
+    case FLAC__STREAM_DECODER_OGG_ERROR:
+        msg_Err( p_dec, "error occurred in the Ogg layer." );
+        break;
+    case FLAC__STREAM_DECODER_SEEK_ERROR:
+        msg_Err( p_dec, "error occurred while seeking." );
+        break;
+#endif
     case FLAC__STREAM_DECODER_ABORTED:
         msg_Warn( p_dec, "the decoder was aborted by the read callback." );
         break;
+#ifndef USE_NEW_FLAC_API
     case FLAC__STREAM_DECODER_UNPARSEABLE_STREAM:
         msg_Warn( p_dec, "the decoder encountered reserved fields in use "
                  "in the stream." );
         break;
+#endif
     case FLAC__STREAM_DECODER_MEMORY_ALLOCATION_ERROR:
         msg_Err( p_dec, "error when allocating memory." );
         break;
+#ifndef USE_NEW_FLAC_API
     case FLAC__STREAM_DECODER_ALREADY_INITIALIZED:
         msg_Err( p_dec, "FLAC__stream_decoder_init() was called when the "
@@ -751,4 +786,5 @@
                  "all callbacks being set." );
         break;
+#endif
     case FLAC__STREAM_DECODER_UNINITIALIZED:
         msg_Err( p_dec, "decoder in uninitialized state." );
@@ -1185,5 +1221,10 @@
 
     /* Create flac encoder */
-    p_sys->p_flac = FLAC__stream_encoder_new();
+    if( !(p_sys->p_flac = FLAC__stream_encoder_new()) )
+    {
+        msg_Err( p_enc, "FLAC__stream_encoder_new() failed" );
+        free( p_sys );
+        return VLC_EGENERIC;
+    }
 
     FLAC__stream_encoder_set_streamable_subset( p_sys->p_flac, 1 );
@@ -1195,4 +1236,22 @@
     p_enc->fmt_in.i_codec = AOUT_FMT_S16_NE;
 
+    /* Get and store the STREAMINFO metadata block as a p_extra */
+    p_sys->p_chain = 0;
+
+#ifdef USE_NEW_FLAC_API
+    if( FLAC__stream_encoder_init_stream( p_sys->p_flac,
+                                          EncoderWriteCallback,
+                                          NULL,
+                                          NULL,
+                                          EncoderMetadataCallback,
+                                          p_enc )
+        != FLAC__STREAM_ENCODER_INIT_STATUS_OK )
+    {
+        msg_Err( p_enc, "FLAC__stream_encoder_init_stream() failed" );
+        FLAC__stream_encoder_delete( p_sys->p_flac );
+        free( p_sys );
+        return VLC_EGENERIC;
+    }
+#else
     FLAC__stream_encoder_set_write_callback( p_sys->p_flac,
         EncoderWriteCallback );
@@ -1201,7 +1260,6 @@
     FLAC__stream_encoder_set_client_data( p_sys->p_flac, p_enc );
 
-    /* Get and store the STREAMINFO metadata block as a p_extra */
-    p_sys->p_chain = 0;
     FLAC__stream_encoder_init( p_sys->p_flac );
+#endif
 
     return VLC_SUCCESS;

