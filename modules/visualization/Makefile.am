
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = visual galaktos
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/visualization
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in goom xosd; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in goom xosd; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in goom xosd; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The goom plugin

if UNTRUE
Lgoomp = libgoom_plugin.a
Dgoomp = libgoom_plugin$(LIBEXT)
Lgoomb = libgoom.a
Lgoompic = libgoom_pic.a
endif

libgoom_plugin_a_SOURCES = $(SOURCES_goom)
libgoom_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin goom`
libgoom_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin goom`
libgoom_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin goom`

libgoom_pic_a_SOURCES = $(SOURCES_goom)
libgoom_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic goom`
libgoom_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic goom`
libgoom_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic goom`

libgoom_a_SOURCES = $(SOURCES_goom)
libgoom_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin goom`
libgoom_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin goom`
libgoom_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin goom`

libvlc_LIBRARIES += $(Lgoomb) $(Lgoompic)
libgoom_DATA = $(Dgoomp)

libgoomdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lgoomp)
libgoom_plugin$(LIBEXT): $(libgoom_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage goom` in \
	  c++) echo $(CXXLINK) $(libgoom_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin goom\` ; $(CXXLINK) $(libgoom_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin goom` ;; \
	  objc) echo $(OBJCLINK) $(libgoom_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin goom\` ; $(OBJCLINK) $(libgoom_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin goom` ;; \
	  c|*) echo $(LINK) $(libgoom_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin goom\` ; $(LINK) $(libgoom_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin goom` ;; \
	esac


# The xosd plugin

if UNTRUE
Lxosdp = libxosd_plugin.a
Dxosdp = libxosd_plugin$(LIBEXT)
Lxosdb = libxosd.a
Lxosdpic = libxosd_pic.a
endif

libxosd_plugin_a_SOURCES = $(SOURCES_xosd)
libxosd_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin xosd`
libxosd_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin xosd`
libxosd_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin xosd`

libxosd_pic_a_SOURCES = $(SOURCES_xosd)
libxosd_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic xosd`
libxosd_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic xosd`
libxosd_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic xosd`

libxosd_a_SOURCES = $(SOURCES_xosd)
libxosd_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin xosd`
libxosd_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin xosd`
libxosd_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin xosd`

libvlc_LIBRARIES += $(Lxosdb) $(Lxosdpic)
libxosd_DATA = $(Dxosdp)

libxosddir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lxosdp)
libxosd_plugin$(LIBEXT): $(libxosd_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage xosd` in \
	  c++) echo $(CXXLINK) $(libxosd_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xosd\` ; $(CXXLINK) $(libxosd_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xosd` ;; \
	  objc) echo $(OBJCLINK) $(libxosd_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xosd\` ; $(OBJCLINK) $(libxosd_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xosd` ;; \
	  c|*) echo $(LINK) $(libxosd_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xosd\` ; $(LINK) $(libxosd_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xosd` ;; \
	esac


