
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = dummy memcpy network testsuite playlist
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/misc
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in gtk_main gnome_main gtk2_main gnome2_main sap screensaver qte_main freetype logger vod_rtsp gnutls svg; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in gtk_main gnome_main gtk2_main gnome2_main sap screensaver qte_main freetype logger vod_rtsp gnutls svg; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in gtk_main gnome_main gtk2_main gnome2_main sap screensaver qte_main freetype logger vod_rtsp gnutls svg; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The gtk_main plugin

if UNTRUE
Lgtk_mainp = libgtk_main_plugin.a
Dgtk_mainp = libgtk_main_plugin$(LIBEXT)
Lgtk_mainb = libgtk_main.a
Lgtk_mainpic = libgtk_main_pic.a
endif

libgtk_main_plugin_a_SOURCES = $(SOURCES_gtk_main)
libgtk_main_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin gtk_main`
libgtk_main_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin gtk_main`
libgtk_main_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin gtk_main`

libgtk_main_pic_a_SOURCES = $(SOURCES_gtk_main)
libgtk_main_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic gtk_main`
libgtk_main_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic gtk_main`
libgtk_main_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic gtk_main`

libgtk_main_a_SOURCES = $(SOURCES_gtk_main)
libgtk_main_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin gtk_main`
libgtk_main_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin gtk_main`
libgtk_main_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin gtk_main`

libvlc_LIBRARIES += $(Lgtk_mainb) $(Lgtk_mainpic)
libgtk_main_DATA = $(Dgtk_mainp)

libgtk_maindir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lgtk_mainp)
libgtk_main_plugin$(LIBEXT): $(libgtk_main_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage gtk_main` in \
	  c++) echo $(CXXLINK) $(libgtk_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gtk_main\` ; $(CXXLINK) $(libgtk_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gtk_main` ;; \
	  objc) echo $(OBJCLINK) $(libgtk_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gtk_main\` ; $(OBJCLINK) $(libgtk_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gtk_main` ;; \
	  c|*) echo $(LINK) $(libgtk_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gtk_main\` ; $(LINK) $(libgtk_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gtk_main` ;; \
	esac


# The gnome_main plugin

if UNTRUE
Lgnome_mainp = libgnome_main_plugin.a
Dgnome_mainp = libgnome_main_plugin$(LIBEXT)
Lgnome_mainb = libgnome_main.a
Lgnome_mainpic = libgnome_main_pic.a
endif

libgnome_main_plugin_a_SOURCES = $(SOURCES_gnome_main)
libgnome_main_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin gnome_main`
libgnome_main_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin gnome_main`
libgnome_main_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin gnome_main`

libgnome_main_pic_a_SOURCES = $(SOURCES_gnome_main)
libgnome_main_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic gnome_main`
libgnome_main_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic gnome_main`
libgnome_main_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic gnome_main`

libgnome_main_a_SOURCES = $(SOURCES_gnome_main)
libgnome_main_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin gnome_main`
libgnome_main_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin gnome_main`
libgnome_main_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin gnome_main`

libvlc_LIBRARIES += $(Lgnome_mainb) $(Lgnome_mainpic)
libgnome_main_DATA = $(Dgnome_mainp)

libgnome_maindir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lgnome_mainp)
libgnome_main_plugin$(LIBEXT): $(libgnome_main_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage gnome_main` in \
	  c++) echo $(CXXLINK) $(libgnome_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnome_main\` ; $(CXXLINK) $(libgnome_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnome_main` ;; \
	  objc) echo $(OBJCLINK) $(libgnome_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnome_main\` ; $(OBJCLINK) $(libgnome_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnome_main` ;; \
	  c|*) echo $(LINK) $(libgnome_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnome_main\` ; $(LINK) $(libgnome_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnome_main` ;; \
	esac


# The gtk2_main plugin

if UNTRUE
Lgtk2_mainp = libgtk2_main_plugin.a
Dgtk2_mainp = libgtk2_main_plugin$(LIBEXT)
Lgtk2_mainb = libgtk2_main.a
Lgtk2_mainpic = libgtk2_main_pic.a
endif

libgtk2_main_plugin_a_SOURCES = $(SOURCES_gtk2_main)
libgtk2_main_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin gtk2_main`
libgtk2_main_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin gtk2_main`
libgtk2_main_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin gtk2_main`

libgtk2_main_pic_a_SOURCES = $(SOURCES_gtk2_main)
libgtk2_main_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic gtk2_main`
libgtk2_main_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic gtk2_main`
libgtk2_main_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic gtk2_main`

libgtk2_main_a_SOURCES = $(SOURCES_gtk2_main)
libgtk2_main_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin gtk2_main`
libgtk2_main_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin gtk2_main`
libgtk2_main_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin gtk2_main`

libvlc_LIBRARIES += $(Lgtk2_mainb) $(Lgtk2_mainpic)
libgtk2_main_DATA = $(Dgtk2_mainp)

libgtk2_maindir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lgtk2_mainp)
libgtk2_main_plugin$(LIBEXT): $(libgtk2_main_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage gtk2_main` in \
	  c++) echo $(CXXLINK) $(libgtk2_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gtk2_main\` ; $(CXXLINK) $(libgtk2_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gtk2_main` ;; \
	  objc) echo $(OBJCLINK) $(libgtk2_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gtk2_main\` ; $(OBJCLINK) $(libgtk2_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gtk2_main` ;; \
	  c|*) echo $(LINK) $(libgtk2_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gtk2_main\` ; $(LINK) $(libgtk2_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gtk2_main` ;; \
	esac


# The gnome2_main plugin

if UNTRUE
Lgnome2_mainp = libgnome2_main_plugin.a
Dgnome2_mainp = libgnome2_main_plugin$(LIBEXT)
Lgnome2_mainb = libgnome2_main.a
Lgnome2_mainpic = libgnome2_main_pic.a
endif

libgnome2_main_plugin_a_SOURCES = $(SOURCES_gnome2_main)
libgnome2_main_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin gnome2_main`
libgnome2_main_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin gnome2_main`
libgnome2_main_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin gnome2_main`

libgnome2_main_pic_a_SOURCES = $(SOURCES_gnome2_main)
libgnome2_main_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic gnome2_main`
libgnome2_main_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic gnome2_main`
libgnome2_main_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic gnome2_main`

libgnome2_main_a_SOURCES = $(SOURCES_gnome2_main)
libgnome2_main_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin gnome2_main`
libgnome2_main_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin gnome2_main`
libgnome2_main_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin gnome2_main`

libvlc_LIBRARIES += $(Lgnome2_mainb) $(Lgnome2_mainpic)
libgnome2_main_DATA = $(Dgnome2_mainp)

libgnome2_maindir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lgnome2_mainp)
libgnome2_main_plugin$(LIBEXT): $(libgnome2_main_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage gnome2_main` in \
	  c++) echo $(CXXLINK) $(libgnome2_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnome2_main\` ; $(CXXLINK) $(libgnome2_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnome2_main` ;; \
	  objc) echo $(OBJCLINK) $(libgnome2_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnome2_main\` ; $(OBJCLINK) $(libgnome2_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnome2_main` ;; \
	  c|*) echo $(LINK) $(libgnome2_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnome2_main\` ; $(LINK) $(libgnome2_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnome2_main` ;; \
	esac


# The sap plugin

if UNTRUE
Lsapp = libsap_plugin.a
Dsapp = libsap_plugin$(LIBEXT)
Lsapb = libsap.a
Lsappic = libsap_pic.a
endif

libsap_plugin_a_SOURCES = $(SOURCES_sap)
libsap_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin sap`
libsap_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin sap`
libsap_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin sap`

libsap_pic_a_SOURCES = $(SOURCES_sap)
libsap_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic sap`
libsap_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic sap`
libsap_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic sap`

libsap_a_SOURCES = $(SOURCES_sap)
libsap_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin sap`
libsap_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin sap`
libsap_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin sap`

libvlc_LIBRARIES += $(Lsapb) $(Lsappic)
libsap_DATA = $(Dsapp)

libsapdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lsapp)
libsap_plugin$(LIBEXT): $(libsap_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage sap` in \
	  c++) echo $(CXXLINK) $(libsap_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin sap\` ; $(CXXLINK) $(libsap_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin sap` ;; \
	  objc) echo $(OBJCLINK) $(libsap_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin sap\` ; $(OBJCLINK) $(libsap_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin sap` ;; \
	  c|*) echo $(LINK) $(libsap_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin sap\` ; $(LINK) $(libsap_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin sap` ;; \
	esac


# The screensaver plugin

if UNTRUE
Lscreensaverp = libscreensaver_plugin.a
Dscreensaverp = libscreensaver_plugin$(LIBEXT)
Lscreensaverb = libscreensaver.a
Lscreensaverpic = libscreensaver_pic.a
endif

libscreensaver_plugin_a_SOURCES = $(SOURCES_screensaver)
libscreensaver_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin screensaver`
libscreensaver_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin screensaver`
libscreensaver_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin screensaver`

libscreensaver_pic_a_SOURCES = $(SOURCES_screensaver)
libscreensaver_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic screensaver`
libscreensaver_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic screensaver`
libscreensaver_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic screensaver`

libscreensaver_a_SOURCES = $(SOURCES_screensaver)
libscreensaver_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin screensaver`
libscreensaver_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin screensaver`
libscreensaver_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin screensaver`

libvlc_LIBRARIES += $(Lscreensaverb) $(Lscreensaverpic)
libscreensaver_DATA = $(Dscreensaverp)

libscreensaverdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lscreensaverp)
libscreensaver_plugin$(LIBEXT): $(libscreensaver_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage screensaver` in \
	  c++) echo $(CXXLINK) $(libscreensaver_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin screensaver\` ; $(CXXLINK) $(libscreensaver_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin screensaver` ;; \
	  objc) echo $(OBJCLINK) $(libscreensaver_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin screensaver\` ; $(OBJCLINK) $(libscreensaver_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin screensaver` ;; \
	  c|*) echo $(LINK) $(libscreensaver_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin screensaver\` ; $(LINK) $(libscreensaver_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin screensaver` ;; \
	esac


# The qte_main plugin

if UNTRUE
Lqte_mainp = libqte_main_plugin.a
Dqte_mainp = libqte_main_plugin$(LIBEXT)
Lqte_mainb = libqte_main.a
Lqte_mainpic = libqte_main_pic.a
endif

libqte_main_plugin_a_SOURCES = $(SOURCES_qte_main)
libqte_main_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin qte_main`
libqte_main_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin qte_main`
libqte_main_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin qte_main`

libqte_main_pic_a_SOURCES = $(SOURCES_qte_main)
libqte_main_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic qte_main`
libqte_main_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic qte_main`
libqte_main_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic qte_main`

libqte_main_a_SOURCES = $(SOURCES_qte_main)
libqte_main_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin qte_main`
libqte_main_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin qte_main`
libqte_main_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin qte_main`

libvlc_LIBRARIES += $(Lqte_mainb) $(Lqte_mainpic)
libqte_main_DATA = $(Dqte_mainp)

libqte_maindir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lqte_mainp)
libqte_main_plugin$(LIBEXT): $(libqte_main_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage qte_main` in \
	  c++) echo $(CXXLINK) $(libqte_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin qte_main\` ; $(CXXLINK) $(libqte_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin qte_main` ;; \
	  objc) echo $(OBJCLINK) $(libqte_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin qte_main\` ; $(OBJCLINK) $(libqte_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin qte_main` ;; \
	  c|*) echo $(LINK) $(libqte_main_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin qte_main\` ; $(LINK) $(libqte_main_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin qte_main` ;; \
	esac


# The freetype plugin

if UNTRUE
Lfreetypep = libfreetype_plugin.a
Dfreetypep = libfreetype_plugin$(LIBEXT)
Lfreetypeb = libfreetype.a
Lfreetypepic = libfreetype_pic.a
endif

libfreetype_plugin_a_SOURCES = $(SOURCES_freetype)
libfreetype_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin freetype`
libfreetype_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin freetype`
libfreetype_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin freetype`

libfreetype_pic_a_SOURCES = $(SOURCES_freetype)
libfreetype_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic freetype`
libfreetype_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic freetype`
libfreetype_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic freetype`

libfreetype_a_SOURCES = $(SOURCES_freetype)
libfreetype_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin freetype`
libfreetype_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin freetype`
libfreetype_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin freetype`

libvlc_LIBRARIES += $(Lfreetypeb) $(Lfreetypepic)
libfreetype_DATA = $(Dfreetypep)

libfreetypedir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfreetypep)
libfreetype_plugin$(LIBEXT): $(libfreetype_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage freetype` in \
	  c++) echo $(CXXLINK) $(libfreetype_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin freetype\` ; $(CXXLINK) $(libfreetype_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin freetype` ;; \
	  objc) echo $(OBJCLINK) $(libfreetype_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin freetype\` ; $(OBJCLINK) $(libfreetype_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin freetype` ;; \
	  c|*) echo $(LINK) $(libfreetype_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin freetype\` ; $(LINK) $(libfreetype_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin freetype` ;; \
	esac


# The logger plugin

if UNTRUE
Lloggerp = liblogger_plugin.a
Dloggerp = liblogger_plugin$(LIBEXT)
Lloggerb = liblogger.a
Lloggerpic = liblogger_pic.a
endif

liblogger_plugin_a_SOURCES = $(SOURCES_logger)
liblogger_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin logger`
liblogger_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin logger`
liblogger_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin logger`

liblogger_pic_a_SOURCES = $(SOURCES_logger)
liblogger_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic logger`
liblogger_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic logger`
liblogger_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic logger`

liblogger_a_SOURCES = $(SOURCES_logger)
liblogger_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin logger`
liblogger_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin logger`
liblogger_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin logger`

libvlc_LIBRARIES += $(Lloggerb) $(Lloggerpic)
liblogger_DATA = $(Dloggerp)

libloggerdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lloggerp)
liblogger_plugin$(LIBEXT): $(liblogger_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage logger` in \
	  c++) echo $(CXXLINK) $(liblogger_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin logger\` ; $(CXXLINK) $(liblogger_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin logger` ;; \
	  objc) echo $(OBJCLINK) $(liblogger_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin logger\` ; $(OBJCLINK) $(liblogger_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin logger` ;; \
	  c|*) echo $(LINK) $(liblogger_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin logger\` ; $(LINK) $(liblogger_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin logger` ;; \
	esac


# The vod_rtsp plugin

if UNTRUE
Lvod_rtspp = libvod_rtsp_plugin.a
Dvod_rtspp = libvod_rtsp_plugin$(LIBEXT)
Lvod_rtspb = libvod_rtsp.a
Lvod_rtsppic = libvod_rtsp_pic.a
endif

libvod_rtsp_plugin_a_SOURCES = $(SOURCES_vod_rtsp)
libvod_rtsp_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin vod_rtsp`
libvod_rtsp_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin vod_rtsp`
libvod_rtsp_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin vod_rtsp`

libvod_rtsp_pic_a_SOURCES = $(SOURCES_vod_rtsp)
libvod_rtsp_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic vod_rtsp`
libvod_rtsp_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic vod_rtsp`
libvod_rtsp_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic vod_rtsp`

libvod_rtsp_a_SOURCES = $(SOURCES_vod_rtsp)
libvod_rtsp_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin vod_rtsp`
libvod_rtsp_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin vod_rtsp`
libvod_rtsp_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin vod_rtsp`

libvlc_LIBRARIES += $(Lvod_rtspb) $(Lvod_rtsppic)
libvod_rtsp_DATA = $(Dvod_rtspp)

libvod_rtspdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lvod_rtspp)
libvod_rtsp_plugin$(LIBEXT): $(libvod_rtsp_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage vod_rtsp` in \
	  c++) echo $(CXXLINK) $(libvod_rtsp_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vod_rtsp\` ; $(CXXLINK) $(libvod_rtsp_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vod_rtsp` ;; \
	  objc) echo $(OBJCLINK) $(libvod_rtsp_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vod_rtsp\` ; $(OBJCLINK) $(libvod_rtsp_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vod_rtsp` ;; \
	  c|*) echo $(LINK) $(libvod_rtsp_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vod_rtsp\` ; $(LINK) $(libvod_rtsp_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vod_rtsp` ;; \
	esac


# The gnutls plugin

if UNTRUE
Lgnutlsp = libgnutls_plugin.a
Dgnutlsp = libgnutls_plugin$(LIBEXT)
Lgnutlsb = libgnutls.a
Lgnutlspic = libgnutls_pic.a
endif

libgnutls_plugin_a_SOURCES = $(SOURCES_gnutls)
libgnutls_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin gnutls`
libgnutls_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin gnutls`
libgnutls_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin gnutls`

libgnutls_pic_a_SOURCES = $(SOURCES_gnutls)
libgnutls_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic gnutls`
libgnutls_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic gnutls`
libgnutls_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic gnutls`

libgnutls_a_SOURCES = $(SOURCES_gnutls)
libgnutls_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin gnutls`
libgnutls_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin gnutls`
libgnutls_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin gnutls`

libvlc_LIBRARIES += $(Lgnutlsb) $(Lgnutlspic)
libgnutls_DATA = $(Dgnutlsp)

libgnutlsdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lgnutlsp)
libgnutls_plugin$(LIBEXT): $(libgnutls_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage gnutls` in \
	  c++) echo $(CXXLINK) $(libgnutls_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnutls\` ; $(CXXLINK) $(libgnutls_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnutls` ;; \
	  objc) echo $(OBJCLINK) $(libgnutls_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnutls\` ; $(OBJCLINK) $(libgnutls_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnutls` ;; \
	  c|*) echo $(LINK) $(libgnutls_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin gnutls\` ; $(LINK) $(libgnutls_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin gnutls` ;; \
	esac


# The svg plugin

if UNTRUE
Lsvgp = libsvg_plugin.a
Dsvgp = libsvg_plugin$(LIBEXT)
Lsvgb = libsvg.a
Lsvgpic = libsvg_pic.a
endif

libsvg_plugin_a_SOURCES = $(SOURCES_svg)
libsvg_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin svg`
libsvg_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin svg`
libsvg_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin svg`

libsvg_pic_a_SOURCES = $(SOURCES_svg)
libsvg_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic svg`
libsvg_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic svg`
libsvg_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic svg`

libsvg_a_SOURCES = $(SOURCES_svg)
libsvg_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin svg`
libsvg_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin svg`
libsvg_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin svg`

libvlc_LIBRARIES += $(Lsvgb) $(Lsvgpic)
libsvg_DATA = $(Dsvgp)

libsvgdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lsvgp)
libsvg_plugin$(LIBEXT): $(libsvg_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage svg` in \
	  c++) echo $(CXXLINK) $(libsvg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svg\` ; $(CXXLINK) $(libsvg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svg` ;; \
	  objc) echo $(OBJCLINK) $(libsvg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svg\` ; $(OBJCLINK) $(libsvg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svg` ;; \
	  c|*) echo $(LINK) $(libsvg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svg\` ; $(LINK) $(libsvg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svg` ;; \
	esac


