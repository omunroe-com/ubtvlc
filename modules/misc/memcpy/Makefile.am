
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/misc
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in memcpy memcpymmx memcpymmxext memcpy3dn memcpyaltivec; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in memcpy memcpymmx memcpymmxext memcpy3dn memcpyaltivec; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in memcpy memcpymmx memcpymmxext memcpy3dn memcpyaltivec; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The memcpy plugin

if UNTRUE
Lmemcpyp = libmemcpy_plugin.a
Dmemcpyp = libmemcpy_plugin$(LIBEXT)
Lmemcpyb = libmemcpy.a
Lmemcpypic = libmemcpy_pic.a
endif

libmemcpy_plugin_a_SOURCES = $(SOURCES_memcpy)
libmemcpy_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpy`
libmemcpy_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpy`
libmemcpy_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpy`

libmemcpy_pic_a_SOURCES = $(SOURCES_memcpy)
libmemcpy_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpy`
libmemcpy_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpy`
libmemcpy_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpy`

libmemcpy_a_SOURCES = $(SOURCES_memcpy)
libmemcpy_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpy`
libmemcpy_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpy`
libmemcpy_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpy`

libvlc_LIBRARIES += $(Lmemcpyb) $(Lmemcpypic)
libmemcpy_DATA = $(Dmemcpyp)

libmemcpydir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmemcpyp)
libmemcpy_plugin$(LIBEXT): $(libmemcpy_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage memcpy` in \
	  c++) echo $(CXXLINK) $(libmemcpy_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpy\` ; $(CXXLINK) $(libmemcpy_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpy` ;; \
	  objc) echo $(OBJCLINK) $(libmemcpy_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpy\` ; $(OBJCLINK) $(libmemcpy_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpy` ;; \
	  c|*) echo $(LINK) $(libmemcpy_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpy\` ; $(LINK) $(libmemcpy_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpy` ;; \
	esac


# The memcpymmx plugin

if UNTRUE
Lmemcpymmxp = libmemcpymmx_plugin.a
Dmemcpymmxp = libmemcpymmx_plugin$(LIBEXT)
Lmemcpymmxb = libmemcpymmx.a
Lmemcpymmxpic = libmemcpymmx_pic.a
endif

libmemcpymmx_plugin_a_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpymmx`
libmemcpymmx_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpymmx`
libmemcpymmx_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpymmx`

libmemcpymmx_pic_a_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpymmx`
libmemcpymmx_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpymmx`
libmemcpymmx_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpymmx`

libmemcpymmx_a_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpymmx`
libmemcpymmx_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpymmx`
libmemcpymmx_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpymmx`

libvlc_LIBRARIES += $(Lmemcpymmxb) $(Lmemcpymmxpic)
libmemcpymmx_DATA = $(Dmemcpymmxp)

libmemcpymmxdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmemcpymmxp)
libmemcpymmx_plugin$(LIBEXT): $(libmemcpymmx_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage memcpymmx` in \
	  c++) echo $(CXXLINK) $(libmemcpymmx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpymmx\` ; $(CXXLINK) $(libmemcpymmx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpymmx` ;; \
	  objc) echo $(OBJCLINK) $(libmemcpymmx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpymmx\` ; $(OBJCLINK) $(libmemcpymmx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpymmx` ;; \
	  c|*) echo $(LINK) $(libmemcpymmx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpymmx\` ; $(LINK) $(libmemcpymmx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpymmx` ;; \
	esac


# The memcpymmxext plugin

if UNTRUE
Lmemcpymmxextp = libmemcpymmxext_plugin.a
Dmemcpymmxextp = libmemcpymmxext_plugin$(LIBEXT)
Lmemcpymmxextb = libmemcpymmxext.a
Lmemcpymmxextpic = libmemcpymmxext_pic.a
endif

libmemcpymmxext_plugin_a_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpymmxext`
libmemcpymmxext_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpymmxext`
libmemcpymmxext_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpymmxext`

libmemcpymmxext_pic_a_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpymmxext`
libmemcpymmxext_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpymmxext`
libmemcpymmxext_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpymmxext`

libmemcpymmxext_a_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpymmxext`
libmemcpymmxext_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpymmxext`
libmemcpymmxext_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpymmxext`

libvlc_LIBRARIES += $(Lmemcpymmxextb) $(Lmemcpymmxextpic)
libmemcpymmxext_DATA = $(Dmemcpymmxextp)

libmemcpymmxextdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmemcpymmxextp)
libmemcpymmxext_plugin$(LIBEXT): $(libmemcpymmxext_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage memcpymmxext` in \
	  c++) echo $(CXXLINK) $(libmemcpymmxext_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpymmxext\` ; $(CXXLINK) $(libmemcpymmxext_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpymmxext` ;; \
	  objc) echo $(OBJCLINK) $(libmemcpymmxext_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpymmxext\` ; $(OBJCLINK) $(libmemcpymmxext_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpymmxext` ;; \
	  c|*) echo $(LINK) $(libmemcpymmxext_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpymmxext\` ; $(LINK) $(libmemcpymmxext_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpymmxext` ;; \
	esac


# The memcpy3dn plugin

if UNTRUE
Lmemcpy3dnp = libmemcpy3dn_plugin.a
Dmemcpy3dnp = libmemcpy3dn_plugin$(LIBEXT)
Lmemcpy3dnb = libmemcpy3dn.a
Lmemcpy3dnpic = libmemcpy3dn_pic.a
endif

libmemcpy3dn_plugin_a_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpy3dn`
libmemcpy3dn_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpy3dn`
libmemcpy3dn_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpy3dn`

libmemcpy3dn_pic_a_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpy3dn`
libmemcpy3dn_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpy3dn`
libmemcpy3dn_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpy3dn`

libmemcpy3dn_a_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpy3dn`
libmemcpy3dn_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpy3dn`
libmemcpy3dn_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpy3dn`

libvlc_LIBRARIES += $(Lmemcpy3dnb) $(Lmemcpy3dnpic)
libmemcpy3dn_DATA = $(Dmemcpy3dnp)

libmemcpy3dndir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmemcpy3dnp)
libmemcpy3dn_plugin$(LIBEXT): $(libmemcpy3dn_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage memcpy3dn` in \
	  c++) echo $(CXXLINK) $(libmemcpy3dn_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpy3dn\` ; $(CXXLINK) $(libmemcpy3dn_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpy3dn` ;; \
	  objc) echo $(OBJCLINK) $(libmemcpy3dn_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpy3dn\` ; $(OBJCLINK) $(libmemcpy3dn_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpy3dn` ;; \
	  c|*) echo $(LINK) $(libmemcpy3dn_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpy3dn\` ; $(LINK) $(libmemcpy3dn_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpy3dn` ;; \
	esac


# The memcpyaltivec plugin

if UNTRUE
Lmemcpyaltivecp = libmemcpyaltivec_plugin.a
Dmemcpyaltivecp = libmemcpyaltivec_plugin$(LIBEXT)
Lmemcpyaltivecb = libmemcpyaltivec.a
Lmemcpyaltivecpic = libmemcpyaltivec_pic.a
endif

libmemcpyaltivec_plugin_a_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpyaltivec`

libmemcpyaltivec_pic_a_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpyaltivec`
libmemcpyaltivec_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpyaltivec`
libmemcpyaltivec_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpyaltivec`

libmemcpyaltivec_a_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpyaltivec`
libmemcpyaltivec_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpyaltivec`
libmemcpyaltivec_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpyaltivec`

libvlc_LIBRARIES += $(Lmemcpyaltivecb) $(Lmemcpyaltivecpic)
libmemcpyaltivec_DATA = $(Dmemcpyaltivecp)

libmemcpyaltivecdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmemcpyaltivecp)
libmemcpyaltivec_plugin$(LIBEXT): $(libmemcpyaltivec_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage memcpyaltivec` in \
	  c++) echo $(CXXLINK) $(libmemcpyaltivec_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpyaltivec\` ; $(CXXLINK) $(libmemcpyaltivec_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpyaltivec` ;; \
	  objc) echo $(OBJCLINK) $(libmemcpyaltivec_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpyaltivec\` ; $(OBJCLINK) $(libmemcpyaltivec_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpyaltivec` ;; \
	  c|*) echo $(LINK) $(libmemcpyaltivec_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin memcpyaltivec\` ; $(LINK) $(libmemcpyaltivec_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin memcpyaltivec` ;; \
	esac


