# Makefile.in generated by automake 1.7.9 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# modules/misc/memcpy/Makefile.am automatically generated from modules/misc/memcpy/Modules.am by bootstrap
# DO NOT EDIT - edit Modules.am or $(top_srcdir)/bootstrap instead

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
ALIASES = @ALIASES@
ALLOCA = @ALLOCA@
ALL_LINGUAS = @ALL_LINGUAS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AM_CPPFLAGS = @AM_CPPFLAGS@
AR = @AR@
ARCH = @ARCH@
ARTS_CONFIG = @ARTS_CONFIG@
AS = @AS@
ASM = @ASM@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BONJOUR_CFLAGS = @BONJOUR_CFLAGS@
BONJOUR_LIBS = @BONJOUR_LIBS@
BUILD_ACTIVEX_FALSE = @BUILD_ACTIVEX_FALSE@
BUILD_ACTIVEX_TRUE = @BUILD_ACTIVEX_TRUE@
BUILD_DIRENT_FALSE = @BUILD_DIRENT_FALSE@
BUILD_DIRENT_TRUE = @BUILD_DIRENT_TRUE@
BUILD_GETOPT_FALSE = @BUILD_GETOPT_FALSE@
BUILD_GETOPT_TRUE = @BUILD_GETOPT_TRUE@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
BUILD_JAVA_FALSE = @BUILD_JAVA_FALSE@
BUILD_JAVA_TRUE = @BUILD_JAVA_TRUE@
BUILD_MOZILLA_FALSE = @BUILD_MOZILLA_FALSE@
BUILD_MOZILLA_TRUE = @BUILD_MOZILLA_TRUE@
BUILD_PYTHON_FALSE = @BUILD_PYTHON_FALSE@
BUILD_PYTHON_TRUE = @BUILD_PYTHON_TRUE@
BUILD_SHARED_FALSE = @BUILD_SHARED_FALSE@
BUILD_SHARED_TRUE = @BUILD_SHARED_TRUE@
CACA_CONFIG = @CACA_CONFIG@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CORBA_CFLAGS = @CORBA_CFLAGS@
CORBA_LIBS = @CORBA_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH = @CYGPATH@
CYGPATH_W = @CYGPATH_W@
DAAP_CFLAGS = @DAAP_CFLAGS@
DAAP_LIBS = @DAAP_LIBS@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIRAC_CFLAGS = @DIRAC_CFLAGS@
DIRAC_LIBS = @DIRAC_LIBS@
DLLTOOL = @DLLTOOL@
DVDNAV_CONFIG = @DVDNAV_CONFIG@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_CORBA_FALSE = @ENABLE_CORBA_FALSE@
ENABLE_CORBA_TRUE = @ENABLE_CORBA_TRUE@
ESD_CONFIG = @ESD_CONFIG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFMPEG_CFLAGS = @FFMPEG_CFLAGS@
FFMPEG_CONFIG = @FFMPEG_CONFIG@
FFMPEG_LIBS = @FFMPEG_LIBS@
FILE_LIBVLC_DLL = @FILE_LIBVLC_DLL@
FIREFOX_CFLAGS = @FIREFOX_CFLAGS@
FIREFOX_LIBS = @FIREFOX_LIBS@
FIREFOX_XPCOM_CFLAGS = @FIREFOX_XPCOM_CFLAGS@
FIREFOX_XPCOM_LIBS = @FIREFOX_XPCOM_LIBS@
FREETYPE_CONFIG = @FREETYPE_CONFIG@
FRIBIDI_CONFIG = @FRIBIDI_CONFIG@
GENCAT = @GENCAT@
GLIBC21 = @GLIBC21@
GMSGFMT = @GMSGFMT@
GNOMEVFS_CFLAGS = @GNOMEVFS_CFLAGS@
GNOMEVFS_LIBS = @GNOMEVFS_LIBS@
GNUTLS_CFLAGS = @GNUTLS_CFLAGS@
GNUTLS_LIBS = @GNUTLS_LIBS@
GREP = @GREP@
GTK2_CFLAGS = @GTK2_CFLAGS@
GTK2_LIBS = @GTK2_LIBS@
HAL_CFLAGS = @HAL_CFLAGS@
HAL_LIBS = @HAL_LIBS@
HAS_MIDL_COMPILER_FALSE = @HAS_MIDL_COMPILER_FALSE@
HAS_MIDL_COMPILER_TRUE = @HAS_MIDL_COMPILER_TRUE@
HAS_WIDL_COMPILER_FALSE = @HAS_WIDL_COMPILER_FALSE@
HAS_WIDL_COMPILER_TRUE = @HAS_WIDL_COMPILER_TRUE@
HAVE_BEOS_FALSE = @HAVE_BEOS_FALSE@
HAVE_BEOS_TRUE = @HAVE_BEOS_TRUE@
HAVE_BUILTINS_FALSE = @HAVE_BUILTINS_FALSE@
HAVE_BUILTINS_TRUE = @HAVE_BUILTINS_TRUE@
HAVE_DARWIN_FALSE = @HAVE_DARWIN_FALSE@
HAVE_DARWIN_TRUE = @HAVE_DARWIN_TRUE@
HAVE_PLUGINS_FALSE = @HAVE_PLUGINS_FALSE@
HAVE_PLUGINS_TRUE = @HAVE_PLUGINS_TRUE@
HAVE_WIN32_FALSE = @HAVE_WIN32_FALSE@
HAVE_WIN32_TRUE = @HAVE_WIN32_TRUE@
HAVE_WINCE_FALSE = @HAVE_WINCE_FALSE@
HAVE_WINCE_TRUE = @HAVE_WINCE_TRUE@
INCLUDED_LIBINTL = @INCLUDED_LIBINTL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLBISON = @INTLBISON@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@
JAVA = @JAVA@
JAVAC = @JAVAC@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBCDDB_CFLAGS = @LIBCDDB_CFLAGS@
LIBCDDB_LIBS = @LIBCDDB_LIBS@
LIBCDIO_CFLAGS = @LIBCDIO_CFLAGS@
LIBCDIO_LIBS = @LIBCDIO_LIBS@
LIBCDIO_PARANOIA_CFLAGS = @LIBCDIO_PARANOIA_CFLAGS@
LIBCDIO_PARANOIA_LIBS = @LIBCDIO_PARANOIA_LIBS@
LIBEXT = @LIBEXT@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LOADER_FALSE = @LOADER_FALSE@
LOADER_TRUE = @LOADER_TRUE@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MACOSX_DEPLOYMENT_TARGET = @MACOSX_DEPLOYMENT_TARGET@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MIDL = @MIDL@
MKINSTALLDIRS = @MKINSTALLDIRS@
MOC = @MOC@
MOZILLA_CONFIG = @MOZILLA_CONFIG@
MOZILLA_NSPR_CFLAGS = @MOZILLA_NSPR_CFLAGS@
MOZILLA_NSPR_LIBS = @MOZILLA_NSPR_LIBS@
MOZILLA_SDK_PATH = @MOZILLA_SDK_PATH@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
NOTIFY_CFLAGS = @NOTIFY_CFLAGS@
NOTIFY_LIBS = @NOTIFY_LIBS@
NSPR_CFLAGS = @NSPR_CFLAGS@
NSPR_LIBS = @NSPR_LIBS@
OBJC = @OBJC@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POSTPROC_CFLAGS = @POSTPROC_CFLAGS@
POSTPROC_LIBS = @POSTPROC_LIBS@
POSUB = @POSUB@
RANLIB = @RANLIB@
SDL11_CONFIG = @SDL11_CONFIG@
SDL12_CONFIG = @SDL12_CONFIG@
SDL_CONFIG = @SDL_CONFIG@
SEAMONKEY_CONFIG = @SEAMONKEY_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHOUT_CFLAGS = @SHOUT_CFLAGS@
SHOUT_LIBS = @SHOUT_LIBS@
STRIP = @STRIP@
SVG_CFLAGS = @SVG_CFLAGS@
SVG_LIBS = @SVG_LIBS@
SYMPREF = @SYMPREF@
SYS = @SYS@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_LIBTOOL_FALSE = @USE_LIBTOOL_FALSE@
USE_LIBTOOL_TRUE = @USE_LIBTOOL_TRUE@
USE_NLS = @USE_NLS@
VCDINFO_CFLAGS = @VCDINFO_CFLAGS@
VCDINFO_LIBS = @VCDINFO_LIBS@
VERSION = @VERSION@
VERSION_MAJOR = @VERSION_MAJOR@
VERSION_MINOR = @VERSION_MINOR@
VERSION_REVISION = @VERSION_REVISION@
VLC_CONFIG = @VLC_CONFIG@
VLC_ENTRY = @VLC_ENTRY@
WIDL = @WIDL@
WINDRES = @WINDRES@
WINE_SDK_PATH = @WINE_SDK_PATH@
WX_CONFIG = @WX_CONFIG@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XPIDL = @XPIDL@
XPIDL_INCL = @XPIDL_INCL@
XULRUNNER_CONFIG = @XULRUNNER_CONFIG@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__fastdepOBJC_FALSE = @am__fastdepOBJC_FALSE@
am__fastdepOBJC_TRUE = @am__fastdepOBJC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pic = @pic@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
uudecode = @uudecode@

basedir = misc
mods = memcpy memcpymmx memcpymmxext memcpy3dn memcpyaltivec

NULL = 
libvlc_LTLIBRARIES = 
noinst_LTLIBRARIES = 
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
clean_modules = 
SUBDIRS = 
SUFFIXES = _plugin$(LIBEXT) _plugin.a

libvlcdir = $(libdir)/vlc/$(basedir)

EXTRA_LIBRARIES = libmemcpy_plugin.a libmemcpy.a libmemcpymmx_plugin.a libmemcpymmx.a libmemcpymmxext_plugin.a libmemcpymmxext.a libmemcpy3dn_plugin.a libmemcpy3dn.a libmemcpyaltivec_plugin.a libmemcpyaltivec.a
EXTRA_LTLIBRARIES = libmemcpy_plugin.la libmemcpy_builtin.la libmemcpymmx_plugin.la libmemcpymmx_builtin.la libmemcpymmxext_plugin.la libmemcpymmxext_builtin.la libmemcpy3dn_plugin.la libmemcpy3dn_builtin.la libmemcpyaltivec_plugin.la libmemcpyaltivec_builtin.la
SOURCES_memcpy = \
	memcpy.c \
	$(NULL)


SOURCES_memcpymmx = \
	memcpy.c \
	fastmemcpy.h \
	$(NULL)


SOURCES_memcpymmxext = \
	memcpy.c \
	fastmemcpy.h \
	$(NULL)


SOURCES_memcpy3dn = \
	memcpy.c \
	fastmemcpy.h \
	$(NULL)


SOURCES_memcpyaltivec = \
	memcpyaltivec.c \
	$(NULL)


LTLIBVLC = $(top_builddir)/src/libvlc.la

@BUILD_SHARED_TRUE@LIBVLC = $(top_builddir)/src/libvlc$(LIBEXT)
@BUILD_SHARED_TRUE@LIBADD = $(LIBVLC)


# The memcpy plugin
libmemcpy_plugin_a_SOURCES = $(SOURCES_memcpy)
libmemcpy_plugin_la_SOURCES = $(SOURCES_memcpy)
libmemcpy_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpy`
libmemcpy_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpy`
libmemcpy_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpy`
libmemcpy_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpy`
libmemcpy_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpy`
libmemcpy_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpy`
libmemcpy_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin memcpy` \
	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)

libmemcpy_plugin_la_LIBADD = $(LTLIBVLC)

libmemcpy_a_SOURCES = $(SOURCES_memcpy)
libmemcpy_builtin_la_SOURCES = $(SOURCES_memcpy)
libmemcpy_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpy`
libmemcpy_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpy`
libmemcpy_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpy`
libmemcpy_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpy`
libmemcpy_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpy`
libmemcpy_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpy`


# The memcpymmx plugin
libmemcpymmx_plugin_a_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_plugin_la_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpymmx`
libmemcpymmx_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpymmx`
libmemcpymmx_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpymmx`
libmemcpymmx_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpymmx`
libmemcpymmx_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpymmx`
libmemcpymmx_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpymmx`
libmemcpymmx_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin memcpymmx` \
	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)

libmemcpymmx_plugin_la_LIBADD = $(LTLIBVLC)

libmemcpymmx_a_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_builtin_la_SOURCES = $(SOURCES_memcpymmx)
libmemcpymmx_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpymmx`
libmemcpymmx_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpymmx`
libmemcpymmx_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpymmx`
libmemcpymmx_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpymmx`
libmemcpymmx_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpymmx`
libmemcpymmx_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpymmx`


# The memcpymmxext plugin
libmemcpymmxext_plugin_a_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_plugin_la_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpymmxext`
libmemcpymmxext_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpymmxext`
libmemcpymmxext_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpymmxext`
libmemcpymmxext_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpymmxext`
libmemcpymmxext_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpymmxext`
libmemcpymmxext_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpymmxext`
libmemcpymmxext_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin memcpymmxext` \
	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)

libmemcpymmxext_plugin_la_LIBADD = $(LTLIBVLC)

libmemcpymmxext_a_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_builtin_la_SOURCES = $(SOURCES_memcpymmxext)
libmemcpymmxext_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpymmxext`
libmemcpymmxext_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpymmxext`
libmemcpymmxext_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpymmxext`
libmemcpymmxext_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpymmxext`
libmemcpymmxext_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpymmxext`
libmemcpymmxext_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpymmxext`


# The memcpy3dn plugin
libmemcpy3dn_plugin_a_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_plugin_la_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpy3dn`
libmemcpy3dn_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpy3dn`
libmemcpy3dn_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpy3dn`
libmemcpy3dn_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpy3dn`
libmemcpy3dn_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpy3dn`
libmemcpy3dn_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpy3dn`
libmemcpy3dn_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin memcpy3dn` \
	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)

libmemcpy3dn_plugin_la_LIBADD = $(LTLIBVLC)

libmemcpy3dn_a_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_builtin_la_SOURCES = $(SOURCES_memcpy3dn)
libmemcpy3dn_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpy3dn`
libmemcpy3dn_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpy3dn`
libmemcpy3dn_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpy3dn`
libmemcpy3dn_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpy3dn`
libmemcpy3dn_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpy3dn`
libmemcpy3dn_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpy3dn`


# The memcpyaltivec plugin
libmemcpyaltivec_plugin_a_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_plugin_la_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_la_CFLAGS = `$(VLC_CONFIG) --cflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin memcpyaltivec`
libmemcpyaltivec_plugin_la_LDFLAGS = `$(VLC_CONFIG) --libs plugin memcpyaltivec` \
	-rpath '$(libvlcdir)' -avoid-version -module -shrext $(LIBEXT)

libmemcpyaltivec_plugin_la_LIBADD = $(LTLIBVLC)

libmemcpyaltivec_a_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_builtin_la_SOURCES = $(SOURCES_memcpyaltivec)
libmemcpyaltivec_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic memcpyaltivec`
libmemcpyaltivec_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic memcpyaltivec`
libmemcpyaltivec_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic memcpyaltivec`
libmemcpyaltivec_builtin_la_CFLAGS = `$(VLC_CONFIG) --cflags builtin memcpyaltivec`
libmemcpyaltivec_builtin_la_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin memcpyaltivec`
libmemcpyaltivec_builtin_la_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin memcpyaltivec`
subdir = modules/misc/memcpy
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/autotools/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
libmemcpy_a_AR = $(AR) cru
libmemcpy_a_LIBADD =
am__objects_1 =
am__objects_2 = libmemcpy_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpy_a_OBJECTS = $(am__objects_2)
libmemcpy_a_OBJECTS = $(am_libmemcpy_a_OBJECTS)
libmemcpy3dn_a_AR = $(AR) cru
libmemcpy3dn_a_LIBADD =
am__objects_3 = libmemcpy3dn_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpy3dn_a_OBJECTS = $(am__objects_3)
libmemcpy3dn_a_OBJECTS = $(am_libmemcpy3dn_a_OBJECTS)
libmemcpy3dn_plugin_a_AR = $(AR) cru
libmemcpy3dn_plugin_a_LIBADD =
am__objects_4 = libmemcpy3dn_plugin_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpy3dn_plugin_a_OBJECTS = $(am__objects_4)
libmemcpy3dn_plugin_a_OBJECTS = $(am_libmemcpy3dn_plugin_a_OBJECTS)
libmemcpy_plugin_a_AR = $(AR) cru
libmemcpy_plugin_a_LIBADD =
am__objects_5 = libmemcpy_plugin_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpy_plugin_a_OBJECTS = $(am__objects_5)
libmemcpy_plugin_a_OBJECTS = $(am_libmemcpy_plugin_a_OBJECTS)
libmemcpyaltivec_a_AR = $(AR) cru
libmemcpyaltivec_a_LIBADD =
am__objects_6 = libmemcpyaltivec_a-memcpyaltivec.$(OBJEXT) \
	$(am__objects_1)
am_libmemcpyaltivec_a_OBJECTS = $(am__objects_6)
libmemcpyaltivec_a_OBJECTS = $(am_libmemcpyaltivec_a_OBJECTS)
libmemcpyaltivec_plugin_a_AR = $(AR) cru
libmemcpyaltivec_plugin_a_LIBADD =
am__objects_7 = libmemcpyaltivec_plugin_a-memcpyaltivec.$(OBJEXT) \
	$(am__objects_1)
am_libmemcpyaltivec_plugin_a_OBJECTS = $(am__objects_7)
libmemcpyaltivec_plugin_a_OBJECTS = \
	$(am_libmemcpyaltivec_plugin_a_OBJECTS)
libmemcpymmx_a_AR = $(AR) cru
libmemcpymmx_a_LIBADD =
am__objects_8 = libmemcpymmx_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpymmx_a_OBJECTS = $(am__objects_8)
libmemcpymmx_a_OBJECTS = $(am_libmemcpymmx_a_OBJECTS)
libmemcpymmx_plugin_a_AR = $(AR) cru
libmemcpymmx_plugin_a_LIBADD =
am__objects_9 = libmemcpymmx_plugin_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpymmx_plugin_a_OBJECTS = $(am__objects_9)
libmemcpymmx_plugin_a_OBJECTS = $(am_libmemcpymmx_plugin_a_OBJECTS)
libmemcpymmxext_a_AR = $(AR) cru
libmemcpymmxext_a_LIBADD =
am__objects_10 = libmemcpymmxext_a-memcpy.$(OBJEXT) $(am__objects_1)
am_libmemcpymmxext_a_OBJECTS = $(am__objects_10)
libmemcpymmxext_a_OBJECTS = $(am_libmemcpymmxext_a_OBJECTS)
libmemcpymmxext_plugin_a_AR = $(AR) cru
libmemcpymmxext_plugin_a_LIBADD =
am__objects_11 = libmemcpymmxext_plugin_a-memcpy.$(OBJEXT) \
	$(am__objects_1)
am_libmemcpymmxext_plugin_a_OBJECTS = $(am__objects_11)
libmemcpymmxext_plugin_a_OBJECTS = \
	$(am_libmemcpymmxext_plugin_a_OBJECTS)
LTLIBRARIES = $(libvlc_LTLIBRARIES) $(noinst_LTLIBRARIES)

libmemcpy3dn_builtin_la_LDFLAGS =
libmemcpy3dn_builtin_la_LIBADD =
am__objects_12 = libmemcpy3dn_builtin_la-memcpy.lo $(am__objects_1)
am_libmemcpy3dn_builtin_la_OBJECTS = $(am__objects_12)
libmemcpy3dn_builtin_la_OBJECTS = $(am_libmemcpy3dn_builtin_la_OBJECTS)
libmemcpy3dn_plugin_la_DEPENDENCIES = $(top_builddir)/src/libvlc.la
am__objects_13 = libmemcpy3dn_plugin_la-memcpy.lo $(am__objects_1)
am_libmemcpy3dn_plugin_la_OBJECTS = $(am__objects_13)
libmemcpy3dn_plugin_la_OBJECTS = $(am_libmemcpy3dn_plugin_la_OBJECTS)
libmemcpy_builtin_la_LDFLAGS =
libmemcpy_builtin_la_LIBADD =
am__objects_14 = libmemcpy_builtin_la-memcpy.lo $(am__objects_1)
am_libmemcpy_builtin_la_OBJECTS = $(am__objects_14)
libmemcpy_builtin_la_OBJECTS = $(am_libmemcpy_builtin_la_OBJECTS)
libmemcpy_plugin_la_DEPENDENCIES = $(top_builddir)/src/libvlc.la
am__objects_15 = libmemcpy_plugin_la-memcpy.lo $(am__objects_1)
am_libmemcpy_plugin_la_OBJECTS = $(am__objects_15)
libmemcpy_plugin_la_OBJECTS = $(am_libmemcpy_plugin_la_OBJECTS)
libmemcpyaltivec_builtin_la_LDFLAGS =
libmemcpyaltivec_builtin_la_LIBADD =
am__objects_16 = libmemcpyaltivec_builtin_la-memcpyaltivec.lo \
	$(am__objects_1)
am_libmemcpyaltivec_builtin_la_OBJECTS = $(am__objects_16)
libmemcpyaltivec_builtin_la_OBJECTS = \
	$(am_libmemcpyaltivec_builtin_la_OBJECTS)
libmemcpyaltivec_plugin_la_DEPENDENCIES = $(top_builddir)/src/libvlc.la
am__objects_17 = libmemcpyaltivec_plugin_la-memcpyaltivec.lo \
	$(am__objects_1)
am_libmemcpyaltivec_plugin_la_OBJECTS = $(am__objects_17)
libmemcpyaltivec_plugin_la_OBJECTS = \
	$(am_libmemcpyaltivec_plugin_la_OBJECTS)
libmemcpymmx_builtin_la_LDFLAGS =
libmemcpymmx_builtin_la_LIBADD =
am__objects_18 = libmemcpymmx_builtin_la-memcpy.lo $(am__objects_1)
am_libmemcpymmx_builtin_la_OBJECTS = $(am__objects_18)
libmemcpymmx_builtin_la_OBJECTS = $(am_libmemcpymmx_builtin_la_OBJECTS)
libmemcpymmx_plugin_la_DEPENDENCIES = $(top_builddir)/src/libvlc.la
am__objects_19 = libmemcpymmx_plugin_la-memcpy.lo $(am__objects_1)
am_libmemcpymmx_plugin_la_OBJECTS = $(am__objects_19)
libmemcpymmx_plugin_la_OBJECTS = $(am_libmemcpymmx_plugin_la_OBJECTS)
libmemcpymmxext_builtin_la_LDFLAGS =
libmemcpymmxext_builtin_la_LIBADD =
am__objects_20 = libmemcpymmxext_builtin_la-memcpy.lo $(am__objects_1)
am_libmemcpymmxext_builtin_la_OBJECTS = $(am__objects_20)
libmemcpymmxext_builtin_la_OBJECTS = \
	$(am_libmemcpymmxext_builtin_la_OBJECTS)
libmemcpymmxext_plugin_la_DEPENDENCIES = $(top_builddir)/src/libvlc.la
am__objects_21 = libmemcpymmxext_plugin_la-memcpy.lo $(am__objects_1)
am_libmemcpymmxext_plugin_la_OBJECTS = $(am__objects_21)
libmemcpymmxext_plugin_la_OBJECTS = \
	$(am_libmemcpymmxext_plugin_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/libmemcpy3dn_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy_builtin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy_plugin_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpy_plugin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmx_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmxext_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libmemcpy_a_SOURCES) $(libmemcpy3dn_a_SOURCES) \
	$(libmemcpy3dn_plugin_a_SOURCES) $(libmemcpy_plugin_a_SOURCES) \
	$(libmemcpyaltivec_a_SOURCES) \
	$(libmemcpyaltivec_plugin_a_SOURCES) $(libmemcpymmx_a_SOURCES) \
	$(libmemcpymmx_plugin_a_SOURCES) $(libmemcpymmxext_a_SOURCES) \
	$(libmemcpymmxext_plugin_a_SOURCES) \
	$(libmemcpy3dn_builtin_la_SOURCES) \
	$(libmemcpy3dn_plugin_la_SOURCES) \
	$(libmemcpy_builtin_la_SOURCES) $(libmemcpy_plugin_la_SOURCES) \
	$(libmemcpyaltivec_builtin_la_SOURCES) \
	$(libmemcpyaltivec_plugin_la_SOURCES) \
	$(libmemcpymmx_builtin_la_SOURCES) \
	$(libmemcpymmx_plugin_la_SOURCES) \
	$(libmemcpymmxext_builtin_la_SOURCES) \
	$(libmemcpymmxext_plugin_la_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Modules.am Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libmemcpy_a_SOURCES) $(libmemcpy3dn_a_SOURCES) $(libmemcpy3dn_plugin_a_SOURCES) $(libmemcpy_plugin_a_SOURCES) $(libmemcpyaltivec_a_SOURCES) $(libmemcpyaltivec_plugin_a_SOURCES) $(libmemcpymmx_a_SOURCES) $(libmemcpymmx_plugin_a_SOURCES) $(libmemcpymmxext_a_SOURCES) $(libmemcpymmxext_plugin_a_SOURCES) $(libmemcpy3dn_builtin_la_SOURCES) $(libmemcpy3dn_plugin_la_SOURCES) $(libmemcpy_builtin_la_SOURCES) $(libmemcpy_plugin_la_SOURCES) $(libmemcpyaltivec_builtin_la_SOURCES) $(libmemcpyaltivec_plugin_la_SOURCES) $(libmemcpymmx_builtin_la_SOURCES) $(libmemcpymmx_plugin_la_SOURCES) $(libmemcpymmxext_builtin_la_SOURCES) $(libmemcpymmxext_plugin_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: _plugin$(LIBEXT) _plugin.a .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(srcdir)/Modules.am $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  modules/misc/memcpy/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libmemcpy.a: $(libmemcpy_a_OBJECTS) $(libmemcpy_a_DEPENDENCIES) 
	-rm -f libmemcpy.a
	$(libmemcpy_a_AR) libmemcpy.a $(libmemcpy_a_OBJECTS) $(libmemcpy_a_LIBADD)
	$(RANLIB) libmemcpy.a
libmemcpy3dn.a: $(libmemcpy3dn_a_OBJECTS) $(libmemcpy3dn_a_DEPENDENCIES) 
	-rm -f libmemcpy3dn.a
	$(libmemcpy3dn_a_AR) libmemcpy3dn.a $(libmemcpy3dn_a_OBJECTS) $(libmemcpy3dn_a_LIBADD)
	$(RANLIB) libmemcpy3dn.a
libmemcpy3dn_plugin.a: $(libmemcpy3dn_plugin_a_OBJECTS) $(libmemcpy3dn_plugin_a_DEPENDENCIES) 
	-rm -f libmemcpy3dn_plugin.a
	$(libmemcpy3dn_plugin_a_AR) libmemcpy3dn_plugin.a $(libmemcpy3dn_plugin_a_OBJECTS) $(libmemcpy3dn_plugin_a_LIBADD)
	$(RANLIB) libmemcpy3dn_plugin.a
libmemcpy_plugin.a: $(libmemcpy_plugin_a_OBJECTS) $(libmemcpy_plugin_a_DEPENDENCIES) 
	-rm -f libmemcpy_plugin.a
	$(libmemcpy_plugin_a_AR) libmemcpy_plugin.a $(libmemcpy_plugin_a_OBJECTS) $(libmemcpy_plugin_a_LIBADD)
	$(RANLIB) libmemcpy_plugin.a
libmemcpyaltivec.a: $(libmemcpyaltivec_a_OBJECTS) $(libmemcpyaltivec_a_DEPENDENCIES) 
	-rm -f libmemcpyaltivec.a
	$(libmemcpyaltivec_a_AR) libmemcpyaltivec.a $(libmemcpyaltivec_a_OBJECTS) $(libmemcpyaltivec_a_LIBADD)
	$(RANLIB) libmemcpyaltivec.a
libmemcpyaltivec_plugin.a: $(libmemcpyaltivec_plugin_a_OBJECTS) $(libmemcpyaltivec_plugin_a_DEPENDENCIES) 
	-rm -f libmemcpyaltivec_plugin.a
	$(libmemcpyaltivec_plugin_a_AR) libmemcpyaltivec_plugin.a $(libmemcpyaltivec_plugin_a_OBJECTS) $(libmemcpyaltivec_plugin_a_LIBADD)
	$(RANLIB) libmemcpyaltivec_plugin.a
libmemcpymmx.a: $(libmemcpymmx_a_OBJECTS) $(libmemcpymmx_a_DEPENDENCIES) 
	-rm -f libmemcpymmx.a
	$(libmemcpymmx_a_AR) libmemcpymmx.a $(libmemcpymmx_a_OBJECTS) $(libmemcpymmx_a_LIBADD)
	$(RANLIB) libmemcpymmx.a
libmemcpymmx_plugin.a: $(libmemcpymmx_plugin_a_OBJECTS) $(libmemcpymmx_plugin_a_DEPENDENCIES) 
	-rm -f libmemcpymmx_plugin.a
	$(libmemcpymmx_plugin_a_AR) libmemcpymmx_plugin.a $(libmemcpymmx_plugin_a_OBJECTS) $(libmemcpymmx_plugin_a_LIBADD)
	$(RANLIB) libmemcpymmx_plugin.a
libmemcpymmxext.a: $(libmemcpymmxext_a_OBJECTS) $(libmemcpymmxext_a_DEPENDENCIES) 
	-rm -f libmemcpymmxext.a
	$(libmemcpymmxext_a_AR) libmemcpymmxext.a $(libmemcpymmxext_a_OBJECTS) $(libmemcpymmxext_a_LIBADD)
	$(RANLIB) libmemcpymmxext.a
libmemcpymmxext_plugin.a: $(libmemcpymmxext_plugin_a_OBJECTS) $(libmemcpymmxext_plugin_a_DEPENDENCIES) 
	-rm -f libmemcpymmxext_plugin.a
	$(libmemcpymmxext_plugin_a_AR) libmemcpymmxext_plugin.a $(libmemcpymmxext_plugin_a_OBJECTS) $(libmemcpymmxext_plugin_a_LIBADD)
	$(RANLIB) libmemcpymmxext_plugin.a
libvlcLTLIBRARIES_INSTALL = $(INSTALL)
install-libvlcLTLIBRARIES: $(libvlc_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libvlcdir)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libvlcLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libvlcdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libvlcLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libvlcdir)/$$f; \
	  else :; fi; \
	done

uninstall-libvlcLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libvlcdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libvlcdir)/$$p; \
	done

clean-libvlcLTLIBRARIES:
	-test -z "$(libvlc_LTLIBRARIES)" || rm -f $(libvlc_LTLIBRARIES)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmemcpy3dn_builtin.la: $(libmemcpy3dn_builtin_la_OBJECTS) $(libmemcpy3dn_builtin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpy3dn_builtin_la_LDFLAGS) $(libmemcpy3dn_builtin_la_OBJECTS) $(libmemcpy3dn_builtin_la_LIBADD) $(LIBS)
libmemcpy3dn_plugin.la: $(libmemcpy3dn_plugin_la_OBJECTS) $(libmemcpy3dn_plugin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpy3dn_plugin_la_LDFLAGS) $(libmemcpy3dn_plugin_la_OBJECTS) $(libmemcpy3dn_plugin_la_LIBADD) $(LIBS)
libmemcpy_builtin.la: $(libmemcpy_builtin_la_OBJECTS) $(libmemcpy_builtin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpy_builtin_la_LDFLAGS) $(libmemcpy_builtin_la_OBJECTS) $(libmemcpy_builtin_la_LIBADD) $(LIBS)
libmemcpy_plugin.la: $(libmemcpy_plugin_la_OBJECTS) $(libmemcpy_plugin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpy_plugin_la_LDFLAGS) $(libmemcpy_plugin_la_OBJECTS) $(libmemcpy_plugin_la_LIBADD) $(LIBS)
libmemcpyaltivec_builtin.la: $(libmemcpyaltivec_builtin_la_OBJECTS) $(libmemcpyaltivec_builtin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpyaltivec_builtin_la_LDFLAGS) $(libmemcpyaltivec_builtin_la_OBJECTS) $(libmemcpyaltivec_builtin_la_LIBADD) $(LIBS)
libmemcpyaltivec_plugin.la: $(libmemcpyaltivec_plugin_la_OBJECTS) $(libmemcpyaltivec_plugin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpyaltivec_plugin_la_LDFLAGS) $(libmemcpyaltivec_plugin_la_OBJECTS) $(libmemcpyaltivec_plugin_la_LIBADD) $(LIBS)
libmemcpymmx_builtin.la: $(libmemcpymmx_builtin_la_OBJECTS) $(libmemcpymmx_builtin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpymmx_builtin_la_LDFLAGS) $(libmemcpymmx_builtin_la_OBJECTS) $(libmemcpymmx_builtin_la_LIBADD) $(LIBS)
libmemcpymmx_plugin.la: $(libmemcpymmx_plugin_la_OBJECTS) $(libmemcpymmx_plugin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpymmx_plugin_la_LDFLAGS) $(libmemcpymmx_plugin_la_OBJECTS) $(libmemcpymmx_plugin_la_LIBADD) $(LIBS)
libmemcpymmxext_builtin.la: $(libmemcpymmxext_builtin_la_OBJECTS) $(libmemcpymmxext_builtin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpymmxext_builtin_la_LDFLAGS) $(libmemcpymmxext_builtin_la_OBJECTS) $(libmemcpymmxext_builtin_la_LIBADD) $(LIBS)
libmemcpymmxext_plugin.la: $(libmemcpymmxext_plugin_la_OBJECTS) $(libmemcpymmxext_plugin_la_DEPENDENCIES) 
	$(LINK)  $(libmemcpymmxext_plugin_la_LDFLAGS) $(libmemcpymmxext_plugin_la_OBJECTS) $(libmemcpymmxext_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy3dn_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy_builtin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy_plugin_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpy_plugin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmx_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmxext_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libmemcpy_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_a_CFLAGS) $(CFLAGS) -MT libmemcpy_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_a_CFLAGS) $(CFLAGS) -c -o libmemcpy_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_a_CFLAGS) $(CFLAGS) -MT libmemcpy_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_a_CFLAGS) $(CFLAGS) -c -o libmemcpy_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_a_CFLAGS) $(CFLAGS) -MT libmemcpy_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_a_CFLAGS) $(CFLAGS) -c -o libmemcpy_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_a_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_a_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_a_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_a_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy3dn_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_a_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy3dn_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_a_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_plugin_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_plugin_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_plugin_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_plugin_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_plugin_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_plugin_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy3dn_plugin_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_plugin_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_plugin_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy3dn_plugin_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_plugin_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpy_plugin_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_plugin_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpy_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_plugin_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpy_plugin_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_plugin_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpy_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy_plugin_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpy_plugin_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_plugin_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_plugin_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy_plugin_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpy_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpyaltivec_a-memcpyaltivec.o: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_a_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_a-memcpyaltivec.o -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_a-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_a-memcpyaltivec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_a_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_a-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpyaltivec_a-memcpyaltivec.obj: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_a_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_a-memcpyaltivec.obj -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_a-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_a-memcpyaltivec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_a_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_a-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`

libmemcpyaltivec_a-memcpyaltivec.lo: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_a_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_a-memcpyaltivec.lo -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_a-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_a-memcpyaltivec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.Plo' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_a-memcpyaltivec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_a_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_a-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpyaltivec_plugin_a-memcpyaltivec.o: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_plugin_a-memcpyaltivec.o -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_plugin_a-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_plugin_a-memcpyaltivec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_plugin_a-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpyaltivec_plugin_a-memcpyaltivec.obj: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_plugin_a-memcpyaltivec.obj -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_plugin_a-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_plugin_a-memcpyaltivec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_plugin_a-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`

libmemcpyaltivec_plugin_a-memcpyaltivec.lo: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_plugin_a-memcpyaltivec.lo -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_plugin_a-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_plugin_a-memcpyaltivec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.Plo' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_plugin_a-memcpyaltivec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_plugin_a-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpymmx_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_a_CFLAGS) $(CFLAGS) -MT libmemcpymmx_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmx_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_a_CFLAGS) $(CFLAGS) -MT libmemcpymmx_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmx_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_a_CFLAGS) $(CFLAGS) -MT libmemcpymmx_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmx_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmx_plugin_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpymmx_plugin_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_plugin_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmx_plugin_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpymmx_plugin_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_plugin_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmx_plugin_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpymmx_plugin_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_plugin_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmx_plugin_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_a_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_a_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmxext_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_a_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmxext_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_plugin_a-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_plugin_a-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_plugin_a-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_plugin_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_plugin_a-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_plugin_a-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_plugin_a-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_plugin_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmxext_plugin_a-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_a_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_plugin_a-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_plugin_a-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmxext_plugin_a-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_a_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_plugin_a-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_builtin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_builtin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_builtin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_builtin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_builtin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_builtin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy3dn_builtin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_builtin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_builtin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy3dn_builtin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_plugin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_plugin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_plugin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy3dn_plugin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_plugin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_plugin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy3dn_plugin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpy3dn_plugin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy3dn_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy3dn_plugin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy3dn_plugin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy3dn_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy3dn_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_builtin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpy_builtin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_builtin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_builtin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpy_builtin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_builtin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy_builtin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpy_builtin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_builtin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_builtin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy_builtin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_plugin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpy_plugin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_plugin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpy_plugin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpy_plugin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_plugin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpy_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpy_plugin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpy_plugin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpy_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpy_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpy_plugin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpy_plugin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpy_plugin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpy_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpy_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpyaltivec_builtin_la-memcpyaltivec.o: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_builtin_la-memcpyaltivec.o -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_builtin_la-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_builtin_la-memcpyaltivec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_builtin_la-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpyaltivec_builtin_la-memcpyaltivec.obj: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_builtin_la-memcpyaltivec.obj -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_builtin_la-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_builtin_la-memcpyaltivec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_builtin_la-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`

libmemcpyaltivec_builtin_la-memcpyaltivec.lo: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_builtin_la-memcpyaltivec.lo -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_builtin_la-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_builtin_la-memcpyaltivec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.Plo' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_builtin_la-memcpyaltivec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_builtin_la-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpyaltivec_plugin_la-memcpyaltivec.o: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_plugin_la-memcpyaltivec.o -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_plugin_la-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_plugin_la-memcpyaltivec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_plugin_la-memcpyaltivec.o `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpyaltivec_plugin_la-memcpyaltivec.obj: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_plugin_la-memcpyaltivec.obj -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_plugin_la-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_plugin_la-memcpyaltivec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Po' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_plugin_la-memcpyaltivec.obj `if test -f 'memcpyaltivec.c'; then $(CYGPATH_W) 'memcpyaltivec.c'; else $(CYGPATH_W) '$(srcdir)/memcpyaltivec.c'; fi`

libmemcpyaltivec_plugin_la-memcpyaltivec.lo: memcpyaltivec.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpyaltivec_plugin_la-memcpyaltivec.lo -MD -MP -MF "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpyaltivec_plugin_la-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo" "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpyaltivec.c' object='libmemcpyaltivec_plugin_la-memcpyaltivec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.Plo' tmpdepfile='$(DEPDIR)/libmemcpyaltivec_plugin_la-memcpyaltivec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpyaltivec_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpyaltivec_plugin_la-memcpyaltivec.lo `test -f 'memcpyaltivec.c' || echo '$(srcdir)/'`memcpyaltivec.c

libmemcpymmx_builtin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmx_builtin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_builtin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmx_builtin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmx_builtin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_builtin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmx_builtin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmx_builtin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_builtin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmx_builtin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmx_plugin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmx_plugin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_plugin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmx_plugin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmx_plugin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_plugin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmx_plugin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmx_plugin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmx_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmx_plugin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmx_plugin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmx_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmx_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_builtin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_builtin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_builtin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_builtin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_builtin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_builtin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_builtin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_builtin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmxext_builtin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_builtin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_builtin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_builtin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmxext_builtin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_builtin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_builtin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_plugin_la-memcpy.o: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_plugin_la-memcpy.o -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_plugin_la-memcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_plugin_la-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libmemcpymmxext_plugin_la-memcpy.obj: memcpy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_plugin_la-memcpy.obj -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_plugin_la-memcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Po' tmpdepfile='$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_plugin_la-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libmemcpymmxext_plugin_la-memcpy.lo: memcpy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_la_CFLAGS) $(CFLAGS) -MT libmemcpymmxext_plugin_la-memcpy.lo -MD -MP -MF "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o libmemcpymmxext_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo" "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memcpy.c' object='libmemcpymmxext_plugin_la-memcpy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.Plo' tmpdepfile='$(DEPDIR)/libmemcpymmxext_plugin_la-memcpy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcpymmxext_plugin_la_CFLAGS) $(CFLAGS) -c -o libmemcpymmxext_plugin_la-memcpy.lo `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libvlcdir)

install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	clean-local clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-libvlcLTLIBRARIES

install-exec-am: install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libvlcLTLIBRARIES \
	uninstall-local

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-generic clean-libtool clean-libvlcLTLIBRARIES clean-local \
	clean-noinstLTLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-local \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-libvlcLTLIBRARIES install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-local \
	mostlyclean-recursive pdf pdf-am pdf-recursive ps ps-am \
	ps-recursive tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-info-recursive \
	uninstall-libvlcLTLIBRARIES uninstall-local uninstall-recursive


all: all-modules

# Find out which modules were enabled and tell make to build them
all-modules:
@USE_LIBTOOL_TRUE@	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
@USE_LIBTOOL_TRUE@	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --list plugin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_plugin.la;; esac; done; fi; \
@USE_LIBTOOL_TRUE@	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --list builtin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_builtin.la;; esac; done; fi; \
@USE_LIBTOOL_TRUE@	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
@USE_LIBTOOL_TRUE@	test -z "$$fail"
@USE_LIBTOOL_FALSE@	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
@USE_LIBTOOL_FALSE@	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --list plugin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
@USE_LIBTOOL_FALSE@	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --list builtin); for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo lib$${mod}.a;; esac; done; fi; \
@USE_LIBTOOL_FALSE@	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
@USE_LIBTOOL_FALSE@	test -z "$$fail"

# Build a plugin with the adequate linker and linker's flags
_plugin.a_plugin$(LIBEXT):
	@mod="$*" ; mod=$${mod#lib} ; 	ldfl="`$(VLC_CONFIG) --libs plugin $$mod` $(LIBADD) -u $(SYMPREF)$(VLC_ENTRY)" ; 	case `$(VLC_CONFIG) --linkage $$mod` in \
	  c++)  ld="$(CXXLINK)" ;; 	  objc) ld="$(OBJCLINK)" ;; 	  c|*)  ld="$(LINK)" ;; 	esac ; 	echo $$ld $< $$ldfl ; 	$$ld $< $$ldfl
#ifneq (,$(findstring cygwin,$(host)))
#	mv -f "$@.exe" "$@"
#endif
	@if test -f "$@.exe"; then mv -f "$@.exe" "$@"; fi

@MAINTAINER_MODE_TRUE@$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/bootstrap
@MAINTAINER_MODE_TRUE@	cd $(top_srcdir) && $(SHELL) ./bootstrap

mostlyclean-local:
@USE_LIBTOOL_TRUE@	-rm -f *.la
@USE_LIBTOOL_FALSE@	-rm -f *.a *$(LIBEXT)

clean-local: $(clean_modules)

### automake creates libvlcdir after running install-*-local
### so we have to create it ourselves first
install-exec-local: all-modules
@USE_LIBTOOL_TRUE@	@if test -z "$(libvlc_LTLIBRARIES)"; then 	  z=$$($(VLC_CONFIG) --list plugin); 	  m=`for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo -n " lib$${mod}_plugin.la" ;; esac; done` ; 	  test -z "$$m" ||   	    $(MAKE) $(AM_MAKEFLAGS) libvlc_LTLIBRARIES="$$m" install-libvlcLTLIBRARIES || exit $$? ; 	fi
@USE_LIBTOOL_FALSE@	mkdir -p -- "$(DESTDIR)$(libvlcdir)"
@USE_LIBTOOL_FALSE@	@z=$$($(VLC_CONFIG) --list plugin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo $(INSTALL_PROGRAM) "lib$${mod}_plugin$(LIBEXT)" "$(DESTDIR)$(libvlcdir)/" ; 	      $(INSTALL_PROGRAM) "lib$${mod}_plugin$(LIBEXT)" "$(DESTDIR)$(libvlcdir)/" || exit $$?; 	      ;; 	  esac; 	done
@USE_LIBTOOL_FALSE@	@z=$$($(VLC_CONFIG) --list builtin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo $(INSTALL_DATA) "lib$${mod}.a" "$(DESTDIR)$(libdir)/vlc/" ; 	      $(INSTALL_DATA) "lib$${mod}.a" "$(DESTDIR)$(libdir)/vlc/" || exit $$?; 	      ;; 	  esac; 	done

uninstall-local:
@USE_LIBTOOL_TRUE@	@if test -z "$(libvlc_LTLIBRARIES)"; then 	  z=$$($(VLC_CONFIG) --list plugin); 	  m=`for mod in $(mods); do case "$$z " in *\ $${mod}\ *) echo -n " lib$${mod}_plugin.la" ;; esac; done` ; 	  test -z "$$m" || 	    $(MAKE) $(AM_MAKEFLAGS) libvlc_LTLIBRARIES="$$m" uninstall-libvlcLTLIBRARIES || exit $$?; 	fi
@USE_LIBTOOL_FALSE@	@z=$$($(VLC_CONFIG) --list plugin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo rm -f "$(DESTDIR)$(libvlcdir)/lib$${mod}_plugin$(LIBEXT)" ; 	      rm -f "$(DESTDIR)$(libvlcdir)/lib$${mod}_plugin$(LIBEXT)" || true; 	      ;; 	  esac; 	done
@USE_LIBTOOL_FALSE@	@z=$$($(VLC_CONFIG) --list builtin); 	for mod in $(mods); do 	  case "$$z " 	    in *\ $${mod}\ *) 	      echo rm -f "$(DESTDIR)$(libdir)/vlc/lib$${mod}.a" ; 	      rm -f "$(DESTDIR)$(libdir)/vlc/lib$${mod}.a" || true; 	      ;; 	  esac; 	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
