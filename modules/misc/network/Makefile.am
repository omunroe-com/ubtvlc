
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/misc
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in ipv4 ipv6; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in ipv4 ipv6; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in ipv4 ipv6; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The ipv4 plugin

if UNTRUE
Lipv4p = libipv4_plugin.a
Dipv4p = libipv4_plugin$(LIBEXT)
Lipv4b = libipv4.a
Lipv4pic = libipv4_pic.a
endif

libipv4_plugin_a_SOURCES = $(SOURCES_ipv4)
libipv4_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ipv4`
libipv4_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ipv4`
libipv4_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ipv4`

libipv4_pic_a_SOURCES = $(SOURCES_ipv4)
libipv4_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ipv4`
libipv4_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ipv4`
libipv4_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ipv4`

libipv4_a_SOURCES = $(SOURCES_ipv4)
libipv4_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ipv4`
libipv4_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ipv4`
libipv4_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ipv4`

libvlc_LIBRARIES += $(Lipv4b) $(Lipv4pic)
libipv4_DATA = $(Dipv4p)

libipv4dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lipv4p)
libipv4_plugin$(LIBEXT): $(libipv4_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ipv4` in \
	  c++) echo $(CXXLINK) $(libipv4_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ipv4\` ; $(CXXLINK) $(libipv4_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ipv4` ;; \
	  objc) echo $(OBJCLINK) $(libipv4_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ipv4\` ; $(OBJCLINK) $(libipv4_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ipv4` ;; \
	  c|*) echo $(LINK) $(libipv4_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ipv4\` ; $(LINK) $(libipv4_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ipv4` ;; \
	esac


# The ipv6 plugin

if UNTRUE
Lipv6p = libipv6_plugin.a
Dipv6p = libipv6_plugin$(LIBEXT)
Lipv6b = libipv6.a
Lipv6pic = libipv6_pic.a
endif

libipv6_plugin_a_SOURCES = $(SOURCES_ipv6)
libipv6_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ipv6`
libipv6_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ipv6`
libipv6_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ipv6`

libipv6_pic_a_SOURCES = $(SOURCES_ipv6)
libipv6_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ipv6`
libipv6_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ipv6`
libipv6_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ipv6`

libipv6_a_SOURCES = $(SOURCES_ipv6)
libipv6_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ipv6`
libipv6_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ipv6`
libipv6_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ipv6`

libvlc_LIBRARIES += $(Lipv6b) $(Lipv6pic)
libipv6_DATA = $(Dipv6p)

libipv6dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lipv6p)
libipv6_plugin$(LIBEXT): $(libipv6_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ipv6` in \
	  c++) echo $(CXXLINK) $(libipv6_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ipv6\` ; $(CXXLINK) $(libipv6_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ipv6` ;; \
	  objc) echo $(OBJCLINK) $(libipv6_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ipv6\` ; $(OBJCLINK) $(libipv6_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ipv6` ;; \
	  c|*) echo $(LINK) $(libipv6_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ipv6\` ; $(LINK) $(libipv6_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ipv6` ;; \
	esac


