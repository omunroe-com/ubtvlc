
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/misc
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in xtag xml; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in xtag xml; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in xtag xml; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The xtag plugin

if UNTRUE
Lxtagp = libxtag_plugin.a
Dxtagp = libxtag_plugin$(LIBEXT)
Lxtagb = libxtag.a
Lxtagpic = libxtag_pic.a
endif

libxtag_plugin_a_SOURCES = $(SOURCES_xtag)
libxtag_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin xtag`
libxtag_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin xtag`
libxtag_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin xtag`

libxtag_pic_a_SOURCES = $(SOURCES_xtag)
libxtag_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic xtag`
libxtag_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic xtag`
libxtag_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic xtag`

libxtag_a_SOURCES = $(SOURCES_xtag)
libxtag_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin xtag`
libxtag_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin xtag`
libxtag_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin xtag`

libvlc_LIBRARIES += $(Lxtagb) $(Lxtagpic)
libxtag_DATA = $(Dxtagp)

libxtagdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lxtagp)
libxtag_plugin$(LIBEXT): $(libxtag_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage xtag` in \
	  c++) echo $(CXXLINK) $(libxtag_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xtag\` ; $(CXXLINK) $(libxtag_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xtag` ;; \
	  objc) echo $(OBJCLINK) $(libxtag_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xtag\` ; $(OBJCLINK) $(libxtag_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xtag` ;; \
	  c|*) echo $(LINK) $(libxtag_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xtag\` ; $(LINK) $(libxtag_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xtag` ;; \
	esac


# The xml plugin

if UNTRUE
Lxmlp = libxml_plugin.a
Dxmlp = libxml_plugin$(LIBEXT)
Lxmlb = libxml.a
Lxmlpic = libxml_pic.a
endif

libxml_plugin_a_SOURCES = $(SOURCES_xml)
libxml_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin xml`
libxml_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin xml`
libxml_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin xml`

libxml_pic_a_SOURCES = $(SOURCES_xml)
libxml_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic xml`
libxml_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic xml`
libxml_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic xml`

libxml_a_SOURCES = $(SOURCES_xml)
libxml_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin xml`
libxml_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin xml`
libxml_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin xml`

libvlc_LIBRARIES += $(Lxmlb) $(Lxmlpic)
libxml_DATA = $(Dxmlp)

libxmldir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lxmlp)
libxml_plugin$(LIBEXT): $(libxml_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage xml` in \
	  c++) echo $(CXXLINK) $(libxml_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xml\` ; $(CXXLINK) $(libxml_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xml` ;; \
	  objc) echo $(OBJCLINK) $(libxml_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xml\` ; $(OBJCLINK) $(libxml_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xml` ;; \
	  c|*) echo $(LINK) $(libxml_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin xml\` ; $(LINK) $(libxml_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin xml` ;; \
	esac


