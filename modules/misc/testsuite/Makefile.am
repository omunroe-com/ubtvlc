
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/misc
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in test1 test2 test3 test4; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in test1 test2 test3 test4; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in test1 test2 test3 test4; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The test1 plugin

if UNTRUE
Ltest1p = libtest1_plugin.a
Dtest1p = libtest1_plugin$(LIBEXT)
Ltest1b = libtest1.a
Ltest1pic = libtest1_pic.a
endif

libtest1_plugin_a_SOURCES = $(SOURCES_test1)
libtest1_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin test1`
libtest1_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin test1`
libtest1_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin test1`

libtest1_pic_a_SOURCES = $(SOURCES_test1)
libtest1_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic test1`
libtest1_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic test1`
libtest1_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic test1`

libtest1_a_SOURCES = $(SOURCES_test1)
libtest1_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin test1`
libtest1_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin test1`
libtest1_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin test1`

libvlc_LIBRARIES += $(Ltest1b) $(Ltest1pic)
libtest1_DATA = $(Dtest1p)

libtest1dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltest1p)
libtest1_plugin$(LIBEXT): $(libtest1_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage test1` in \
	  c++) echo $(CXXLINK) $(libtest1_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test1\` ; $(CXXLINK) $(libtest1_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test1` ;; \
	  objc) echo $(OBJCLINK) $(libtest1_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test1\` ; $(OBJCLINK) $(libtest1_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test1` ;; \
	  c|*) echo $(LINK) $(libtest1_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test1\` ; $(LINK) $(libtest1_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test1` ;; \
	esac


# The test2 plugin

if UNTRUE
Ltest2p = libtest2_plugin.a
Dtest2p = libtest2_plugin$(LIBEXT)
Ltest2b = libtest2.a
Ltest2pic = libtest2_pic.a
endif

libtest2_plugin_a_SOURCES = $(SOURCES_test2)
libtest2_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin test2`
libtest2_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin test2`
libtest2_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin test2`

libtest2_pic_a_SOURCES = $(SOURCES_test2)
libtest2_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic test2`
libtest2_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic test2`
libtest2_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic test2`

libtest2_a_SOURCES = $(SOURCES_test2)
libtest2_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin test2`
libtest2_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin test2`
libtest2_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin test2`

libvlc_LIBRARIES += $(Ltest2b) $(Ltest2pic)
libtest2_DATA = $(Dtest2p)

libtest2dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltest2p)
libtest2_plugin$(LIBEXT): $(libtest2_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage test2` in \
	  c++) echo $(CXXLINK) $(libtest2_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test2\` ; $(CXXLINK) $(libtest2_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test2` ;; \
	  objc) echo $(OBJCLINK) $(libtest2_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test2\` ; $(OBJCLINK) $(libtest2_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test2` ;; \
	  c|*) echo $(LINK) $(libtest2_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test2\` ; $(LINK) $(libtest2_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test2` ;; \
	esac


# The test3 plugin

if UNTRUE
Ltest3p = libtest3_plugin.a
Dtest3p = libtest3_plugin$(LIBEXT)
Ltest3b = libtest3.a
Ltest3pic = libtest3_pic.a
endif

libtest3_plugin_a_SOURCES = $(SOURCES_test3)
libtest3_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin test3`
libtest3_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin test3`
libtest3_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin test3`

libtest3_pic_a_SOURCES = $(SOURCES_test3)
libtest3_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic test3`
libtest3_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic test3`
libtest3_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic test3`

libtest3_a_SOURCES = $(SOURCES_test3)
libtest3_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin test3`
libtest3_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin test3`
libtest3_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin test3`

libvlc_LIBRARIES += $(Ltest3b) $(Ltest3pic)
libtest3_DATA = $(Dtest3p)

libtest3dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltest3p)
libtest3_plugin$(LIBEXT): $(libtest3_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage test3` in \
	  c++) echo $(CXXLINK) $(libtest3_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test3\` ; $(CXXLINK) $(libtest3_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test3` ;; \
	  objc) echo $(OBJCLINK) $(libtest3_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test3\` ; $(OBJCLINK) $(libtest3_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test3` ;; \
	  c|*) echo $(LINK) $(libtest3_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test3\` ; $(LINK) $(libtest3_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test3` ;; \
	esac


# The test4 plugin

if UNTRUE
Ltest4p = libtest4_plugin.a
Dtest4p = libtest4_plugin$(LIBEXT)
Ltest4b = libtest4.a
Ltest4pic = libtest4_pic.a
endif

libtest4_plugin_a_SOURCES = $(SOURCES_test4)
libtest4_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin test4`
libtest4_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin test4`
libtest4_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin test4`

libtest4_pic_a_SOURCES = $(SOURCES_test4)
libtest4_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic test4`
libtest4_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic test4`
libtest4_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic test4`

libtest4_a_SOURCES = $(SOURCES_test4)
libtest4_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin test4`
libtest4_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin test4`
libtest4_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin test4`

libvlc_LIBRARIES += $(Ltest4b) $(Ltest4pic)
libtest4_DATA = $(Dtest4p)

libtest4dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltest4p)
libtest4_plugin$(LIBEXT): $(libtest4_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage test4` in \
	  c++) echo $(CXXLINK) $(libtest4_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test4\` ; $(CXXLINK) $(libtest4_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test4` ;; \
	  objc) echo $(OBJCLINK) $(libtest4_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test4\` ; $(OBJCLINK) $(libtest4_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test4` ;; \
	  c|*) echo $(LINK) $(libtest4_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin test4\` ; $(LINK) $(libtest4_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin test4` ;; \
	esac


