
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = asf avi mp4 mpeg playlist util
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/demux
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in a52sys dtssys flac ogg m3u demuxdump rawdv au wav aac mkv livedotcom nsv real ts ps mod pva aiff sgimb mjpeg subtitle vobsub; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in a52sys dtssys flac ogg m3u demuxdump rawdv au wav aac mkv livedotcom nsv real ts ps mod pva aiff sgimb mjpeg subtitle vobsub; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in a52sys dtssys flac ogg m3u demuxdump rawdv au wav aac mkv livedotcom nsv real ts ps mod pva aiff sgimb mjpeg subtitle vobsub; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The a52sys plugin

if UNTRUE
La52sysp = liba52sys_plugin.a
Da52sysp = liba52sys_plugin$(LIBEXT)
La52sysb = liba52sys.a
La52syspic = liba52sys_pic.a
endif

liba52sys_plugin_a_SOURCES = $(SOURCES_a52sys)
liba52sys_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin a52sys`
liba52sys_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin a52sys`
liba52sys_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin a52sys`

liba52sys_pic_a_SOURCES = $(SOURCES_a52sys)
liba52sys_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic a52sys`
liba52sys_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic a52sys`
liba52sys_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic a52sys`

liba52sys_a_SOURCES = $(SOURCES_a52sys)
liba52sys_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin a52sys`
liba52sys_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin a52sys`
liba52sys_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin a52sys`

libvlc_LIBRARIES += $(La52sysb) $(La52syspic)
liba52sys_DATA = $(Da52sysp)

liba52sysdir = $(libdir)/vlc/
noinst_LIBRARIES += $(La52sysp)
liba52sys_plugin$(LIBEXT): $(liba52sys_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage a52sys` in \
	  c++) echo $(CXXLINK) $(liba52sys_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52sys\` ; $(CXXLINK) $(liba52sys_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52sys` ;; \
	  objc) echo $(OBJCLINK) $(liba52sys_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52sys\` ; $(OBJCLINK) $(liba52sys_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52sys` ;; \
	  c|*) echo $(LINK) $(liba52sys_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52sys\` ; $(LINK) $(liba52sys_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52sys` ;; \
	esac


# The dtssys plugin

if UNTRUE
Ldtssysp = libdtssys_plugin.a
Ddtssysp = libdtssys_plugin$(LIBEXT)
Ldtssysb = libdtssys.a
Ldtssyspic = libdtssys_pic.a
endif

libdtssys_plugin_a_SOURCES = $(SOURCES_dtssys)
libdtssys_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin dtssys`
libdtssys_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin dtssys`
libdtssys_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin dtssys`

libdtssys_pic_a_SOURCES = $(SOURCES_dtssys)
libdtssys_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic dtssys`
libdtssys_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic dtssys`
libdtssys_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic dtssys`

libdtssys_a_SOURCES = $(SOURCES_dtssys)
libdtssys_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin dtssys`
libdtssys_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin dtssys`
libdtssys_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin dtssys`

libvlc_LIBRARIES += $(Ldtssysb) $(Ldtssyspic)
libdtssys_DATA = $(Ddtssysp)

libdtssysdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ldtssysp)
libdtssys_plugin$(LIBEXT): $(libdtssys_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage dtssys` in \
	  c++) echo $(CXXLINK) $(libdtssys_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtssys\` ; $(CXXLINK) $(libdtssys_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtssys` ;; \
	  objc) echo $(OBJCLINK) $(libdtssys_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtssys\` ; $(OBJCLINK) $(libdtssys_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtssys` ;; \
	  c|*) echo $(LINK) $(libdtssys_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtssys\` ; $(LINK) $(libdtssys_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtssys` ;; \
	esac


# The flac plugin

if UNTRUE
Lflacp = libflac_plugin.a
Dflacp = libflac_plugin$(LIBEXT)
Lflacb = libflac.a
Lflacpic = libflac_pic.a
endif

libflac_plugin_a_SOURCES = $(SOURCES_flac)
libflac_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin flac`
libflac_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin flac`
libflac_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin flac`

libflac_pic_a_SOURCES = $(SOURCES_flac)
libflac_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic flac`
libflac_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic flac`
libflac_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic flac`

libflac_a_SOURCES = $(SOURCES_flac)
libflac_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin flac`
libflac_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin flac`
libflac_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin flac`

libvlc_LIBRARIES += $(Lflacb) $(Lflacpic)
libflac_DATA = $(Dflacp)

libflacdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lflacp)
libflac_plugin$(LIBEXT): $(libflac_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage flac` in \
	  c++) echo $(CXXLINK) $(libflac_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin flac\` ; $(CXXLINK) $(libflac_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin flac` ;; \
	  objc) echo $(OBJCLINK) $(libflac_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin flac\` ; $(OBJCLINK) $(libflac_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin flac` ;; \
	  c|*) echo $(LINK) $(libflac_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin flac\` ; $(LINK) $(libflac_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin flac` ;; \
	esac


# The ogg plugin

if UNTRUE
Loggp = libogg_plugin.a
Doggp = libogg_plugin$(LIBEXT)
Loggb = libogg.a
Loggpic = libogg_pic.a
endif

libogg_plugin_a_SOURCES = $(SOURCES_ogg)
libogg_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ogg`
libogg_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ogg`
libogg_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ogg`

libogg_pic_a_SOURCES = $(SOURCES_ogg)
libogg_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ogg`
libogg_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ogg`
libogg_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ogg`

libogg_a_SOURCES = $(SOURCES_ogg)
libogg_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ogg`
libogg_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ogg`
libogg_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ogg`

libvlc_LIBRARIES += $(Loggb) $(Loggpic)
libogg_DATA = $(Doggp)

liboggdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Loggp)
libogg_plugin$(LIBEXT): $(libogg_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ogg` in \
	  c++) echo $(CXXLINK) $(libogg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ogg\` ; $(CXXLINK) $(libogg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ogg` ;; \
	  objc) echo $(OBJCLINK) $(libogg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ogg\` ; $(OBJCLINK) $(libogg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ogg` ;; \
	  c|*) echo $(LINK) $(libogg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ogg\` ; $(LINK) $(libogg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ogg` ;; \
	esac


# The m3u plugin

if UNTRUE
Lm3up = libm3u_plugin.a
Dm3up = libm3u_plugin$(LIBEXT)
Lm3ub = libm3u.a
Lm3upic = libm3u_pic.a
endif

libm3u_plugin_a_SOURCES = $(SOURCES_m3u)
libm3u_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin m3u`
libm3u_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin m3u`
libm3u_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin m3u`

libm3u_pic_a_SOURCES = $(SOURCES_m3u)
libm3u_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic m3u`
libm3u_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic m3u`
libm3u_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic m3u`

libm3u_a_SOURCES = $(SOURCES_m3u)
libm3u_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin m3u`
libm3u_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin m3u`
libm3u_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin m3u`

libvlc_LIBRARIES += $(Lm3ub) $(Lm3upic)
libm3u_DATA = $(Dm3up)

libm3udir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lm3up)
libm3u_plugin$(LIBEXT): $(libm3u_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage m3u` in \
	  c++) echo $(CXXLINK) $(libm3u_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin m3u\` ; $(CXXLINK) $(libm3u_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin m3u` ;; \
	  objc) echo $(OBJCLINK) $(libm3u_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin m3u\` ; $(OBJCLINK) $(libm3u_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin m3u` ;; \
	  c|*) echo $(LINK) $(libm3u_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin m3u\` ; $(LINK) $(libm3u_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin m3u` ;; \
	esac


# The demuxdump plugin

if UNTRUE
Ldemuxdumpp = libdemuxdump_plugin.a
Ddemuxdumpp = libdemuxdump_plugin$(LIBEXT)
Ldemuxdumpb = libdemuxdump.a
Ldemuxdumppic = libdemuxdump_pic.a
endif

libdemuxdump_plugin_a_SOURCES = $(SOURCES_demuxdump)
libdemuxdump_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin demuxdump`
libdemuxdump_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin demuxdump`
libdemuxdump_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin demuxdump`

libdemuxdump_pic_a_SOURCES = $(SOURCES_demuxdump)
libdemuxdump_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic demuxdump`
libdemuxdump_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic demuxdump`
libdemuxdump_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic demuxdump`

libdemuxdump_a_SOURCES = $(SOURCES_demuxdump)
libdemuxdump_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin demuxdump`
libdemuxdump_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin demuxdump`
libdemuxdump_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin demuxdump`

libvlc_LIBRARIES += $(Ldemuxdumpb) $(Ldemuxdumppic)
libdemuxdump_DATA = $(Ddemuxdumpp)

libdemuxdumpdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ldemuxdumpp)
libdemuxdump_plugin$(LIBEXT): $(libdemuxdump_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage demuxdump` in \
	  c++) echo $(CXXLINK) $(libdemuxdump_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin demuxdump\` ; $(CXXLINK) $(libdemuxdump_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin demuxdump` ;; \
	  objc) echo $(OBJCLINK) $(libdemuxdump_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin demuxdump\` ; $(OBJCLINK) $(libdemuxdump_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin demuxdump` ;; \
	  c|*) echo $(LINK) $(libdemuxdump_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin demuxdump\` ; $(LINK) $(libdemuxdump_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin demuxdump` ;; \
	esac


# The rawdv plugin

if UNTRUE
Lrawdvp = librawdv_plugin.a
Drawdvp = librawdv_plugin$(LIBEXT)
Lrawdvb = librawdv.a
Lrawdvpic = librawdv_pic.a
endif

librawdv_plugin_a_SOURCES = $(SOURCES_rawdv)
librawdv_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin rawdv`
librawdv_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin rawdv`
librawdv_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin rawdv`

librawdv_pic_a_SOURCES = $(SOURCES_rawdv)
librawdv_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic rawdv`
librawdv_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic rawdv`
librawdv_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic rawdv`

librawdv_a_SOURCES = $(SOURCES_rawdv)
librawdv_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin rawdv`
librawdv_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin rawdv`
librawdv_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin rawdv`

libvlc_LIBRARIES += $(Lrawdvb) $(Lrawdvpic)
librawdv_DATA = $(Drawdvp)

librawdvdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lrawdvp)
librawdv_plugin$(LIBEXT): $(librawdv_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage rawdv` in \
	  c++) echo $(CXXLINK) $(librawdv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin rawdv\` ; $(CXXLINK) $(librawdv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin rawdv` ;; \
	  objc) echo $(OBJCLINK) $(librawdv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin rawdv\` ; $(OBJCLINK) $(librawdv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin rawdv` ;; \
	  c|*) echo $(LINK) $(librawdv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin rawdv\` ; $(LINK) $(librawdv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin rawdv` ;; \
	esac


# The au plugin

if UNTRUE
Laup = libau_plugin.a
Daup = libau_plugin$(LIBEXT)
Laub = libau.a
Laupic = libau_pic.a
endif

libau_plugin_a_SOURCES = $(SOURCES_au)
libau_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin au`
libau_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin au`
libau_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin au`

libau_pic_a_SOURCES = $(SOURCES_au)
libau_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic au`
libau_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic au`
libau_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic au`

libau_a_SOURCES = $(SOURCES_au)
libau_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin au`
libau_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin au`
libau_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin au`

libvlc_LIBRARIES += $(Laub) $(Laupic)
libau_DATA = $(Daup)

libaudir = $(libdir)/vlc/
noinst_LIBRARIES += $(Laup)
libau_plugin$(LIBEXT): $(libau_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage au` in \
	  c++) echo $(CXXLINK) $(libau_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin au\` ; $(CXXLINK) $(libau_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin au` ;; \
	  objc) echo $(OBJCLINK) $(libau_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin au\` ; $(OBJCLINK) $(libau_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin au` ;; \
	  c|*) echo $(LINK) $(libau_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin au\` ; $(LINK) $(libau_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin au` ;; \
	esac


# The wav plugin

if UNTRUE
Lwavp = libwav_plugin.a
Dwavp = libwav_plugin$(LIBEXT)
Lwavb = libwav.a
Lwavpic = libwav_pic.a
endif

libwav_plugin_a_SOURCES = $(SOURCES_wav)
libwav_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin wav`
libwav_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin wav`
libwav_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin wav`

libwav_pic_a_SOURCES = $(SOURCES_wav)
libwav_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic wav`
libwav_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic wav`
libwav_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic wav`

libwav_a_SOURCES = $(SOURCES_wav)
libwav_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin wav`
libwav_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin wav`
libwav_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin wav`

libvlc_LIBRARIES += $(Lwavb) $(Lwavpic)
libwav_DATA = $(Dwavp)

libwavdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lwavp)
libwav_plugin$(LIBEXT): $(libwav_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage wav` in \
	  c++) echo $(CXXLINK) $(libwav_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wav\` ; $(CXXLINK) $(libwav_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wav` ;; \
	  objc) echo $(OBJCLINK) $(libwav_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wav\` ; $(OBJCLINK) $(libwav_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wav` ;; \
	  c|*) echo $(LINK) $(libwav_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wav\` ; $(LINK) $(libwav_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wav` ;; \
	esac


# The aac plugin

if UNTRUE
Laacp = libaac_plugin.a
Daacp = libaac_plugin$(LIBEXT)
Laacb = libaac.a
Laacpic = libaac_pic.a
endif

libaac_plugin_a_SOURCES = $(SOURCES_aac)
libaac_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin aac`
libaac_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin aac`
libaac_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin aac`

libaac_pic_a_SOURCES = $(SOURCES_aac)
libaac_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic aac`
libaac_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic aac`
libaac_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic aac`

libaac_a_SOURCES = $(SOURCES_aac)
libaac_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin aac`
libaac_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin aac`
libaac_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin aac`

libvlc_LIBRARIES += $(Laacb) $(Laacpic)
libaac_DATA = $(Daacp)

libaacdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Laacp)
libaac_plugin$(LIBEXT): $(libaac_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage aac` in \
	  c++) echo $(CXXLINK) $(libaac_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aac\` ; $(CXXLINK) $(libaac_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aac` ;; \
	  objc) echo $(OBJCLINK) $(libaac_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aac\` ; $(OBJCLINK) $(libaac_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aac` ;; \
	  c|*) echo $(LINK) $(libaac_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aac\` ; $(LINK) $(libaac_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aac` ;; \
	esac


# The mkv plugin

if UNTRUE
Lmkvp = libmkv_plugin.a
Dmkvp = libmkv_plugin$(LIBEXT)
Lmkvb = libmkv.a
Lmkvpic = libmkv_pic.a
endif

libmkv_plugin_a_SOURCES = $(SOURCES_mkv)
libmkv_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mkv`
libmkv_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mkv`
libmkv_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mkv`

libmkv_pic_a_SOURCES = $(SOURCES_mkv)
libmkv_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mkv`
libmkv_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mkv`
libmkv_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mkv`

libmkv_a_SOURCES = $(SOURCES_mkv)
libmkv_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mkv`
libmkv_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mkv`
libmkv_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mkv`

libvlc_LIBRARIES += $(Lmkvb) $(Lmkvpic)
libmkv_DATA = $(Dmkvp)

libmkvdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmkvp)
libmkv_plugin$(LIBEXT): $(libmkv_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mkv` in \
	  c++) echo $(CXXLINK) $(libmkv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mkv\` ; $(CXXLINK) $(libmkv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mkv` ;; \
	  objc) echo $(OBJCLINK) $(libmkv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mkv\` ; $(OBJCLINK) $(libmkv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mkv` ;; \
	  c|*) echo $(LINK) $(libmkv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mkv\` ; $(LINK) $(libmkv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mkv` ;; \
	esac


# The livedotcom plugin

if UNTRUE
Llivedotcomp = liblivedotcom_plugin.a
Dlivedotcomp = liblivedotcom_plugin$(LIBEXT)
Llivedotcomb = liblivedotcom.a
Llivedotcompic = liblivedotcom_pic.a
endif

liblivedotcom_plugin_a_SOURCES = $(SOURCES_livedotcom)
liblivedotcom_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin livedotcom`
liblivedotcom_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin livedotcom`
liblivedotcom_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin livedotcom`

liblivedotcom_pic_a_SOURCES = $(SOURCES_livedotcom)
liblivedotcom_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic livedotcom`
liblivedotcom_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic livedotcom`
liblivedotcom_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic livedotcom`

liblivedotcom_a_SOURCES = $(SOURCES_livedotcom)
liblivedotcom_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin livedotcom`
liblivedotcom_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin livedotcom`
liblivedotcom_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin livedotcom`

libvlc_LIBRARIES += $(Llivedotcomb) $(Llivedotcompic)
liblivedotcom_DATA = $(Dlivedotcomp)

liblivedotcomdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Llivedotcomp)
liblivedotcom_plugin$(LIBEXT): $(liblivedotcom_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage livedotcom` in \
	  c++) echo $(CXXLINK) $(liblivedotcom_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin livedotcom\` ; $(CXXLINK) $(liblivedotcom_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin livedotcom` ;; \
	  objc) echo $(OBJCLINK) $(liblivedotcom_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin livedotcom\` ; $(OBJCLINK) $(liblivedotcom_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin livedotcom` ;; \
	  c|*) echo $(LINK) $(liblivedotcom_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin livedotcom\` ; $(LINK) $(liblivedotcom_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin livedotcom` ;; \
	esac


# The nsv plugin

if UNTRUE
Lnsvp = libnsv_plugin.a
Dnsvp = libnsv_plugin$(LIBEXT)
Lnsvb = libnsv.a
Lnsvpic = libnsv_pic.a
endif

libnsv_plugin_a_SOURCES = $(SOURCES_nsv)
libnsv_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin nsv`
libnsv_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin nsv`
libnsv_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin nsv`

libnsv_pic_a_SOURCES = $(SOURCES_nsv)
libnsv_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic nsv`
libnsv_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic nsv`
libnsv_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic nsv`

libnsv_a_SOURCES = $(SOURCES_nsv)
libnsv_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin nsv`
libnsv_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin nsv`
libnsv_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin nsv`

libvlc_LIBRARIES += $(Lnsvb) $(Lnsvpic)
libnsv_DATA = $(Dnsvp)

libnsvdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lnsvp)
libnsv_plugin$(LIBEXT): $(libnsv_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage nsv` in \
	  c++) echo $(CXXLINK) $(libnsv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin nsv\` ; $(CXXLINK) $(libnsv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin nsv` ;; \
	  objc) echo $(OBJCLINK) $(libnsv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin nsv\` ; $(OBJCLINK) $(libnsv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin nsv` ;; \
	  c|*) echo $(LINK) $(libnsv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin nsv\` ; $(LINK) $(libnsv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin nsv` ;; \
	esac


# The real plugin

if UNTRUE
Lrealp = libreal_plugin.a
Drealp = libreal_plugin$(LIBEXT)
Lrealb = libreal.a
Lrealpic = libreal_pic.a
endif

libreal_plugin_a_SOURCES = $(SOURCES_real)
libreal_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin real`
libreal_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin real`
libreal_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin real`

libreal_pic_a_SOURCES = $(SOURCES_real)
libreal_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic real`
libreal_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic real`
libreal_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic real`

libreal_a_SOURCES = $(SOURCES_real)
libreal_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin real`
libreal_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin real`
libreal_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin real`

libvlc_LIBRARIES += $(Lrealb) $(Lrealpic)
libreal_DATA = $(Drealp)

librealdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lrealp)
libreal_plugin$(LIBEXT): $(libreal_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage real` in \
	  c++) echo $(CXXLINK) $(libreal_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin real\` ; $(CXXLINK) $(libreal_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin real` ;; \
	  objc) echo $(OBJCLINK) $(libreal_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin real\` ; $(OBJCLINK) $(libreal_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin real` ;; \
	  c|*) echo $(LINK) $(libreal_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin real\` ; $(LINK) $(libreal_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin real` ;; \
	esac


# The ts plugin

if UNTRUE
Ltsp = libts_plugin.a
Dtsp = libts_plugin$(LIBEXT)
Ltsb = libts.a
Ltspic = libts_pic.a
endif

libts_plugin_a_SOURCES = $(SOURCES_ts)
libts_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ts`
libts_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ts`
libts_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ts`

libts_pic_a_SOURCES = $(SOURCES_ts)
libts_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ts`
libts_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ts`
libts_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ts`

libts_a_SOURCES = $(SOURCES_ts)
libts_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ts`
libts_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ts`
libts_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ts`

libvlc_LIBRARIES += $(Ltsb) $(Ltspic)
libts_DATA = $(Dtsp)

libtsdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltsp)
libts_plugin$(LIBEXT): $(libts_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ts` in \
	  c++) echo $(CXXLINK) $(libts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts\` ; $(CXXLINK) $(libts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts` ;; \
	  objc) echo $(OBJCLINK) $(libts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts\` ; $(OBJCLINK) $(libts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts` ;; \
	  c|*) echo $(LINK) $(libts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts\` ; $(LINK) $(libts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts` ;; \
	esac


# The ps plugin

if UNTRUE
Lpsp = libps_plugin.a
Dpsp = libps_plugin$(LIBEXT)
Lpsb = libps.a
Lpspic = libps_pic.a
endif

libps_plugin_a_SOURCES = $(SOURCES_ps)
libps_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ps`
libps_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ps`
libps_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ps`

libps_pic_a_SOURCES = $(SOURCES_ps)
libps_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ps`
libps_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ps`
libps_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ps`

libps_a_SOURCES = $(SOURCES_ps)
libps_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ps`
libps_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ps`
libps_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ps`

libvlc_LIBRARIES += $(Lpsb) $(Lpspic)
libps_DATA = $(Dpsp)

libpsdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lpsp)
libps_plugin$(LIBEXT): $(libps_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ps` in \
	  c++) echo $(CXXLINK) $(libps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ps\` ; $(CXXLINK) $(libps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ps` ;; \
	  objc) echo $(OBJCLINK) $(libps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ps\` ; $(OBJCLINK) $(libps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ps` ;; \
	  c|*) echo $(LINK) $(libps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ps\` ; $(LINK) $(libps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ps` ;; \
	esac


# The mod plugin

if UNTRUE
Lmodp = libmod_plugin.a
Dmodp = libmod_plugin$(LIBEXT)
Lmodb = libmod.a
Lmodpic = libmod_pic.a
endif

libmod_plugin_a_SOURCES = $(SOURCES_mod)
libmod_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mod`
libmod_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mod`
libmod_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mod`

libmod_pic_a_SOURCES = $(SOURCES_mod)
libmod_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mod`
libmod_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mod`
libmod_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mod`

libmod_a_SOURCES = $(SOURCES_mod)
libmod_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mod`
libmod_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mod`
libmod_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mod`

libvlc_LIBRARIES += $(Lmodb) $(Lmodpic)
libmod_DATA = $(Dmodp)

libmoddir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmodp)
libmod_plugin$(LIBEXT): $(libmod_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mod` in \
	  c++) echo $(CXXLINK) $(libmod_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mod\` ; $(CXXLINK) $(libmod_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mod` ;; \
	  objc) echo $(OBJCLINK) $(libmod_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mod\` ; $(OBJCLINK) $(libmod_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mod` ;; \
	  c|*) echo $(LINK) $(libmod_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mod\` ; $(LINK) $(libmod_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mod` ;; \
	esac


# The pva plugin

if UNTRUE
Lpvap = libpva_plugin.a
Dpvap = libpva_plugin$(LIBEXT)
Lpvab = libpva.a
Lpvapic = libpva_pic.a
endif

libpva_plugin_a_SOURCES = $(SOURCES_pva)
libpva_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin pva`
libpva_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin pva`
libpva_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin pva`

libpva_pic_a_SOURCES = $(SOURCES_pva)
libpva_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic pva`
libpva_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic pva`
libpva_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic pva`

libpva_a_SOURCES = $(SOURCES_pva)
libpva_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pva`
libpva_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pva`
libpva_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pva`

libvlc_LIBRARIES += $(Lpvab) $(Lpvapic)
libpva_DATA = $(Dpvap)

libpvadir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lpvap)
libpva_plugin$(LIBEXT): $(libpva_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage pva` in \
	  c++) echo $(CXXLINK) $(libpva_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin pva\` ; $(CXXLINK) $(libpva_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin pva` ;; \
	  objc) echo $(OBJCLINK) $(libpva_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin pva\` ; $(OBJCLINK) $(libpva_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin pva` ;; \
	  c|*) echo $(LINK) $(libpva_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin pva\` ; $(LINK) $(libpva_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin pva` ;; \
	esac


# The aiff plugin

if UNTRUE
Laiffp = libaiff_plugin.a
Daiffp = libaiff_plugin$(LIBEXT)
Laiffb = libaiff.a
Laiffpic = libaiff_pic.a
endif

libaiff_plugin_a_SOURCES = $(SOURCES_aiff)
libaiff_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin aiff`
libaiff_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin aiff`
libaiff_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin aiff`

libaiff_pic_a_SOURCES = $(SOURCES_aiff)
libaiff_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic aiff`
libaiff_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic aiff`
libaiff_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic aiff`

libaiff_a_SOURCES = $(SOURCES_aiff)
libaiff_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin aiff`
libaiff_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin aiff`
libaiff_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin aiff`

libvlc_LIBRARIES += $(Laiffb) $(Laiffpic)
libaiff_DATA = $(Daiffp)

libaiffdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Laiffp)
libaiff_plugin$(LIBEXT): $(libaiff_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage aiff` in \
	  c++) echo $(CXXLINK) $(libaiff_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aiff\` ; $(CXXLINK) $(libaiff_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aiff` ;; \
	  objc) echo $(OBJCLINK) $(libaiff_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aiff\` ; $(OBJCLINK) $(libaiff_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aiff` ;; \
	  c|*) echo $(LINK) $(libaiff_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aiff\` ; $(LINK) $(libaiff_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aiff` ;; \
	esac


# The sgimb plugin

if UNTRUE
Lsgimbp = libsgimb_plugin.a
Dsgimbp = libsgimb_plugin$(LIBEXT)
Lsgimbb = libsgimb.a
Lsgimbpic = libsgimb_pic.a
endif

libsgimb_plugin_a_SOURCES = $(SOURCES_sgimb)
libsgimb_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin sgimb`
libsgimb_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin sgimb`
libsgimb_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin sgimb`

libsgimb_pic_a_SOURCES = $(SOURCES_sgimb)
libsgimb_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic sgimb`
libsgimb_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic sgimb`
libsgimb_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic sgimb`

libsgimb_a_SOURCES = $(SOURCES_sgimb)
libsgimb_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin sgimb`
libsgimb_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin sgimb`
libsgimb_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin sgimb`

libvlc_LIBRARIES += $(Lsgimbb) $(Lsgimbpic)
libsgimb_DATA = $(Dsgimbp)

libsgimbdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lsgimbp)
libsgimb_plugin$(LIBEXT): $(libsgimb_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage sgimb` in \
	  c++) echo $(CXXLINK) $(libsgimb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin sgimb\` ; $(CXXLINK) $(libsgimb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin sgimb` ;; \
	  objc) echo $(OBJCLINK) $(libsgimb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin sgimb\` ; $(OBJCLINK) $(libsgimb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin sgimb` ;; \
	  c|*) echo $(LINK) $(libsgimb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin sgimb\` ; $(LINK) $(libsgimb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin sgimb` ;; \
	esac


# The mjpeg plugin

if UNTRUE
Lmjpegp = libmjpeg_plugin.a
Dmjpegp = libmjpeg_plugin$(LIBEXT)
Lmjpegb = libmjpeg.a
Lmjpegpic = libmjpeg_pic.a
endif

libmjpeg_plugin_a_SOURCES = $(SOURCES_mjpeg)
libmjpeg_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mjpeg`
libmjpeg_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mjpeg`
libmjpeg_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mjpeg`

libmjpeg_pic_a_SOURCES = $(SOURCES_mjpeg)
libmjpeg_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mjpeg`
libmjpeg_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mjpeg`
libmjpeg_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mjpeg`

libmjpeg_a_SOURCES = $(SOURCES_mjpeg)
libmjpeg_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mjpeg`
libmjpeg_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mjpeg`
libmjpeg_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mjpeg`

libvlc_LIBRARIES += $(Lmjpegb) $(Lmjpegpic)
libmjpeg_DATA = $(Dmjpegp)

libmjpegdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmjpegp)
libmjpeg_plugin$(LIBEXT): $(libmjpeg_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mjpeg` in \
	  c++) echo $(CXXLINK) $(libmjpeg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mjpeg\` ; $(CXXLINK) $(libmjpeg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mjpeg` ;; \
	  objc) echo $(OBJCLINK) $(libmjpeg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mjpeg\` ; $(OBJCLINK) $(libmjpeg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mjpeg` ;; \
	  c|*) echo $(LINK) $(libmjpeg_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mjpeg\` ; $(LINK) $(libmjpeg_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mjpeg` ;; \
	esac


# The subtitle plugin

if UNTRUE
Lsubtitlep = libsubtitle_plugin.a
Dsubtitlep = libsubtitle_plugin$(LIBEXT)
Lsubtitleb = libsubtitle.a
Lsubtitlepic = libsubtitle_pic.a
endif

libsubtitle_plugin_a_SOURCES = $(SOURCES_subtitle)
libsubtitle_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin subtitle`
libsubtitle_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin subtitle`
libsubtitle_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin subtitle`

libsubtitle_pic_a_SOURCES = $(SOURCES_subtitle)
libsubtitle_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic subtitle`
libsubtitle_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic subtitle`
libsubtitle_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic subtitle`

libsubtitle_a_SOURCES = $(SOURCES_subtitle)
libsubtitle_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin subtitle`
libsubtitle_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin subtitle`
libsubtitle_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin subtitle`

libvlc_LIBRARIES += $(Lsubtitleb) $(Lsubtitlepic)
libsubtitle_DATA = $(Dsubtitlep)

libsubtitledir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lsubtitlep)
libsubtitle_plugin$(LIBEXT): $(libsubtitle_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage subtitle` in \
	  c++) echo $(CXXLINK) $(libsubtitle_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin subtitle\` ; $(CXXLINK) $(libsubtitle_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin subtitle` ;; \
	  objc) echo $(OBJCLINK) $(libsubtitle_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin subtitle\` ; $(OBJCLINK) $(libsubtitle_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin subtitle` ;; \
	  c|*) echo $(LINK) $(libsubtitle_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin subtitle\` ; $(LINK) $(libsubtitle_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin subtitle` ;; \
	esac


# The vobsub plugin

if UNTRUE
Lvobsubp = libvobsub_plugin.a
Dvobsubp = libvobsub_plugin$(LIBEXT)
Lvobsubb = libvobsub.a
Lvobsubpic = libvobsub_pic.a
endif

libvobsub_plugin_a_SOURCES = $(SOURCES_vobsub)
libvobsub_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin vobsub`
libvobsub_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin vobsub`
libvobsub_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin vobsub`

libvobsub_pic_a_SOURCES = $(SOURCES_vobsub)
libvobsub_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic vobsub`
libvobsub_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic vobsub`
libvobsub_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic vobsub`

libvobsub_a_SOURCES = $(SOURCES_vobsub)
libvobsub_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin vobsub`
libvobsub_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin vobsub`
libvobsub_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin vobsub`

libvlc_LIBRARIES += $(Lvobsubb) $(Lvobsubpic)
libvobsub_DATA = $(Dvobsubp)

libvobsubdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lvobsubp)
libvobsub_plugin$(LIBEXT): $(libvobsub_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage vobsub` in \
	  c++) echo $(CXXLINK) $(libvobsub_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vobsub\` ; $(CXXLINK) $(libvobsub_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vobsub` ;; \
	  objc) echo $(OBJCLINK) $(libvobsub_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vobsub\` ; $(OBJCLINK) $(libvobsub_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vobsub` ;; \
	  c|*) echo $(LINK) $(libvobsub_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vobsub\` ; $(LINK) $(libvobsub_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vobsub` ;; \
	esac


