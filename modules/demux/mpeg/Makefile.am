
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/demux
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in mpeg_system m4v ps ts ts_dvbpsi mpga mpgv h264; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in mpeg_system m4v ps ts ts_dvbpsi mpga mpgv h264; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in mpeg_system m4v ps ts ts_dvbpsi mpga mpgv h264; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The mpeg_system plugin

if UNTRUE
Lmpeg_systemp = libmpeg_system_plugin.a
Dmpeg_systemp = libmpeg_system_plugin$(LIBEXT)
Lmpeg_systemb = libmpeg_system.a
Lmpeg_systempic = libmpeg_system_pic.a
endif

libmpeg_system_plugin_a_SOURCES = $(SOURCES_mpeg_system)
libmpeg_system_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mpeg_system`
libmpeg_system_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mpeg_system`
libmpeg_system_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mpeg_system`

libmpeg_system_pic_a_SOURCES = $(SOURCES_mpeg_system)
libmpeg_system_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mpeg_system`
libmpeg_system_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mpeg_system`
libmpeg_system_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mpeg_system`

libmpeg_system_a_SOURCES = $(SOURCES_mpeg_system)
libmpeg_system_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mpeg_system`
libmpeg_system_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mpeg_system`
libmpeg_system_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mpeg_system`

libvlc_LIBRARIES += $(Lmpeg_systemb) $(Lmpeg_systempic)
libmpeg_system_DATA = $(Dmpeg_systemp)

libmpeg_systemdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmpeg_systemp)
libmpeg_system_plugin$(LIBEXT): $(libmpeg_system_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mpeg_system` in \
	  c++) echo $(CXXLINK) $(libmpeg_system_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpeg_system\` ; $(CXXLINK) $(libmpeg_system_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpeg_system` ;; \
	  objc) echo $(OBJCLINK) $(libmpeg_system_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpeg_system\` ; $(OBJCLINK) $(libmpeg_system_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpeg_system` ;; \
	  c|*) echo $(LINK) $(libmpeg_system_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpeg_system\` ; $(LINK) $(libmpeg_system_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpeg_system` ;; \
	esac


# The m4v plugin

if UNTRUE
Lm4vp = libm4v_plugin.a
Dm4vp = libm4v_plugin$(LIBEXT)
Lm4vb = libm4v.a
Lm4vpic = libm4v_pic.a
endif

libm4v_plugin_a_SOURCES = $(SOURCES_m4v)
libm4v_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin m4v`
libm4v_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin m4v`
libm4v_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin m4v`

libm4v_pic_a_SOURCES = $(SOURCES_m4v)
libm4v_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic m4v`
libm4v_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic m4v`
libm4v_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic m4v`

libm4v_a_SOURCES = $(SOURCES_m4v)
libm4v_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin m4v`
libm4v_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin m4v`
libm4v_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin m4v`

libvlc_LIBRARIES += $(Lm4vb) $(Lm4vpic)
libm4v_DATA = $(Dm4vp)

libm4vdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lm4vp)
libm4v_plugin$(LIBEXT): $(libm4v_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage m4v` in \
	  c++) echo $(CXXLINK) $(libm4v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin m4v\` ; $(CXXLINK) $(libm4v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin m4v` ;; \
	  objc) echo $(OBJCLINK) $(libm4v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin m4v\` ; $(OBJCLINK) $(libm4v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin m4v` ;; \
	  c|*) echo $(LINK) $(libm4v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin m4v\` ; $(LINK) $(libm4v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin m4v` ;; \
	esac


# The ps plugin

if UNTRUE
Lpsp = libps_plugin.a
Dpsp = libps_plugin$(LIBEXT)
Lpsb = libps.a
Lpspic = libps_pic.a
endif

libps_plugin_a_SOURCES = $(SOURCES_ps)
libps_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ps`
libps_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ps`
libps_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ps`

libps_pic_a_SOURCES = $(SOURCES_ps)
libps_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ps`
libps_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ps`
libps_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ps`

libps_a_SOURCES = $(SOURCES_ps)
libps_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ps`
libps_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ps`
libps_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ps`

libvlc_LIBRARIES += $(Lpsb) $(Lpspic)
libps_DATA = $(Dpsp)

libpsdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lpsp)
libps_plugin$(LIBEXT): $(libps_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ps` in \
	  c++) echo $(CXXLINK) $(libps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ps\` ; $(CXXLINK) $(libps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ps` ;; \
	  objc) echo $(OBJCLINK) $(libps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ps\` ; $(OBJCLINK) $(libps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ps` ;; \
	  c|*) echo $(LINK) $(libps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ps\` ; $(LINK) $(libps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ps` ;; \
	esac


# The ts plugin

if UNTRUE
Ltsp = libts_plugin.a
Dtsp = libts_plugin$(LIBEXT)
Ltsb = libts.a
Ltspic = libts_pic.a
endif

libts_plugin_a_SOURCES = $(SOURCES_ts)
libts_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ts`
libts_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ts`
libts_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ts`

libts_pic_a_SOURCES = $(SOURCES_ts)
libts_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ts`
libts_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ts`
libts_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ts`

libts_a_SOURCES = $(SOURCES_ts)
libts_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ts`
libts_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ts`
libts_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ts`

libvlc_LIBRARIES += $(Ltsb) $(Ltspic)
libts_DATA = $(Dtsp)

libtsdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltsp)
libts_plugin$(LIBEXT): $(libts_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ts` in \
	  c++) echo $(CXXLINK) $(libts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts\` ; $(CXXLINK) $(libts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts` ;; \
	  objc) echo $(OBJCLINK) $(libts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts\` ; $(OBJCLINK) $(libts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts` ;; \
	  c|*) echo $(LINK) $(libts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts\` ; $(LINK) $(libts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts` ;; \
	esac


# The ts_dvbpsi plugin

if UNTRUE
Lts_dvbpsip = libts_dvbpsi_plugin.a
Dts_dvbpsip = libts_dvbpsi_plugin$(LIBEXT)
Lts_dvbpsib = libts_dvbpsi.a
Lts_dvbpsipic = libts_dvbpsi_pic.a
endif

libts_dvbpsi_plugin_a_SOURCES = $(SOURCES_ts_dvbpsi)
libts_dvbpsi_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ts_dvbpsi`
libts_dvbpsi_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ts_dvbpsi`
libts_dvbpsi_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ts_dvbpsi`

libts_dvbpsi_pic_a_SOURCES = $(SOURCES_ts_dvbpsi)
libts_dvbpsi_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ts_dvbpsi`
libts_dvbpsi_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ts_dvbpsi`
libts_dvbpsi_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ts_dvbpsi`

libts_dvbpsi_a_SOURCES = $(SOURCES_ts_dvbpsi)
libts_dvbpsi_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ts_dvbpsi`
libts_dvbpsi_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ts_dvbpsi`
libts_dvbpsi_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ts_dvbpsi`

libvlc_LIBRARIES += $(Lts_dvbpsib) $(Lts_dvbpsipic)
libts_dvbpsi_DATA = $(Dts_dvbpsip)

libts_dvbpsidir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lts_dvbpsip)
libts_dvbpsi_plugin$(LIBEXT): $(libts_dvbpsi_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ts_dvbpsi` in \
	  c++) echo $(CXXLINK) $(libts_dvbpsi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts_dvbpsi\` ; $(CXXLINK) $(libts_dvbpsi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts_dvbpsi` ;; \
	  objc) echo $(OBJCLINK) $(libts_dvbpsi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts_dvbpsi\` ; $(OBJCLINK) $(libts_dvbpsi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts_dvbpsi` ;; \
	  c|*) echo $(LINK) $(libts_dvbpsi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ts_dvbpsi\` ; $(LINK) $(libts_dvbpsi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ts_dvbpsi` ;; \
	esac


# The mpga plugin

if UNTRUE
Lmpgap = libmpga_plugin.a
Dmpgap = libmpga_plugin$(LIBEXT)
Lmpgab = libmpga.a
Lmpgapic = libmpga_pic.a
endif

libmpga_plugin_a_SOURCES = $(SOURCES_mpga)
libmpga_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mpga`
libmpga_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mpga`
libmpga_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mpga`

libmpga_pic_a_SOURCES = $(SOURCES_mpga)
libmpga_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mpga`
libmpga_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mpga`
libmpga_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mpga`

libmpga_a_SOURCES = $(SOURCES_mpga)
libmpga_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mpga`
libmpga_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mpga`
libmpga_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mpga`

libvlc_LIBRARIES += $(Lmpgab) $(Lmpgapic)
libmpga_DATA = $(Dmpgap)

libmpgadir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmpgap)
libmpga_plugin$(LIBEXT): $(libmpga_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mpga` in \
	  c++) echo $(CXXLINK) $(libmpga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpga\` ; $(CXXLINK) $(libmpga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpga` ;; \
	  objc) echo $(OBJCLINK) $(libmpga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpga\` ; $(OBJCLINK) $(libmpga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpga` ;; \
	  c|*) echo $(LINK) $(libmpga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpga\` ; $(LINK) $(libmpga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpga` ;; \
	esac


# The mpgv plugin

if UNTRUE
Lmpgvp = libmpgv_plugin.a
Dmpgvp = libmpgv_plugin$(LIBEXT)
Lmpgvb = libmpgv.a
Lmpgvpic = libmpgv_pic.a
endif

libmpgv_plugin_a_SOURCES = $(SOURCES_mpgv)
libmpgv_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mpgv`
libmpgv_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mpgv`
libmpgv_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mpgv`

libmpgv_pic_a_SOURCES = $(SOURCES_mpgv)
libmpgv_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mpgv`
libmpgv_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mpgv`
libmpgv_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mpgv`

libmpgv_a_SOURCES = $(SOURCES_mpgv)
libmpgv_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mpgv`
libmpgv_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mpgv`
libmpgv_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mpgv`

libvlc_LIBRARIES += $(Lmpgvb) $(Lmpgvpic)
libmpgv_DATA = $(Dmpgvp)

libmpgvdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmpgvp)
libmpgv_plugin$(LIBEXT): $(libmpgv_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mpgv` in \
	  c++) echo $(CXXLINK) $(libmpgv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpgv\` ; $(CXXLINK) $(libmpgv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpgv` ;; \
	  objc) echo $(OBJCLINK) $(libmpgv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpgv\` ; $(OBJCLINK) $(libmpgv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpgv` ;; \
	  c|*) echo $(LINK) $(libmpgv_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpgv\` ; $(LINK) $(libmpgv_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpgv` ;; \
	esac


# The h264 plugin

if UNTRUE
Lh264p = libh264_plugin.a
Dh264p = libh264_plugin$(LIBEXT)
Lh264b = libh264.a
Lh264pic = libh264_pic.a
endif

libh264_plugin_a_SOURCES = $(SOURCES_h264)
libh264_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin h264`
libh264_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin h264`
libh264_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin h264`

libh264_pic_a_SOURCES = $(SOURCES_h264)
libh264_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic h264`
libh264_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic h264`
libh264_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic h264`

libh264_a_SOURCES = $(SOURCES_h264)
libh264_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin h264`
libh264_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin h264`
libh264_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin h264`

libvlc_LIBRARIES += $(Lh264b) $(Lh264pic)
libh264_DATA = $(Dh264p)

libh264dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lh264p)
libh264_plugin$(LIBEXT): $(libh264_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage h264` in \
	  c++) echo $(CXXLINK) $(libh264_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin h264\` ; $(CXXLINK) $(libh264_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin h264` ;; \
	  objc) echo $(OBJCLINK) $(libh264_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin h264\` ; $(OBJCLINK) $(libh264_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin h264` ;; \
	  c|*) echo $(LINK) $(libh264_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin h264\` ; $(LINK) $(libh264_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin h264` ;; \
	esac


