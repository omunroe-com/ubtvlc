
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/access
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in dvdread; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in dvdread; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in dvdread; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The dvdread plugin

if UNTRUE
Ldvdreadp = libdvdread_plugin.a
Ddvdreadp = libdvdread_plugin$(LIBEXT)
Ldvdreadb = libdvdread.a
Ldvdreadpic = libdvdread_pic.a
endif

libdvdread_plugin_a_SOURCES = $(SOURCES_dvdread)
libdvdread_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin dvdread`
libdvdread_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin dvdread`
libdvdread_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin dvdread`

libdvdread_pic_a_SOURCES = $(SOURCES_dvdread)
libdvdread_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic dvdread`
libdvdread_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic dvdread`
libdvdread_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic dvdread`

libdvdread_a_SOURCES = $(SOURCES_dvdread)
libdvdread_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin dvdread`
libdvdread_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin dvdread`
libdvdread_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin dvdread`

libvlc_LIBRARIES += $(Ldvdreadb) $(Ldvdreadpic)
libdvdread_DATA = $(Ddvdreadp)

libdvdreaddir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ldvdreadp)
libdvdread_plugin$(LIBEXT): $(libdvdread_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage dvdread` in \
	  c++) echo $(CXXLINK) $(libdvdread_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dvdread\` ; $(CXXLINK) $(libdvdread_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dvdread` ;; \
	  objc) echo $(OBJCLINK) $(libdvdread_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dvdread\` ; $(OBJCLINK) $(libdvdread_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dvdread` ;; \
	  c|*) echo $(LINK) $(libdvdread_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dvdread\` ; $(LINK) $(libdvdread_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dvdread` ;; \
	esac


