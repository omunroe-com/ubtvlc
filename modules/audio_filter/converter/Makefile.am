
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/audio_filter
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in float32tos16 float32tos8 float32tou16 float32tou8 a52tospdif a52tofloat32 dtstospdif dtstofloat32 fixed32tos16 s16tofixed32 fixed32tofloat32 s16tofloat32 s16tofloat32swab s8tofloat32 u8tofixed32 u8tofloat32 mpgatofixed32; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in float32tos16 float32tos8 float32tou16 float32tou8 a52tospdif a52tofloat32 dtstospdif dtstofloat32 fixed32tos16 s16tofixed32 fixed32tofloat32 s16tofloat32 s16tofloat32swab s8tofloat32 u8tofixed32 u8tofloat32 mpgatofixed32; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in float32tos16 float32tos8 float32tou16 float32tou8 a52tospdif a52tofloat32 dtstospdif dtstofloat32 fixed32tos16 s16tofixed32 fixed32tofloat32 s16tofloat32 s16tofloat32swab s8tofloat32 u8tofixed32 u8tofloat32 mpgatofixed32; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The float32tos16 plugin

if UNTRUE
Lfloat32tos16p = libfloat32tos16_plugin.a
Dfloat32tos16p = libfloat32tos16_plugin$(LIBEXT)
Lfloat32tos16b = libfloat32tos16.a
Lfloat32tos16pic = libfloat32tos16_pic.a
endif

libfloat32tos16_plugin_a_SOURCES = $(SOURCES_float32tos16)
libfloat32tos16_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin float32tos16`
libfloat32tos16_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin float32tos16`
libfloat32tos16_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin float32tos16`

libfloat32tos16_pic_a_SOURCES = $(SOURCES_float32tos16)
libfloat32tos16_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic float32tos16`
libfloat32tos16_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic float32tos16`
libfloat32tos16_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic float32tos16`

libfloat32tos16_a_SOURCES = $(SOURCES_float32tos16)
libfloat32tos16_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin float32tos16`
libfloat32tos16_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin float32tos16`
libfloat32tos16_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin float32tos16`

libvlc_LIBRARIES += $(Lfloat32tos16b) $(Lfloat32tos16pic)
libfloat32tos16_DATA = $(Dfloat32tos16p)

libfloat32tos16dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfloat32tos16p)
libfloat32tos16_plugin$(LIBEXT): $(libfloat32tos16_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage float32tos16` in \
	  c++) echo $(CXXLINK) $(libfloat32tos16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tos16\` ; $(CXXLINK) $(libfloat32tos16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tos16` ;; \
	  objc) echo $(OBJCLINK) $(libfloat32tos16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tos16\` ; $(OBJCLINK) $(libfloat32tos16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tos16` ;; \
	  c|*) echo $(LINK) $(libfloat32tos16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tos16\` ; $(LINK) $(libfloat32tos16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tos16` ;; \
	esac


# The float32tos8 plugin

if UNTRUE
Lfloat32tos8p = libfloat32tos8_plugin.a
Dfloat32tos8p = libfloat32tos8_plugin$(LIBEXT)
Lfloat32tos8b = libfloat32tos8.a
Lfloat32tos8pic = libfloat32tos8_pic.a
endif

libfloat32tos8_plugin_a_SOURCES = $(SOURCES_float32tos8)
libfloat32tos8_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin float32tos8`
libfloat32tos8_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin float32tos8`
libfloat32tos8_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin float32tos8`

libfloat32tos8_pic_a_SOURCES = $(SOURCES_float32tos8)
libfloat32tos8_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic float32tos8`
libfloat32tos8_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic float32tos8`
libfloat32tos8_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic float32tos8`

libfloat32tos8_a_SOURCES = $(SOURCES_float32tos8)
libfloat32tos8_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin float32tos8`
libfloat32tos8_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin float32tos8`
libfloat32tos8_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin float32tos8`

libvlc_LIBRARIES += $(Lfloat32tos8b) $(Lfloat32tos8pic)
libfloat32tos8_DATA = $(Dfloat32tos8p)

libfloat32tos8dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfloat32tos8p)
libfloat32tos8_plugin$(LIBEXT): $(libfloat32tos8_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage float32tos8` in \
	  c++) echo $(CXXLINK) $(libfloat32tos8_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tos8\` ; $(CXXLINK) $(libfloat32tos8_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tos8` ;; \
	  objc) echo $(OBJCLINK) $(libfloat32tos8_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tos8\` ; $(OBJCLINK) $(libfloat32tos8_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tos8` ;; \
	  c|*) echo $(LINK) $(libfloat32tos8_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tos8\` ; $(LINK) $(libfloat32tos8_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tos8` ;; \
	esac


# The float32tou16 plugin

if UNTRUE
Lfloat32tou16p = libfloat32tou16_plugin.a
Dfloat32tou16p = libfloat32tou16_plugin$(LIBEXT)
Lfloat32tou16b = libfloat32tou16.a
Lfloat32tou16pic = libfloat32tou16_pic.a
endif

libfloat32tou16_plugin_a_SOURCES = $(SOURCES_float32tou16)
libfloat32tou16_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin float32tou16`
libfloat32tou16_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin float32tou16`
libfloat32tou16_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin float32tou16`

libfloat32tou16_pic_a_SOURCES = $(SOURCES_float32tou16)
libfloat32tou16_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic float32tou16`
libfloat32tou16_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic float32tou16`
libfloat32tou16_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic float32tou16`

libfloat32tou16_a_SOURCES = $(SOURCES_float32tou16)
libfloat32tou16_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin float32tou16`
libfloat32tou16_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin float32tou16`
libfloat32tou16_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin float32tou16`

libvlc_LIBRARIES += $(Lfloat32tou16b) $(Lfloat32tou16pic)
libfloat32tou16_DATA = $(Dfloat32tou16p)

libfloat32tou16dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfloat32tou16p)
libfloat32tou16_plugin$(LIBEXT): $(libfloat32tou16_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage float32tou16` in \
	  c++) echo $(CXXLINK) $(libfloat32tou16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tou16\` ; $(CXXLINK) $(libfloat32tou16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tou16` ;; \
	  objc) echo $(OBJCLINK) $(libfloat32tou16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tou16\` ; $(OBJCLINK) $(libfloat32tou16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tou16` ;; \
	  c|*) echo $(LINK) $(libfloat32tou16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tou16\` ; $(LINK) $(libfloat32tou16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tou16` ;; \
	esac


# The float32tou8 plugin

if UNTRUE
Lfloat32tou8p = libfloat32tou8_plugin.a
Dfloat32tou8p = libfloat32tou8_plugin$(LIBEXT)
Lfloat32tou8b = libfloat32tou8.a
Lfloat32tou8pic = libfloat32tou8_pic.a
endif

libfloat32tou8_plugin_a_SOURCES = $(SOURCES_float32tou8)
libfloat32tou8_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin float32tou8`
libfloat32tou8_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin float32tou8`
libfloat32tou8_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin float32tou8`

libfloat32tou8_pic_a_SOURCES = $(SOURCES_float32tou8)
libfloat32tou8_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic float32tou8`
libfloat32tou8_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic float32tou8`
libfloat32tou8_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic float32tou8`

libfloat32tou8_a_SOURCES = $(SOURCES_float32tou8)
libfloat32tou8_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin float32tou8`
libfloat32tou8_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin float32tou8`
libfloat32tou8_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin float32tou8`

libvlc_LIBRARIES += $(Lfloat32tou8b) $(Lfloat32tou8pic)
libfloat32tou8_DATA = $(Dfloat32tou8p)

libfloat32tou8dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfloat32tou8p)
libfloat32tou8_plugin$(LIBEXT): $(libfloat32tou8_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage float32tou8` in \
	  c++) echo $(CXXLINK) $(libfloat32tou8_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tou8\` ; $(CXXLINK) $(libfloat32tou8_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tou8` ;; \
	  objc) echo $(OBJCLINK) $(libfloat32tou8_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tou8\` ; $(OBJCLINK) $(libfloat32tou8_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tou8` ;; \
	  c|*) echo $(LINK) $(libfloat32tou8_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32tou8\` ; $(LINK) $(libfloat32tou8_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32tou8` ;; \
	esac


# The a52tospdif plugin

if UNTRUE
La52tospdifp = liba52tospdif_plugin.a
Da52tospdifp = liba52tospdif_plugin$(LIBEXT)
La52tospdifb = liba52tospdif.a
La52tospdifpic = liba52tospdif_pic.a
endif

liba52tospdif_plugin_a_SOURCES = $(SOURCES_a52tospdif)
liba52tospdif_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin a52tospdif`
liba52tospdif_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin a52tospdif`
liba52tospdif_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin a52tospdif`

liba52tospdif_pic_a_SOURCES = $(SOURCES_a52tospdif)
liba52tospdif_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic a52tospdif`
liba52tospdif_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic a52tospdif`
liba52tospdif_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic a52tospdif`

liba52tospdif_a_SOURCES = $(SOURCES_a52tospdif)
liba52tospdif_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin a52tospdif`
liba52tospdif_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin a52tospdif`
liba52tospdif_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin a52tospdif`

libvlc_LIBRARIES += $(La52tospdifb) $(La52tospdifpic)
liba52tospdif_DATA = $(Da52tospdifp)

liba52tospdifdir = $(libdir)/vlc/
noinst_LIBRARIES += $(La52tospdifp)
liba52tospdif_plugin$(LIBEXT): $(liba52tospdif_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage a52tospdif` in \
	  c++) echo $(CXXLINK) $(liba52tospdif_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52tospdif\` ; $(CXXLINK) $(liba52tospdif_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52tospdif` ;; \
	  objc) echo $(OBJCLINK) $(liba52tospdif_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52tospdif\` ; $(OBJCLINK) $(liba52tospdif_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52tospdif` ;; \
	  c|*) echo $(LINK) $(liba52tospdif_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52tospdif\` ; $(LINK) $(liba52tospdif_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52tospdif` ;; \
	esac


# The a52tofloat32 plugin

if UNTRUE
La52tofloat32p = liba52tofloat32_plugin.a
Da52tofloat32p = liba52tofloat32_plugin$(LIBEXT)
La52tofloat32b = liba52tofloat32.a
La52tofloat32pic = liba52tofloat32_pic.a
endif

liba52tofloat32_plugin_a_SOURCES = $(SOURCES_a52tofloat32)
liba52tofloat32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin a52tofloat32`
liba52tofloat32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin a52tofloat32`
liba52tofloat32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin a52tofloat32`

liba52tofloat32_pic_a_SOURCES = $(SOURCES_a52tofloat32)
liba52tofloat32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic a52tofloat32`
liba52tofloat32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic a52tofloat32`
liba52tofloat32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic a52tofloat32`

liba52tofloat32_a_SOURCES = $(SOURCES_a52tofloat32)
liba52tofloat32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin a52tofloat32`
liba52tofloat32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin a52tofloat32`
liba52tofloat32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin a52tofloat32`

libvlc_LIBRARIES += $(La52tofloat32b) $(La52tofloat32pic)
liba52tofloat32_DATA = $(Da52tofloat32p)

liba52tofloat32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(La52tofloat32p)
liba52tofloat32_plugin$(LIBEXT): $(liba52tofloat32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage a52tofloat32` in \
	  c++) echo $(CXXLINK) $(liba52tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52tofloat32\` ; $(CXXLINK) $(liba52tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52tofloat32` ;; \
	  objc) echo $(OBJCLINK) $(liba52tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52tofloat32\` ; $(OBJCLINK) $(liba52tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52tofloat32` ;; \
	  c|*) echo $(LINK) $(liba52tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin a52tofloat32\` ; $(LINK) $(liba52tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin a52tofloat32` ;; \
	esac


# The dtstospdif plugin

if UNTRUE
Ldtstospdifp = libdtstospdif_plugin.a
Ddtstospdifp = libdtstospdif_plugin$(LIBEXT)
Ldtstospdifb = libdtstospdif.a
Ldtstospdifpic = libdtstospdif_pic.a
endif

libdtstospdif_plugin_a_SOURCES = $(SOURCES_dtstospdif)
libdtstospdif_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin dtstospdif`
libdtstospdif_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin dtstospdif`
libdtstospdif_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin dtstospdif`

libdtstospdif_pic_a_SOURCES = $(SOURCES_dtstospdif)
libdtstospdif_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic dtstospdif`
libdtstospdif_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic dtstospdif`
libdtstospdif_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic dtstospdif`

libdtstospdif_a_SOURCES = $(SOURCES_dtstospdif)
libdtstospdif_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin dtstospdif`
libdtstospdif_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin dtstospdif`
libdtstospdif_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin dtstospdif`

libvlc_LIBRARIES += $(Ldtstospdifb) $(Ldtstospdifpic)
libdtstospdif_DATA = $(Ddtstospdifp)

libdtstospdifdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ldtstospdifp)
libdtstospdif_plugin$(LIBEXT): $(libdtstospdif_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage dtstospdif` in \
	  c++) echo $(CXXLINK) $(libdtstospdif_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtstospdif\` ; $(CXXLINK) $(libdtstospdif_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtstospdif` ;; \
	  objc) echo $(OBJCLINK) $(libdtstospdif_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtstospdif\` ; $(OBJCLINK) $(libdtstospdif_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtstospdif` ;; \
	  c|*) echo $(LINK) $(libdtstospdif_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtstospdif\` ; $(LINK) $(libdtstospdif_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtstospdif` ;; \
	esac


# The dtstofloat32 plugin

if UNTRUE
Ldtstofloat32p = libdtstofloat32_plugin.a
Ddtstofloat32p = libdtstofloat32_plugin$(LIBEXT)
Ldtstofloat32b = libdtstofloat32.a
Ldtstofloat32pic = libdtstofloat32_pic.a
endif

libdtstofloat32_plugin_a_SOURCES = $(SOURCES_dtstofloat32)
libdtstofloat32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin dtstofloat32`
libdtstofloat32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin dtstofloat32`
libdtstofloat32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin dtstofloat32`

libdtstofloat32_pic_a_SOURCES = $(SOURCES_dtstofloat32)
libdtstofloat32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic dtstofloat32`
libdtstofloat32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic dtstofloat32`
libdtstofloat32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic dtstofloat32`

libdtstofloat32_a_SOURCES = $(SOURCES_dtstofloat32)
libdtstofloat32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin dtstofloat32`
libdtstofloat32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin dtstofloat32`
libdtstofloat32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin dtstofloat32`

libvlc_LIBRARIES += $(Ldtstofloat32b) $(Ldtstofloat32pic)
libdtstofloat32_DATA = $(Ddtstofloat32p)

libdtstofloat32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ldtstofloat32p)
libdtstofloat32_plugin$(LIBEXT): $(libdtstofloat32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage dtstofloat32` in \
	  c++) echo $(CXXLINK) $(libdtstofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtstofloat32\` ; $(CXXLINK) $(libdtstofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtstofloat32` ;; \
	  objc) echo $(OBJCLINK) $(libdtstofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtstofloat32\` ; $(OBJCLINK) $(libdtstofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtstofloat32` ;; \
	  c|*) echo $(LINK) $(libdtstofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin dtstofloat32\` ; $(LINK) $(libdtstofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin dtstofloat32` ;; \
	esac


# The fixed32tos16 plugin

if UNTRUE
Lfixed32tos16p = libfixed32tos16_plugin.a
Dfixed32tos16p = libfixed32tos16_plugin$(LIBEXT)
Lfixed32tos16b = libfixed32tos16.a
Lfixed32tos16pic = libfixed32tos16_pic.a
endif

libfixed32tos16_plugin_a_SOURCES = $(SOURCES_fixed32tos16)
libfixed32tos16_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin fixed32tos16`
libfixed32tos16_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin fixed32tos16`
libfixed32tos16_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin fixed32tos16`

libfixed32tos16_pic_a_SOURCES = $(SOURCES_fixed32tos16)
libfixed32tos16_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic fixed32tos16`
libfixed32tos16_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic fixed32tos16`
libfixed32tos16_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic fixed32tos16`

libfixed32tos16_a_SOURCES = $(SOURCES_fixed32tos16)
libfixed32tos16_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin fixed32tos16`
libfixed32tos16_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin fixed32tos16`
libfixed32tos16_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin fixed32tos16`

libvlc_LIBRARIES += $(Lfixed32tos16b) $(Lfixed32tos16pic)
libfixed32tos16_DATA = $(Dfixed32tos16p)

libfixed32tos16dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfixed32tos16p)
libfixed32tos16_plugin$(LIBEXT): $(libfixed32tos16_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage fixed32tos16` in \
	  c++) echo $(CXXLINK) $(libfixed32tos16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fixed32tos16\` ; $(CXXLINK) $(libfixed32tos16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fixed32tos16` ;; \
	  objc) echo $(OBJCLINK) $(libfixed32tos16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fixed32tos16\` ; $(OBJCLINK) $(libfixed32tos16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fixed32tos16` ;; \
	  c|*) echo $(LINK) $(libfixed32tos16_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fixed32tos16\` ; $(LINK) $(libfixed32tos16_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fixed32tos16` ;; \
	esac


# The s16tofixed32 plugin

if UNTRUE
Ls16tofixed32p = libs16tofixed32_plugin.a
Ds16tofixed32p = libs16tofixed32_plugin$(LIBEXT)
Ls16tofixed32b = libs16tofixed32.a
Ls16tofixed32pic = libs16tofixed32_pic.a
endif

libs16tofixed32_plugin_a_SOURCES = $(SOURCES_s16tofixed32)
libs16tofixed32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin s16tofixed32`
libs16tofixed32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin s16tofixed32`
libs16tofixed32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin s16tofixed32`

libs16tofixed32_pic_a_SOURCES = $(SOURCES_s16tofixed32)
libs16tofixed32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic s16tofixed32`
libs16tofixed32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic s16tofixed32`
libs16tofixed32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic s16tofixed32`

libs16tofixed32_a_SOURCES = $(SOURCES_s16tofixed32)
libs16tofixed32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin s16tofixed32`
libs16tofixed32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin s16tofixed32`
libs16tofixed32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin s16tofixed32`

libvlc_LIBRARIES += $(Ls16tofixed32b) $(Ls16tofixed32pic)
libs16tofixed32_DATA = $(Ds16tofixed32p)

libs16tofixed32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ls16tofixed32p)
libs16tofixed32_plugin$(LIBEXT): $(libs16tofixed32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage s16tofixed32` in \
	  c++) echo $(CXXLINK) $(libs16tofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofixed32\` ; $(CXXLINK) $(libs16tofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofixed32` ;; \
	  objc) echo $(OBJCLINK) $(libs16tofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofixed32\` ; $(OBJCLINK) $(libs16tofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofixed32` ;; \
	  c|*) echo $(LINK) $(libs16tofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofixed32\` ; $(LINK) $(libs16tofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofixed32` ;; \
	esac


# The fixed32tofloat32 plugin

if UNTRUE
Lfixed32tofloat32p = libfixed32tofloat32_plugin.a
Dfixed32tofloat32p = libfixed32tofloat32_plugin$(LIBEXT)
Lfixed32tofloat32b = libfixed32tofloat32.a
Lfixed32tofloat32pic = libfixed32tofloat32_pic.a
endif

libfixed32tofloat32_plugin_a_SOURCES = $(SOURCES_fixed32tofloat32)
libfixed32tofloat32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin fixed32tofloat32`
libfixed32tofloat32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin fixed32tofloat32`
libfixed32tofloat32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin fixed32tofloat32`

libfixed32tofloat32_pic_a_SOURCES = $(SOURCES_fixed32tofloat32)
libfixed32tofloat32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic fixed32tofloat32`
libfixed32tofloat32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic fixed32tofloat32`
libfixed32tofloat32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic fixed32tofloat32`

libfixed32tofloat32_a_SOURCES = $(SOURCES_fixed32tofloat32)
libfixed32tofloat32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin fixed32tofloat32`
libfixed32tofloat32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin fixed32tofloat32`
libfixed32tofloat32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin fixed32tofloat32`

libvlc_LIBRARIES += $(Lfixed32tofloat32b) $(Lfixed32tofloat32pic)
libfixed32tofloat32_DATA = $(Dfixed32tofloat32p)

libfixed32tofloat32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfixed32tofloat32p)
libfixed32tofloat32_plugin$(LIBEXT): $(libfixed32tofloat32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage fixed32tofloat32` in \
	  c++) echo $(CXXLINK) $(libfixed32tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fixed32tofloat32\` ; $(CXXLINK) $(libfixed32tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fixed32tofloat32` ;; \
	  objc) echo $(OBJCLINK) $(libfixed32tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fixed32tofloat32\` ; $(OBJCLINK) $(libfixed32tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fixed32tofloat32` ;; \
	  c|*) echo $(LINK) $(libfixed32tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fixed32tofloat32\` ; $(LINK) $(libfixed32tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fixed32tofloat32` ;; \
	esac


# The s16tofloat32 plugin

if UNTRUE
Ls16tofloat32p = libs16tofloat32_plugin.a
Ds16tofloat32p = libs16tofloat32_plugin$(LIBEXT)
Ls16tofloat32b = libs16tofloat32.a
Ls16tofloat32pic = libs16tofloat32_pic.a
endif

libs16tofloat32_plugin_a_SOURCES = $(SOURCES_s16tofloat32)
libs16tofloat32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin s16tofloat32`
libs16tofloat32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin s16tofloat32`
libs16tofloat32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin s16tofloat32`

libs16tofloat32_pic_a_SOURCES = $(SOURCES_s16tofloat32)
libs16tofloat32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic s16tofloat32`
libs16tofloat32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic s16tofloat32`
libs16tofloat32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic s16tofloat32`

libs16tofloat32_a_SOURCES = $(SOURCES_s16tofloat32)
libs16tofloat32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin s16tofloat32`
libs16tofloat32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin s16tofloat32`
libs16tofloat32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin s16tofloat32`

libvlc_LIBRARIES += $(Ls16tofloat32b) $(Ls16tofloat32pic)
libs16tofloat32_DATA = $(Ds16tofloat32p)

libs16tofloat32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ls16tofloat32p)
libs16tofloat32_plugin$(LIBEXT): $(libs16tofloat32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage s16tofloat32` in \
	  c++) echo $(CXXLINK) $(libs16tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofloat32\` ; $(CXXLINK) $(libs16tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofloat32` ;; \
	  objc) echo $(OBJCLINK) $(libs16tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofloat32\` ; $(OBJCLINK) $(libs16tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofloat32` ;; \
	  c|*) echo $(LINK) $(libs16tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofloat32\` ; $(LINK) $(libs16tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofloat32` ;; \
	esac


# The s16tofloat32swab plugin

if UNTRUE
Ls16tofloat32swabp = libs16tofloat32swab_plugin.a
Ds16tofloat32swabp = libs16tofloat32swab_plugin$(LIBEXT)
Ls16tofloat32swabb = libs16tofloat32swab.a
Ls16tofloat32swabpic = libs16tofloat32swab_pic.a
endif

libs16tofloat32swab_plugin_a_SOURCES = $(SOURCES_s16tofloat32swab)
libs16tofloat32swab_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin s16tofloat32swab`
libs16tofloat32swab_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin s16tofloat32swab`
libs16tofloat32swab_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin s16tofloat32swab`

libs16tofloat32swab_pic_a_SOURCES = $(SOURCES_s16tofloat32swab)
libs16tofloat32swab_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic s16tofloat32swab`
libs16tofloat32swab_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic s16tofloat32swab`
libs16tofloat32swab_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic s16tofloat32swab`

libs16tofloat32swab_a_SOURCES = $(SOURCES_s16tofloat32swab)
libs16tofloat32swab_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin s16tofloat32swab`
libs16tofloat32swab_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin s16tofloat32swab`
libs16tofloat32swab_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin s16tofloat32swab`

libvlc_LIBRARIES += $(Ls16tofloat32swabb) $(Ls16tofloat32swabpic)
libs16tofloat32swab_DATA = $(Ds16tofloat32swabp)

libs16tofloat32swabdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ls16tofloat32swabp)
libs16tofloat32swab_plugin$(LIBEXT): $(libs16tofloat32swab_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage s16tofloat32swab` in \
	  c++) echo $(CXXLINK) $(libs16tofloat32swab_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofloat32swab\` ; $(CXXLINK) $(libs16tofloat32swab_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofloat32swab` ;; \
	  objc) echo $(OBJCLINK) $(libs16tofloat32swab_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofloat32swab\` ; $(OBJCLINK) $(libs16tofloat32swab_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofloat32swab` ;; \
	  c|*) echo $(LINK) $(libs16tofloat32swab_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s16tofloat32swab\` ; $(LINK) $(libs16tofloat32swab_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s16tofloat32swab` ;; \
	esac


# The s8tofloat32 plugin

if UNTRUE
Ls8tofloat32p = libs8tofloat32_plugin.a
Ds8tofloat32p = libs8tofloat32_plugin$(LIBEXT)
Ls8tofloat32b = libs8tofloat32.a
Ls8tofloat32pic = libs8tofloat32_pic.a
endif

libs8tofloat32_plugin_a_SOURCES = $(SOURCES_s8tofloat32)
libs8tofloat32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin s8tofloat32`
libs8tofloat32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin s8tofloat32`
libs8tofloat32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin s8tofloat32`

libs8tofloat32_pic_a_SOURCES = $(SOURCES_s8tofloat32)
libs8tofloat32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic s8tofloat32`
libs8tofloat32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic s8tofloat32`
libs8tofloat32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic s8tofloat32`

libs8tofloat32_a_SOURCES = $(SOURCES_s8tofloat32)
libs8tofloat32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin s8tofloat32`
libs8tofloat32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin s8tofloat32`
libs8tofloat32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin s8tofloat32`

libvlc_LIBRARIES += $(Ls8tofloat32b) $(Ls8tofloat32pic)
libs8tofloat32_DATA = $(Ds8tofloat32p)

libs8tofloat32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ls8tofloat32p)
libs8tofloat32_plugin$(LIBEXT): $(libs8tofloat32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage s8tofloat32` in \
	  c++) echo $(CXXLINK) $(libs8tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s8tofloat32\` ; $(CXXLINK) $(libs8tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s8tofloat32` ;; \
	  objc) echo $(OBJCLINK) $(libs8tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s8tofloat32\` ; $(OBJCLINK) $(libs8tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s8tofloat32` ;; \
	  c|*) echo $(LINK) $(libs8tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin s8tofloat32\` ; $(LINK) $(libs8tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin s8tofloat32` ;; \
	esac


# The u8tofixed32 plugin

if UNTRUE
Lu8tofixed32p = libu8tofixed32_plugin.a
Du8tofixed32p = libu8tofixed32_plugin$(LIBEXT)
Lu8tofixed32b = libu8tofixed32.a
Lu8tofixed32pic = libu8tofixed32_pic.a
endif

libu8tofixed32_plugin_a_SOURCES = $(SOURCES_u8tofixed32)
libu8tofixed32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin u8tofixed32`
libu8tofixed32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin u8tofixed32`
libu8tofixed32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin u8tofixed32`

libu8tofixed32_pic_a_SOURCES = $(SOURCES_u8tofixed32)
libu8tofixed32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic u8tofixed32`
libu8tofixed32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic u8tofixed32`
libu8tofixed32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic u8tofixed32`

libu8tofixed32_a_SOURCES = $(SOURCES_u8tofixed32)
libu8tofixed32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin u8tofixed32`
libu8tofixed32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin u8tofixed32`
libu8tofixed32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin u8tofixed32`

libvlc_LIBRARIES += $(Lu8tofixed32b) $(Lu8tofixed32pic)
libu8tofixed32_DATA = $(Du8tofixed32p)

libu8tofixed32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lu8tofixed32p)
libu8tofixed32_plugin$(LIBEXT): $(libu8tofixed32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage u8tofixed32` in \
	  c++) echo $(CXXLINK) $(libu8tofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin u8tofixed32\` ; $(CXXLINK) $(libu8tofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin u8tofixed32` ;; \
	  objc) echo $(OBJCLINK) $(libu8tofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin u8tofixed32\` ; $(OBJCLINK) $(libu8tofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin u8tofixed32` ;; \
	  c|*) echo $(LINK) $(libu8tofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin u8tofixed32\` ; $(LINK) $(libu8tofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin u8tofixed32` ;; \
	esac


# The u8tofloat32 plugin

if UNTRUE
Lu8tofloat32p = libu8tofloat32_plugin.a
Du8tofloat32p = libu8tofloat32_plugin$(LIBEXT)
Lu8tofloat32b = libu8tofloat32.a
Lu8tofloat32pic = libu8tofloat32_pic.a
endif

libu8tofloat32_plugin_a_SOURCES = $(SOURCES_u8tofloat32)
libu8tofloat32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin u8tofloat32`
libu8tofloat32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin u8tofloat32`
libu8tofloat32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin u8tofloat32`

libu8tofloat32_pic_a_SOURCES = $(SOURCES_u8tofloat32)
libu8tofloat32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic u8tofloat32`
libu8tofloat32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic u8tofloat32`
libu8tofloat32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic u8tofloat32`

libu8tofloat32_a_SOURCES = $(SOURCES_u8tofloat32)
libu8tofloat32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin u8tofloat32`
libu8tofloat32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin u8tofloat32`
libu8tofloat32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin u8tofloat32`

libvlc_LIBRARIES += $(Lu8tofloat32b) $(Lu8tofloat32pic)
libu8tofloat32_DATA = $(Du8tofloat32p)

libu8tofloat32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lu8tofloat32p)
libu8tofloat32_plugin$(LIBEXT): $(libu8tofloat32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage u8tofloat32` in \
	  c++) echo $(CXXLINK) $(libu8tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin u8tofloat32\` ; $(CXXLINK) $(libu8tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin u8tofloat32` ;; \
	  objc) echo $(OBJCLINK) $(libu8tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin u8tofloat32\` ; $(OBJCLINK) $(libu8tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin u8tofloat32` ;; \
	  c|*) echo $(LINK) $(libu8tofloat32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin u8tofloat32\` ; $(LINK) $(libu8tofloat32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin u8tofloat32` ;; \
	esac


# The mpgatofixed32 plugin

if UNTRUE
Lmpgatofixed32p = libmpgatofixed32_plugin.a
Dmpgatofixed32p = libmpgatofixed32_plugin$(LIBEXT)
Lmpgatofixed32b = libmpgatofixed32.a
Lmpgatofixed32pic = libmpgatofixed32_pic.a
endif

libmpgatofixed32_plugin_a_SOURCES = $(SOURCES_mpgatofixed32)
libmpgatofixed32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mpgatofixed32`
libmpgatofixed32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mpgatofixed32`
libmpgatofixed32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mpgatofixed32`

libmpgatofixed32_pic_a_SOURCES = $(SOURCES_mpgatofixed32)
libmpgatofixed32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mpgatofixed32`
libmpgatofixed32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mpgatofixed32`
libmpgatofixed32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mpgatofixed32`

libmpgatofixed32_a_SOURCES = $(SOURCES_mpgatofixed32)
libmpgatofixed32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mpgatofixed32`
libmpgatofixed32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mpgatofixed32`
libmpgatofixed32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mpgatofixed32`

libvlc_LIBRARIES += $(Lmpgatofixed32b) $(Lmpgatofixed32pic)
libmpgatofixed32_DATA = $(Dmpgatofixed32p)

libmpgatofixed32dir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmpgatofixed32p)
libmpgatofixed32_plugin$(LIBEXT): $(libmpgatofixed32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mpgatofixed32` in \
	  c++) echo $(CXXLINK) $(libmpgatofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpgatofixed32\` ; $(CXXLINK) $(libmpgatofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpgatofixed32` ;; \
	  objc) echo $(OBJCLINK) $(libmpgatofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpgatofixed32\` ; $(OBJCLINK) $(libmpgatofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpgatofixed32` ;; \
	  c|*) echo $(LINK) $(libmpgatofixed32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mpgatofixed32\` ; $(LINK) $(libmpgatofixed32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mpgatofixed32` ;; \
	esac


