
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = channel_mixer converter resampler
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/audio_filter
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in equalizer normvol audio_format; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in equalizer normvol audio_format; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in equalizer normvol audio_format; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The equalizer plugin

if UNTRUE
Lequalizerp = libequalizer_plugin.a
Dequalizerp = libequalizer_plugin$(LIBEXT)
Lequalizerb = libequalizer.a
Lequalizerpic = libequalizer_pic.a
endif

libequalizer_plugin_a_SOURCES = $(SOURCES_equalizer)
libequalizer_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin equalizer`
libequalizer_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin equalizer`
libequalizer_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin equalizer`

libequalizer_pic_a_SOURCES = $(SOURCES_equalizer)
libequalizer_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic equalizer`
libequalizer_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic equalizer`
libequalizer_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic equalizer`

libequalizer_a_SOURCES = $(SOURCES_equalizer)
libequalizer_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin equalizer`
libequalizer_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin equalizer`
libequalizer_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin equalizer`

libvlc_LIBRARIES += $(Lequalizerb) $(Lequalizerpic)
libequalizer_DATA = $(Dequalizerp)

libequalizerdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lequalizerp)
libequalizer_plugin$(LIBEXT): $(libequalizer_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage equalizer` in \
	  c++) echo $(CXXLINK) $(libequalizer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin equalizer\` ; $(CXXLINK) $(libequalizer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin equalizer` ;; \
	  objc) echo $(OBJCLINK) $(libequalizer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin equalizer\` ; $(OBJCLINK) $(libequalizer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin equalizer` ;; \
	  c|*) echo $(LINK) $(libequalizer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin equalizer\` ; $(LINK) $(libequalizer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin equalizer` ;; \
	esac


# The normvol plugin

if UNTRUE
Lnormvolp = libnormvol_plugin.a
Dnormvolp = libnormvol_plugin$(LIBEXT)
Lnormvolb = libnormvol.a
Lnormvolpic = libnormvol_pic.a
endif

libnormvol_plugin_a_SOURCES = $(SOURCES_normvol)
libnormvol_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin normvol`
libnormvol_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin normvol`
libnormvol_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin normvol`

libnormvol_pic_a_SOURCES = $(SOURCES_normvol)
libnormvol_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic normvol`
libnormvol_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic normvol`
libnormvol_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic normvol`

libnormvol_a_SOURCES = $(SOURCES_normvol)
libnormvol_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin normvol`
libnormvol_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin normvol`
libnormvol_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin normvol`

libvlc_LIBRARIES += $(Lnormvolb) $(Lnormvolpic)
libnormvol_DATA = $(Dnormvolp)

libnormvoldir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lnormvolp)
libnormvol_plugin$(LIBEXT): $(libnormvol_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage normvol` in \
	  c++) echo $(CXXLINK) $(libnormvol_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin normvol\` ; $(CXXLINK) $(libnormvol_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin normvol` ;; \
	  objc) echo $(OBJCLINK) $(libnormvol_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin normvol\` ; $(OBJCLINK) $(libnormvol_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin normvol` ;; \
	  c|*) echo $(LINK) $(libnormvol_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin normvol\` ; $(LINK) $(libnormvol_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin normvol` ;; \
	esac


# The audio_format plugin

if UNTRUE
Laudio_formatp = libaudio_format_plugin.a
Daudio_formatp = libaudio_format_plugin$(LIBEXT)
Laudio_formatb = libaudio_format.a
Laudio_formatpic = libaudio_format_pic.a
endif

libaudio_format_plugin_a_SOURCES = $(SOURCES_audio_format)
libaudio_format_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin audio_format`
libaudio_format_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin audio_format`
libaudio_format_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin audio_format`

libaudio_format_pic_a_SOURCES = $(SOURCES_audio_format)
libaudio_format_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic audio_format`
libaudio_format_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic audio_format`
libaudio_format_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic audio_format`

libaudio_format_a_SOURCES = $(SOURCES_audio_format)
libaudio_format_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin audio_format`
libaudio_format_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin audio_format`
libaudio_format_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin audio_format`

libvlc_LIBRARIES += $(Laudio_formatb) $(Laudio_formatpic)
libaudio_format_DATA = $(Daudio_formatp)

libaudio_formatdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Laudio_formatp)
libaudio_format_plugin$(LIBEXT): $(libaudio_format_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage audio_format` in \
	  c++) echo $(CXXLINK) $(libaudio_format_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin audio_format\` ; $(CXXLINK) $(libaudio_format_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin audio_format` ;; \
	  objc) echo $(OBJCLINK) $(libaudio_format_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin audio_format\` ; $(OBJCLINK) $(libaudio_format_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin audio_format` ;; \
	  c|*) echo $(LINK) $(libaudio_format_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin audio_format\` ; $(LINK) $(libaudio_format_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin audio_format` ;; \
	esac


