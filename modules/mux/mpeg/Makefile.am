
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/mux
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in mux_ps mux_ts; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in mux_ps mux_ts; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in mux_ps mux_ts; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The mux_ps plugin

if UNTRUE
Lmux_psp = libmux_ps_plugin.a
Dmux_psp = libmux_ps_plugin$(LIBEXT)
Lmux_psb = libmux_ps.a
Lmux_pspic = libmux_ps_pic.a
endif

libmux_ps_plugin_a_SOURCES = $(SOURCES_mux_ps)
libmux_ps_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mux_ps`
libmux_ps_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mux_ps`
libmux_ps_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mux_ps`

libmux_ps_pic_a_SOURCES = $(SOURCES_mux_ps)
libmux_ps_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mux_ps`
libmux_ps_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mux_ps`
libmux_ps_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mux_ps`

libmux_ps_a_SOURCES = $(SOURCES_mux_ps)
libmux_ps_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mux_ps`
libmux_ps_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mux_ps`
libmux_ps_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mux_ps`

libvlc_LIBRARIES += $(Lmux_psb) $(Lmux_pspic)
libmux_ps_DATA = $(Dmux_psp)

libmux_psdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmux_psp)
libmux_ps_plugin$(LIBEXT): $(libmux_ps_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mux_ps` in \
	  c++) echo $(CXXLINK) $(libmux_ps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mux_ps\` ; $(CXXLINK) $(libmux_ps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mux_ps` ;; \
	  objc) echo $(OBJCLINK) $(libmux_ps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mux_ps\` ; $(OBJCLINK) $(libmux_ps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mux_ps` ;; \
	  c|*) echo $(LINK) $(libmux_ps_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mux_ps\` ; $(LINK) $(libmux_ps_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mux_ps` ;; \
	esac


# The mux_ts plugin

if UNTRUE
Lmux_tsp = libmux_ts_plugin.a
Dmux_tsp = libmux_ts_plugin$(LIBEXT)
Lmux_tsb = libmux_ts.a
Lmux_tspic = libmux_ts_pic.a
endif

libmux_ts_plugin_a_SOURCES = $(SOURCES_mux_ts)
libmux_ts_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mux_ts`
libmux_ts_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mux_ts`
libmux_ts_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mux_ts`

libmux_ts_pic_a_SOURCES = $(SOURCES_mux_ts)
libmux_ts_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mux_ts`
libmux_ts_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mux_ts`
libmux_ts_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mux_ts`

libmux_ts_a_SOURCES = $(SOURCES_mux_ts)
libmux_ts_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mux_ts`
libmux_ts_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mux_ts`
libmux_ts_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mux_ts`

libvlc_LIBRARIES += $(Lmux_tsb) $(Lmux_tspic)
libmux_ts_DATA = $(Dmux_tsp)

libmux_tsdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmux_tsp)
libmux_ts_plugin$(LIBEXT): $(libmux_ts_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mux_ts` in \
	  c++) echo $(CXXLINK) $(libmux_ts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mux_ts\` ; $(CXXLINK) $(libmux_ts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mux_ts` ;; \
	  objc) echo $(OBJCLINK) $(libmux_ts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mux_ts\` ; $(OBJCLINK) $(libmux_ts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mux_ts` ;; \
	  c|*) echo $(LINK) $(libmux_ts_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mux_ts\` ; $(LINK) $(libmux_ts_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mux_ts` ;; \
	esac


