
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = transrate
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/stream_out
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in stream_out_dummy stream_out_description stream_out_standard stream_out_transcode stream_out_duplicate stream_out_es stream_out_display stream_out_gather stream_out_rtp; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in stream_out_dummy stream_out_description stream_out_standard stream_out_transcode stream_out_duplicate stream_out_es stream_out_display stream_out_gather stream_out_rtp; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in stream_out_dummy stream_out_description stream_out_standard stream_out_transcode stream_out_duplicate stream_out_es stream_out_display stream_out_gather stream_out_rtp; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The stream_out_dummy plugin

if UNTRUE
Lstream_out_dummyp = libstream_out_dummy_plugin.a
Dstream_out_dummyp = libstream_out_dummy_plugin$(LIBEXT)
Lstream_out_dummyb = libstream_out_dummy.a
Lstream_out_dummypic = libstream_out_dummy_pic.a
endif

libstream_out_dummy_plugin_a_SOURCES = $(SOURCES_stream_out_dummy)
libstream_out_dummy_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_dummy`
libstream_out_dummy_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_dummy`
libstream_out_dummy_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_dummy`

libstream_out_dummy_pic_a_SOURCES = $(SOURCES_stream_out_dummy)
libstream_out_dummy_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_dummy`
libstream_out_dummy_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_dummy`
libstream_out_dummy_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_dummy`

libstream_out_dummy_a_SOURCES = $(SOURCES_stream_out_dummy)
libstream_out_dummy_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_dummy`
libstream_out_dummy_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_dummy`
libstream_out_dummy_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_dummy`

libvlc_LIBRARIES += $(Lstream_out_dummyb) $(Lstream_out_dummypic)
libstream_out_dummy_DATA = $(Dstream_out_dummyp)

libstream_out_dummydir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_dummyp)
libstream_out_dummy_plugin$(LIBEXT): $(libstream_out_dummy_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_dummy` in \
	  c++) echo $(CXXLINK) $(libstream_out_dummy_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_dummy\` ; $(CXXLINK) $(libstream_out_dummy_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_dummy` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_dummy_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_dummy\` ; $(OBJCLINK) $(libstream_out_dummy_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_dummy` ;; \
	  c|*) echo $(LINK) $(libstream_out_dummy_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_dummy\` ; $(LINK) $(libstream_out_dummy_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_dummy` ;; \
	esac


# The stream_out_description plugin

if UNTRUE
Lstream_out_descriptionp = libstream_out_description_plugin.a
Dstream_out_descriptionp = libstream_out_description_plugin$(LIBEXT)
Lstream_out_descriptionb = libstream_out_description.a
Lstream_out_descriptionpic = libstream_out_description_pic.a
endif

libstream_out_description_plugin_a_SOURCES = $(SOURCES_stream_out_description)
libstream_out_description_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_description`
libstream_out_description_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_description`
libstream_out_description_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_description`

libstream_out_description_pic_a_SOURCES = $(SOURCES_stream_out_description)
libstream_out_description_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_description`
libstream_out_description_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_description`
libstream_out_description_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_description`

libstream_out_description_a_SOURCES = $(SOURCES_stream_out_description)
libstream_out_description_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_description`
libstream_out_description_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_description`
libstream_out_description_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_description`

libvlc_LIBRARIES += $(Lstream_out_descriptionb) $(Lstream_out_descriptionpic)
libstream_out_description_DATA = $(Dstream_out_descriptionp)

libstream_out_descriptiondir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_descriptionp)
libstream_out_description_plugin$(LIBEXT): $(libstream_out_description_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_description` in \
	  c++) echo $(CXXLINK) $(libstream_out_description_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_description\` ; $(CXXLINK) $(libstream_out_description_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_description` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_description_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_description\` ; $(OBJCLINK) $(libstream_out_description_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_description` ;; \
	  c|*) echo $(LINK) $(libstream_out_description_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_description\` ; $(LINK) $(libstream_out_description_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_description` ;; \
	esac


# The stream_out_standard plugin

if UNTRUE
Lstream_out_standardp = libstream_out_standard_plugin.a
Dstream_out_standardp = libstream_out_standard_plugin$(LIBEXT)
Lstream_out_standardb = libstream_out_standard.a
Lstream_out_standardpic = libstream_out_standard_pic.a
endif

libstream_out_standard_plugin_a_SOURCES = $(SOURCES_stream_out_standard)
libstream_out_standard_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_standard`
libstream_out_standard_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_standard`
libstream_out_standard_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_standard`

libstream_out_standard_pic_a_SOURCES = $(SOURCES_stream_out_standard)
libstream_out_standard_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_standard`
libstream_out_standard_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_standard`
libstream_out_standard_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_standard`

libstream_out_standard_a_SOURCES = $(SOURCES_stream_out_standard)
libstream_out_standard_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_standard`
libstream_out_standard_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_standard`
libstream_out_standard_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_standard`

libvlc_LIBRARIES += $(Lstream_out_standardb) $(Lstream_out_standardpic)
libstream_out_standard_DATA = $(Dstream_out_standardp)

libstream_out_standarddir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_standardp)
libstream_out_standard_plugin$(LIBEXT): $(libstream_out_standard_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_standard` in \
	  c++) echo $(CXXLINK) $(libstream_out_standard_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_standard\` ; $(CXXLINK) $(libstream_out_standard_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_standard` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_standard_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_standard\` ; $(OBJCLINK) $(libstream_out_standard_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_standard` ;; \
	  c|*) echo $(LINK) $(libstream_out_standard_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_standard\` ; $(LINK) $(libstream_out_standard_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_standard` ;; \
	esac


# The stream_out_transcode plugin

if UNTRUE
Lstream_out_transcodep = libstream_out_transcode_plugin.a
Dstream_out_transcodep = libstream_out_transcode_plugin$(LIBEXT)
Lstream_out_transcodeb = libstream_out_transcode.a
Lstream_out_transcodepic = libstream_out_transcode_pic.a
endif

libstream_out_transcode_plugin_a_SOURCES = $(SOURCES_stream_out_transcode)
libstream_out_transcode_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_transcode`
libstream_out_transcode_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_transcode`
libstream_out_transcode_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_transcode`

libstream_out_transcode_pic_a_SOURCES = $(SOURCES_stream_out_transcode)
libstream_out_transcode_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_transcode`
libstream_out_transcode_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_transcode`
libstream_out_transcode_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_transcode`

libstream_out_transcode_a_SOURCES = $(SOURCES_stream_out_transcode)
libstream_out_transcode_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_transcode`
libstream_out_transcode_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_transcode`
libstream_out_transcode_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_transcode`

libvlc_LIBRARIES += $(Lstream_out_transcodeb) $(Lstream_out_transcodepic)
libstream_out_transcode_DATA = $(Dstream_out_transcodep)

libstream_out_transcodedir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_transcodep)
libstream_out_transcode_plugin$(LIBEXT): $(libstream_out_transcode_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_transcode` in \
	  c++) echo $(CXXLINK) $(libstream_out_transcode_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_transcode\` ; $(CXXLINK) $(libstream_out_transcode_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_transcode` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_transcode_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_transcode\` ; $(OBJCLINK) $(libstream_out_transcode_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_transcode` ;; \
	  c|*) echo $(LINK) $(libstream_out_transcode_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_transcode\` ; $(LINK) $(libstream_out_transcode_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_transcode` ;; \
	esac


# The stream_out_duplicate plugin

if UNTRUE
Lstream_out_duplicatep = libstream_out_duplicate_plugin.a
Dstream_out_duplicatep = libstream_out_duplicate_plugin$(LIBEXT)
Lstream_out_duplicateb = libstream_out_duplicate.a
Lstream_out_duplicatepic = libstream_out_duplicate_pic.a
endif

libstream_out_duplicate_plugin_a_SOURCES = $(SOURCES_stream_out_duplicate)
libstream_out_duplicate_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_duplicate`
libstream_out_duplicate_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_duplicate`
libstream_out_duplicate_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_duplicate`

libstream_out_duplicate_pic_a_SOURCES = $(SOURCES_stream_out_duplicate)
libstream_out_duplicate_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_duplicate`
libstream_out_duplicate_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_duplicate`
libstream_out_duplicate_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_duplicate`

libstream_out_duplicate_a_SOURCES = $(SOURCES_stream_out_duplicate)
libstream_out_duplicate_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_duplicate`
libstream_out_duplicate_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_duplicate`
libstream_out_duplicate_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_duplicate`

libvlc_LIBRARIES += $(Lstream_out_duplicateb) $(Lstream_out_duplicatepic)
libstream_out_duplicate_DATA = $(Dstream_out_duplicatep)

libstream_out_duplicatedir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_duplicatep)
libstream_out_duplicate_plugin$(LIBEXT): $(libstream_out_duplicate_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_duplicate` in \
	  c++) echo $(CXXLINK) $(libstream_out_duplicate_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_duplicate\` ; $(CXXLINK) $(libstream_out_duplicate_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_duplicate` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_duplicate_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_duplicate\` ; $(OBJCLINK) $(libstream_out_duplicate_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_duplicate` ;; \
	  c|*) echo $(LINK) $(libstream_out_duplicate_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_duplicate\` ; $(LINK) $(libstream_out_duplicate_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_duplicate` ;; \
	esac


# The stream_out_es plugin

if UNTRUE
Lstream_out_esp = libstream_out_es_plugin.a
Dstream_out_esp = libstream_out_es_plugin$(LIBEXT)
Lstream_out_esb = libstream_out_es.a
Lstream_out_espic = libstream_out_es_pic.a
endif

libstream_out_es_plugin_a_SOURCES = $(SOURCES_stream_out_es)
libstream_out_es_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_es`
libstream_out_es_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_es`
libstream_out_es_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_es`

libstream_out_es_pic_a_SOURCES = $(SOURCES_stream_out_es)
libstream_out_es_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_es`
libstream_out_es_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_es`
libstream_out_es_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_es`

libstream_out_es_a_SOURCES = $(SOURCES_stream_out_es)
libstream_out_es_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_es`
libstream_out_es_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_es`
libstream_out_es_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_es`

libvlc_LIBRARIES += $(Lstream_out_esb) $(Lstream_out_espic)
libstream_out_es_DATA = $(Dstream_out_esp)

libstream_out_esdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_esp)
libstream_out_es_plugin$(LIBEXT): $(libstream_out_es_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_es` in \
	  c++) echo $(CXXLINK) $(libstream_out_es_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_es\` ; $(CXXLINK) $(libstream_out_es_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_es` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_es_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_es\` ; $(OBJCLINK) $(libstream_out_es_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_es` ;; \
	  c|*) echo $(LINK) $(libstream_out_es_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_es\` ; $(LINK) $(libstream_out_es_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_es` ;; \
	esac


# The stream_out_display plugin

if UNTRUE
Lstream_out_displayp = libstream_out_display_plugin.a
Dstream_out_displayp = libstream_out_display_plugin$(LIBEXT)
Lstream_out_displayb = libstream_out_display.a
Lstream_out_displaypic = libstream_out_display_pic.a
endif

libstream_out_display_plugin_a_SOURCES = $(SOURCES_stream_out_display)
libstream_out_display_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_display`
libstream_out_display_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_display`
libstream_out_display_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_display`

libstream_out_display_pic_a_SOURCES = $(SOURCES_stream_out_display)
libstream_out_display_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_display`
libstream_out_display_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_display`
libstream_out_display_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_display`

libstream_out_display_a_SOURCES = $(SOURCES_stream_out_display)
libstream_out_display_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_display`
libstream_out_display_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_display`
libstream_out_display_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_display`

libvlc_LIBRARIES += $(Lstream_out_displayb) $(Lstream_out_displaypic)
libstream_out_display_DATA = $(Dstream_out_displayp)

libstream_out_displaydir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_displayp)
libstream_out_display_plugin$(LIBEXT): $(libstream_out_display_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_display` in \
	  c++) echo $(CXXLINK) $(libstream_out_display_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_display\` ; $(CXXLINK) $(libstream_out_display_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_display` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_display_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_display\` ; $(OBJCLINK) $(libstream_out_display_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_display` ;; \
	  c|*) echo $(LINK) $(libstream_out_display_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_display\` ; $(LINK) $(libstream_out_display_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_display` ;; \
	esac


# The stream_out_gather plugin

if UNTRUE
Lstream_out_gatherp = libstream_out_gather_plugin.a
Dstream_out_gatherp = libstream_out_gather_plugin$(LIBEXT)
Lstream_out_gatherb = libstream_out_gather.a
Lstream_out_gatherpic = libstream_out_gather_pic.a
endif

libstream_out_gather_plugin_a_SOURCES = $(SOURCES_stream_out_gather)
libstream_out_gather_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_gather`
libstream_out_gather_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_gather`
libstream_out_gather_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_gather`

libstream_out_gather_pic_a_SOURCES = $(SOURCES_stream_out_gather)
libstream_out_gather_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_gather`
libstream_out_gather_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_gather`
libstream_out_gather_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_gather`

libstream_out_gather_a_SOURCES = $(SOURCES_stream_out_gather)
libstream_out_gather_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_gather`
libstream_out_gather_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_gather`
libstream_out_gather_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_gather`

libvlc_LIBRARIES += $(Lstream_out_gatherb) $(Lstream_out_gatherpic)
libstream_out_gather_DATA = $(Dstream_out_gatherp)

libstream_out_gatherdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_gatherp)
libstream_out_gather_plugin$(LIBEXT): $(libstream_out_gather_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_gather` in \
	  c++) echo $(CXXLINK) $(libstream_out_gather_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_gather\` ; $(CXXLINK) $(libstream_out_gather_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_gather` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_gather_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_gather\` ; $(OBJCLINK) $(libstream_out_gather_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_gather` ;; \
	  c|*) echo $(LINK) $(libstream_out_gather_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_gather\` ; $(LINK) $(libstream_out_gather_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_gather` ;; \
	esac


# The stream_out_rtp plugin

if UNTRUE
Lstream_out_rtpp = libstream_out_rtp_plugin.a
Dstream_out_rtpp = libstream_out_rtp_plugin$(LIBEXT)
Lstream_out_rtpb = libstream_out_rtp.a
Lstream_out_rtppic = libstream_out_rtp_pic.a
endif

libstream_out_rtp_plugin_a_SOURCES = $(SOURCES_stream_out_rtp)
libstream_out_rtp_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin stream_out_rtp`
libstream_out_rtp_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin stream_out_rtp`
libstream_out_rtp_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin stream_out_rtp`

libstream_out_rtp_pic_a_SOURCES = $(SOURCES_stream_out_rtp)
libstream_out_rtp_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic stream_out_rtp`
libstream_out_rtp_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic stream_out_rtp`
libstream_out_rtp_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic stream_out_rtp`

libstream_out_rtp_a_SOURCES = $(SOURCES_stream_out_rtp)
libstream_out_rtp_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin stream_out_rtp`
libstream_out_rtp_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin stream_out_rtp`
libstream_out_rtp_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin stream_out_rtp`

libvlc_LIBRARIES += $(Lstream_out_rtpb) $(Lstream_out_rtppic)
libstream_out_rtp_DATA = $(Dstream_out_rtpp)

libstream_out_rtpdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lstream_out_rtpp)
libstream_out_rtp_plugin$(LIBEXT): $(libstream_out_rtp_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage stream_out_rtp` in \
	  c++) echo $(CXXLINK) $(libstream_out_rtp_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_rtp\` ; $(CXXLINK) $(libstream_out_rtp_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_rtp` ;; \
	  objc) echo $(OBJCLINK) $(libstream_out_rtp_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_rtp\` ; $(OBJCLINK) $(libstream_out_rtp_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_rtp` ;; \
	  c|*) echo $(LINK) $(libstream_out_rtp_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin stream_out_rtp\` ; $(LINK) $(libstream_out_rtp_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin stream_out_rtp` ;; \
	esac


