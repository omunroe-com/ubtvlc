
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/codec
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in postprocessing_c postprocessing_mmx postprocessing_mmxext; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in postprocessing_c postprocessing_mmx postprocessing_mmxext; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in postprocessing_c postprocessing_mmx postprocessing_mmxext; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The postprocessing_c plugin

if UNTRUE
Lpostprocessing_cp = libpostprocessing_c_plugin.a
Dpostprocessing_cp = libpostprocessing_c_plugin$(LIBEXT)
Lpostprocessing_cb = libpostprocessing_c.a
Lpostprocessing_cpic = libpostprocessing_c_pic.a
endif

libpostprocessing_c_plugin_a_SOURCES = $(SOURCES_postprocessing_c)
libpostprocessing_c_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin postprocessing_c`
libpostprocessing_c_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin postprocessing_c`
libpostprocessing_c_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin postprocessing_c`

libpostprocessing_c_pic_a_SOURCES = $(SOURCES_postprocessing_c)
libpostprocessing_c_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic postprocessing_c`
libpostprocessing_c_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic postprocessing_c`
libpostprocessing_c_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic postprocessing_c`

libpostprocessing_c_a_SOURCES = $(SOURCES_postprocessing_c)
libpostprocessing_c_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin postprocessing_c`
libpostprocessing_c_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin postprocessing_c`
libpostprocessing_c_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin postprocessing_c`

libvlc_LIBRARIES += $(Lpostprocessing_cb) $(Lpostprocessing_cpic)
libpostprocessing_c_DATA = $(Dpostprocessing_cp)

libpostprocessing_cdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lpostprocessing_cp)
libpostprocessing_c_plugin$(LIBEXT): $(libpostprocessing_c_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage postprocessing_c` in \
	  c++) echo $(CXXLINK) $(libpostprocessing_c_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_c\` ; $(CXXLINK) $(libpostprocessing_c_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_c` ;; \
	  objc) echo $(OBJCLINK) $(libpostprocessing_c_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_c\` ; $(OBJCLINK) $(libpostprocessing_c_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_c` ;; \
	  c|*) echo $(LINK) $(libpostprocessing_c_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_c\` ; $(LINK) $(libpostprocessing_c_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_c` ;; \
	esac


# The postprocessing_mmx plugin

if UNTRUE
Lpostprocessing_mmxp = libpostprocessing_mmx_plugin.a
Dpostprocessing_mmxp = libpostprocessing_mmx_plugin$(LIBEXT)
Lpostprocessing_mmxb = libpostprocessing_mmx.a
Lpostprocessing_mmxpic = libpostprocessing_mmx_pic.a
endif

libpostprocessing_mmx_plugin_a_SOURCES = $(SOURCES_postprocessing_mmx)
libpostprocessing_mmx_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin postprocessing_mmx`
libpostprocessing_mmx_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin postprocessing_mmx`
libpostprocessing_mmx_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin postprocessing_mmx`

libpostprocessing_mmx_pic_a_SOURCES = $(SOURCES_postprocessing_mmx)
libpostprocessing_mmx_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic postprocessing_mmx`
libpostprocessing_mmx_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic postprocessing_mmx`
libpostprocessing_mmx_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic postprocessing_mmx`

libpostprocessing_mmx_a_SOURCES = $(SOURCES_postprocessing_mmx)
libpostprocessing_mmx_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin postprocessing_mmx`
libpostprocessing_mmx_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin postprocessing_mmx`
libpostprocessing_mmx_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin postprocessing_mmx`

libvlc_LIBRARIES += $(Lpostprocessing_mmxb) $(Lpostprocessing_mmxpic)
libpostprocessing_mmx_DATA = $(Dpostprocessing_mmxp)

libpostprocessing_mmxdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lpostprocessing_mmxp)
libpostprocessing_mmx_plugin$(LIBEXT): $(libpostprocessing_mmx_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage postprocessing_mmx` in \
	  c++) echo $(CXXLINK) $(libpostprocessing_mmx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_mmx\` ; $(CXXLINK) $(libpostprocessing_mmx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_mmx` ;; \
	  objc) echo $(OBJCLINK) $(libpostprocessing_mmx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_mmx\` ; $(OBJCLINK) $(libpostprocessing_mmx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_mmx` ;; \
	  c|*) echo $(LINK) $(libpostprocessing_mmx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_mmx\` ; $(LINK) $(libpostprocessing_mmx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_mmx` ;; \
	esac


# The postprocessing_mmxext plugin

if UNTRUE
Lpostprocessing_mmxextp = libpostprocessing_mmxext_plugin.a
Dpostprocessing_mmxextp = libpostprocessing_mmxext_plugin$(LIBEXT)
Lpostprocessing_mmxextb = libpostprocessing_mmxext.a
Lpostprocessing_mmxextpic = libpostprocessing_mmxext_pic.a
endif

libpostprocessing_mmxext_plugin_a_SOURCES = $(SOURCES_postprocessing_mmxext)
libpostprocessing_mmxext_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin postprocessing_mmxext`
libpostprocessing_mmxext_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin postprocessing_mmxext`
libpostprocessing_mmxext_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin postprocessing_mmxext`

libpostprocessing_mmxext_pic_a_SOURCES = $(SOURCES_postprocessing_mmxext)
libpostprocessing_mmxext_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic postprocessing_mmxext`
libpostprocessing_mmxext_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic postprocessing_mmxext`
libpostprocessing_mmxext_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic postprocessing_mmxext`

libpostprocessing_mmxext_a_SOURCES = $(SOURCES_postprocessing_mmxext)
libpostprocessing_mmxext_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin postprocessing_mmxext`
libpostprocessing_mmxext_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin postprocessing_mmxext`
libpostprocessing_mmxext_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin postprocessing_mmxext`

libvlc_LIBRARIES += $(Lpostprocessing_mmxextb) $(Lpostprocessing_mmxextpic)
libpostprocessing_mmxext_DATA = $(Dpostprocessing_mmxextp)

libpostprocessing_mmxextdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lpostprocessing_mmxextp)
libpostprocessing_mmxext_plugin$(LIBEXT): $(libpostprocessing_mmxext_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage postprocessing_mmxext` in \
	  c++) echo $(CXXLINK) $(libpostprocessing_mmxext_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_mmxext\` ; $(CXXLINK) $(libpostprocessing_mmxext_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_mmxext` ;; \
	  objc) echo $(OBJCLINK) $(libpostprocessing_mmxext_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_mmxext\` ; $(OBJCLINK) $(libpostprocessing_mmxext_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_mmxext` ;; \
	  c|*) echo $(LINK) $(libpostprocessing_mmxext_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin postprocessing_mmxext\` ; $(LINK) $(libpostprocessing_mmxext_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin postprocessing_mmxext` ;; \
	esac


