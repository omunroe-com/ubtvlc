
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = directx qte x11
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/video_output
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in aa caca fb ggi glide vout_sdl svgalib wingdi mga hd1000v snapshot opengl; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in aa caca fb ggi glide vout_sdl svgalib wingdi mga hd1000v snapshot opengl; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in aa caca fb ggi glide vout_sdl svgalib wingdi mga hd1000v snapshot opengl; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The aa plugin

if UNTRUE
Laap = libaa_plugin.a
Daap = libaa_plugin$(LIBEXT)
Laab = libaa.a
Laapic = libaa_pic.a
endif

libaa_plugin_a_SOURCES = $(SOURCES_aa)
libaa_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin aa`
libaa_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin aa`
libaa_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin aa`

libaa_pic_a_SOURCES = $(SOURCES_aa)
libaa_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic aa`
libaa_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic aa`
libaa_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic aa`

libaa_a_SOURCES = $(SOURCES_aa)
libaa_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin aa`
libaa_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin aa`
libaa_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin aa`

libvlc_LIBRARIES += $(Laab) $(Laapic)
libaa_DATA = $(Daap)

libaadir = $(libdir)/vlc/
noinst_LIBRARIES += $(Laap)
libaa_plugin$(LIBEXT): $(libaa_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage aa` in \
	  c++) echo $(CXXLINK) $(libaa_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aa\` ; $(CXXLINK) $(libaa_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aa` ;; \
	  objc) echo $(OBJCLINK) $(libaa_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aa\` ; $(OBJCLINK) $(libaa_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aa` ;; \
	  c|*) echo $(LINK) $(libaa_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aa\` ; $(LINK) $(libaa_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aa` ;; \
	esac


# The caca plugin

if UNTRUE
Lcacap = libcaca_plugin.a
Dcacap = libcaca_plugin$(LIBEXT)
Lcacab = libcaca.a
Lcacapic = libcaca_pic.a
endif

libcaca_plugin_a_SOURCES = $(SOURCES_caca)
libcaca_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin caca`
libcaca_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin caca`
libcaca_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin caca`

libcaca_pic_a_SOURCES = $(SOURCES_caca)
libcaca_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic caca`
libcaca_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic caca`
libcaca_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic caca`

libcaca_a_SOURCES = $(SOURCES_caca)
libcaca_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin caca`
libcaca_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin caca`
libcaca_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin caca`

libvlc_LIBRARIES += $(Lcacab) $(Lcacapic)
libcaca_DATA = $(Dcacap)

libcacadir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lcacap)
libcaca_plugin$(LIBEXT): $(libcaca_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage caca` in \
	  c++) echo $(CXXLINK) $(libcaca_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin caca\` ; $(CXXLINK) $(libcaca_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin caca` ;; \
	  objc) echo $(OBJCLINK) $(libcaca_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin caca\` ; $(OBJCLINK) $(libcaca_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin caca` ;; \
	  c|*) echo $(LINK) $(libcaca_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin caca\` ; $(LINK) $(libcaca_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin caca` ;; \
	esac


# The fb plugin

if UNTRUE
Lfbp = libfb_plugin.a
Dfbp = libfb_plugin$(LIBEXT)
Lfbb = libfb.a
Lfbpic = libfb_pic.a
endif

libfb_plugin_a_SOURCES = $(SOURCES_fb)
libfb_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin fb`
libfb_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin fb`
libfb_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin fb`

libfb_pic_a_SOURCES = $(SOURCES_fb)
libfb_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic fb`
libfb_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic fb`
libfb_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic fb`

libfb_a_SOURCES = $(SOURCES_fb)
libfb_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin fb`
libfb_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin fb`
libfb_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin fb`

libvlc_LIBRARIES += $(Lfbb) $(Lfbpic)
libfb_DATA = $(Dfbp)

libfbdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfbp)
libfb_plugin$(LIBEXT): $(libfb_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage fb` in \
	  c++) echo $(CXXLINK) $(libfb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fb\` ; $(CXXLINK) $(libfb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fb` ;; \
	  objc) echo $(OBJCLINK) $(libfb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fb\` ; $(OBJCLINK) $(libfb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fb` ;; \
	  c|*) echo $(LINK) $(libfb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fb\` ; $(LINK) $(libfb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fb` ;; \
	esac


# The ggi plugin

if UNTRUE
Lggip = libggi_plugin.a
Dggip = libggi_plugin$(LIBEXT)
Lggib = libggi.a
Lggipic = libggi_pic.a
endif

libggi_plugin_a_SOURCES = $(SOURCES_ggi)
libggi_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ggi`
libggi_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ggi`
libggi_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ggi`

libggi_pic_a_SOURCES = $(SOURCES_ggi)
libggi_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ggi`
libggi_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ggi`
libggi_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ggi`

libggi_a_SOURCES = $(SOURCES_ggi)
libggi_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ggi`
libggi_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ggi`
libggi_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ggi`

libvlc_LIBRARIES += $(Lggib) $(Lggipic)
libggi_DATA = $(Dggip)

libggidir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lggip)
libggi_plugin$(LIBEXT): $(libggi_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ggi` in \
	  c++) echo $(CXXLINK) $(libggi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ggi\` ; $(CXXLINK) $(libggi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ggi` ;; \
	  objc) echo $(OBJCLINK) $(libggi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ggi\` ; $(OBJCLINK) $(libggi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ggi` ;; \
	  c|*) echo $(LINK) $(libggi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ggi\` ; $(LINK) $(libggi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ggi` ;; \
	esac


# The glide plugin

if UNTRUE
Lglidep = libglide_plugin.a
Dglidep = libglide_plugin$(LIBEXT)
Lglideb = libglide.a
Lglidepic = libglide_pic.a
endif

libglide_plugin_a_SOURCES = $(SOURCES_glide)
libglide_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin glide`
libglide_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin glide`
libglide_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin glide`

libglide_pic_a_SOURCES = $(SOURCES_glide)
libglide_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic glide`
libglide_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic glide`
libglide_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic glide`

libglide_a_SOURCES = $(SOURCES_glide)
libglide_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin glide`
libglide_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin glide`
libglide_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin glide`

libvlc_LIBRARIES += $(Lglideb) $(Lglidepic)
libglide_DATA = $(Dglidep)

libglidedir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lglidep)
libglide_plugin$(LIBEXT): $(libglide_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage glide` in \
	  c++) echo $(CXXLINK) $(libglide_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glide\` ; $(CXXLINK) $(libglide_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glide` ;; \
	  objc) echo $(OBJCLINK) $(libglide_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glide\` ; $(OBJCLINK) $(libglide_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glide` ;; \
	  c|*) echo $(LINK) $(libglide_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glide\` ; $(LINK) $(libglide_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glide` ;; \
	esac


# The vout_sdl plugin

if UNTRUE
Lvout_sdlp = libvout_sdl_plugin.a
Dvout_sdlp = libvout_sdl_plugin$(LIBEXT)
Lvout_sdlb = libvout_sdl.a
Lvout_sdlpic = libvout_sdl_pic.a
endif

libvout_sdl_plugin_a_SOURCES = $(SOURCES_vout_sdl)
libvout_sdl_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin vout_sdl`
libvout_sdl_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin vout_sdl`
libvout_sdl_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin vout_sdl`

libvout_sdl_pic_a_SOURCES = $(SOURCES_vout_sdl)
libvout_sdl_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic vout_sdl`
libvout_sdl_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic vout_sdl`
libvout_sdl_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic vout_sdl`

libvout_sdl_a_SOURCES = $(SOURCES_vout_sdl)
libvout_sdl_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin vout_sdl`
libvout_sdl_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin vout_sdl`
libvout_sdl_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin vout_sdl`

libvlc_LIBRARIES += $(Lvout_sdlb) $(Lvout_sdlpic)
libvout_sdl_DATA = $(Dvout_sdlp)

libvout_sdldir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lvout_sdlp)
libvout_sdl_plugin$(LIBEXT): $(libvout_sdl_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage vout_sdl` in \
	  c++) echo $(CXXLINK) $(libvout_sdl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_sdl\` ; $(CXXLINK) $(libvout_sdl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_sdl` ;; \
	  objc) echo $(OBJCLINK) $(libvout_sdl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_sdl\` ; $(OBJCLINK) $(libvout_sdl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_sdl` ;; \
	  c|*) echo $(LINK) $(libvout_sdl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_sdl\` ; $(LINK) $(libvout_sdl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_sdl` ;; \
	esac


# The svgalib plugin

if UNTRUE
Lsvgalibp = libsvgalib_plugin.a
Dsvgalibp = libsvgalib_plugin$(LIBEXT)
Lsvgalibb = libsvgalib.a
Lsvgalibpic = libsvgalib_pic.a
endif

libsvgalib_plugin_a_SOURCES = $(SOURCES_svgalib)
libsvgalib_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin svgalib`
libsvgalib_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin svgalib`
libsvgalib_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin svgalib`

libsvgalib_pic_a_SOURCES = $(SOURCES_svgalib)
libsvgalib_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic svgalib`
libsvgalib_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic svgalib`
libsvgalib_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic svgalib`

libsvgalib_a_SOURCES = $(SOURCES_svgalib)
libsvgalib_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin svgalib`
libsvgalib_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin svgalib`
libsvgalib_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin svgalib`

libvlc_LIBRARIES += $(Lsvgalibb) $(Lsvgalibpic)
libsvgalib_DATA = $(Dsvgalibp)

libsvgalibdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lsvgalibp)
libsvgalib_plugin$(LIBEXT): $(libsvgalib_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage svgalib` in \
	  c++) echo $(CXXLINK) $(libsvgalib_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svgalib\` ; $(CXXLINK) $(libsvgalib_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svgalib` ;; \
	  objc) echo $(OBJCLINK) $(libsvgalib_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svgalib\` ; $(OBJCLINK) $(libsvgalib_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svgalib` ;; \
	  c|*) echo $(LINK) $(libsvgalib_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svgalib\` ; $(LINK) $(libsvgalib_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svgalib` ;; \
	esac


# The wingdi plugin

if UNTRUE
Lwingdip = libwingdi_plugin.a
Dwingdip = libwingdi_plugin$(LIBEXT)
Lwingdib = libwingdi.a
Lwingdipic = libwingdi_pic.a
endif

libwingdi_plugin_a_SOURCES = $(SOURCES_wingdi)
libwingdi_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin wingdi`
libwingdi_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin wingdi`
libwingdi_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin wingdi`

libwingdi_pic_a_SOURCES = $(SOURCES_wingdi)
libwingdi_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic wingdi`
libwingdi_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic wingdi`
libwingdi_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic wingdi`

libwingdi_a_SOURCES = $(SOURCES_wingdi)
libwingdi_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin wingdi`
libwingdi_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin wingdi`
libwingdi_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin wingdi`

libvlc_LIBRARIES += $(Lwingdib) $(Lwingdipic)
libwingdi_DATA = $(Dwingdip)

libwingdidir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lwingdip)
libwingdi_plugin$(LIBEXT): $(libwingdi_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage wingdi` in \
	  c++) echo $(CXXLINK) $(libwingdi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wingdi\` ; $(CXXLINK) $(libwingdi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wingdi` ;; \
	  objc) echo $(OBJCLINK) $(libwingdi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wingdi\` ; $(OBJCLINK) $(libwingdi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wingdi` ;; \
	  c|*) echo $(LINK) $(libwingdi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wingdi\` ; $(LINK) $(libwingdi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wingdi` ;; \
	esac


# The mga plugin

if UNTRUE
Lmgap = libmga_plugin.a
Dmgap = libmga_plugin$(LIBEXT)
Lmgab = libmga.a
Lmgapic = libmga_pic.a
endif

libmga_plugin_a_SOURCES = $(SOURCES_mga)
libmga_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mga`
libmga_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mga`
libmga_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mga`

libmga_pic_a_SOURCES = $(SOURCES_mga)
libmga_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mga`
libmga_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mga`
libmga_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mga`

libmga_a_SOURCES = $(SOURCES_mga)
libmga_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mga`
libmga_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mga`
libmga_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mga`

libvlc_LIBRARIES += $(Lmgab) $(Lmgapic)
libmga_DATA = $(Dmgap)

libmgadir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lmgap)
libmga_plugin$(LIBEXT): $(libmga_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mga` in \
	  c++) echo $(CXXLINK) $(libmga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mga\` ; $(CXXLINK) $(libmga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mga` ;; \
	  objc) echo $(OBJCLINK) $(libmga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mga\` ; $(OBJCLINK) $(libmga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mga` ;; \
	  c|*) echo $(LINK) $(libmga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mga\` ; $(LINK) $(libmga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mga` ;; \
	esac


# The hd1000v plugin

if UNTRUE
Lhd1000vp = libhd1000v_plugin.a
Dhd1000vp = libhd1000v_plugin$(LIBEXT)
Lhd1000vb = libhd1000v.a
Lhd1000vpic = libhd1000v_pic.a
endif

libhd1000v_plugin_a_SOURCES = $(SOURCES_hd1000v)
libhd1000v_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin hd1000v`
libhd1000v_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin hd1000v`
libhd1000v_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin hd1000v`

libhd1000v_pic_a_SOURCES = $(SOURCES_hd1000v)
libhd1000v_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic hd1000v`
libhd1000v_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic hd1000v`
libhd1000v_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic hd1000v`

libhd1000v_a_SOURCES = $(SOURCES_hd1000v)
libhd1000v_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin hd1000v`
libhd1000v_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin hd1000v`
libhd1000v_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin hd1000v`

libvlc_LIBRARIES += $(Lhd1000vb) $(Lhd1000vpic)
libhd1000v_DATA = $(Dhd1000vp)

libhd1000vdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lhd1000vp)
libhd1000v_plugin$(LIBEXT): $(libhd1000v_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage hd1000v` in \
	  c++) echo $(CXXLINK) $(libhd1000v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin hd1000v\` ; $(CXXLINK) $(libhd1000v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin hd1000v` ;; \
	  objc) echo $(OBJCLINK) $(libhd1000v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin hd1000v\` ; $(OBJCLINK) $(libhd1000v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin hd1000v` ;; \
	  c|*) echo $(LINK) $(libhd1000v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin hd1000v\` ; $(LINK) $(libhd1000v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin hd1000v` ;; \
	esac


# The snapshot plugin

if UNTRUE
Lsnapshotp = libsnapshot_plugin.a
Dsnapshotp = libsnapshot_plugin$(LIBEXT)
Lsnapshotb = libsnapshot.a
Lsnapshotpic = libsnapshot_pic.a
endif

libsnapshot_plugin_a_SOURCES = $(SOURCES_snapshot)
libsnapshot_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin snapshot`
libsnapshot_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin snapshot`
libsnapshot_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin snapshot`

libsnapshot_pic_a_SOURCES = $(SOURCES_snapshot)
libsnapshot_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic snapshot`
libsnapshot_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic snapshot`
libsnapshot_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic snapshot`

libsnapshot_a_SOURCES = $(SOURCES_snapshot)
libsnapshot_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin snapshot`
libsnapshot_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin snapshot`
libsnapshot_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin snapshot`

libvlc_LIBRARIES += $(Lsnapshotb) $(Lsnapshotpic)
libsnapshot_DATA = $(Dsnapshotp)

libsnapshotdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lsnapshotp)
libsnapshot_plugin$(LIBEXT): $(libsnapshot_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage snapshot` in \
	  c++) echo $(CXXLINK) $(libsnapshot_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin snapshot\` ; $(CXXLINK) $(libsnapshot_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin snapshot` ;; \
	  objc) echo $(OBJCLINK) $(libsnapshot_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin snapshot\` ; $(OBJCLINK) $(libsnapshot_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin snapshot` ;; \
	  c|*) echo $(LINK) $(libsnapshot_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin snapshot\` ; $(LINK) $(libsnapshot_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin snapshot` ;; \
	esac


# The opengl plugin

if UNTRUE
Lopenglp = libopengl_plugin.a
Dopenglp = libopengl_plugin$(LIBEXT)
Lopenglb = libopengl.a
Lopenglpic = libopengl_pic.a
endif

libopengl_plugin_a_SOURCES = $(SOURCES_opengl)
libopengl_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin opengl`
libopengl_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin opengl`
libopengl_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin opengl`

libopengl_pic_a_SOURCES = $(SOURCES_opengl)
libopengl_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic opengl`
libopengl_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic opengl`
libopengl_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic opengl`

libopengl_a_SOURCES = $(SOURCES_opengl)
libopengl_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin opengl`
libopengl_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin opengl`
libopengl_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin opengl`

libvlc_LIBRARIES += $(Lopenglb) $(Lopenglpic)
libopengl_DATA = $(Dopenglp)

libopengldir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lopenglp)
libopengl_plugin$(LIBEXT): $(libopengl_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage opengl` in \
	  c++) echo $(CXXLINK) $(libopengl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin opengl\` ; $(CXXLINK) $(libopengl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin opengl` ;; \
	  objc) echo $(OBJCLINK) $(libopengl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin opengl\` ; $(OBJCLINK) $(libopengl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin opengl` ;; \
	  c|*) echo $(LINK) $(libopengl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin opengl\` ; $(LINK) $(libopengl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin opengl` ;; \
	esac


