
# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

NULL =
libvlc_LIBRARIES =
noinst_LIBRARIES =
noinst_HEADERS =
EXTRA_DIST = Modules.am
BUILT_SOURCES =
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/audio_mixer
include Modules.am

if BUILD_MOZILLA
if HAVE_WIN32
# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
pic = no
endif
else
pic = no
endif

clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in trivial_mixer float32_mixer spdif_mixer; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in trivial_mixer float32_mixer spdif_mixer; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in trivial_mixer float32_mixer spdif_mixer; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"

# The trivial_mixer plugin

if UNTRUE
Ltrivial_mixerp = libtrivial_mixer_plugin.a
Dtrivial_mixerp = libtrivial_mixer_plugin$(LIBEXT)
Ltrivial_mixerb = libtrivial_mixer.a
Ltrivial_mixerpic = libtrivial_mixer_pic.a
endif

libtrivial_mixer_plugin_a_SOURCES = $(SOURCES_trivial_mixer)
libtrivial_mixer_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin trivial_mixer`
libtrivial_mixer_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin trivial_mixer`
libtrivial_mixer_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin trivial_mixer`

libtrivial_mixer_pic_a_SOURCES = $(SOURCES_trivial_mixer)
libtrivial_mixer_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic trivial_mixer`
libtrivial_mixer_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic trivial_mixer`
libtrivial_mixer_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic trivial_mixer`

libtrivial_mixer_a_SOURCES = $(SOURCES_trivial_mixer)
libtrivial_mixer_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin trivial_mixer`
libtrivial_mixer_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin trivial_mixer`
libtrivial_mixer_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin trivial_mixer`

libvlc_LIBRARIES += $(Ltrivial_mixerb) $(Ltrivial_mixerpic)
libtrivial_mixer_DATA = $(Dtrivial_mixerp)

libtrivial_mixerdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Ltrivial_mixerp)
libtrivial_mixer_plugin$(LIBEXT): $(libtrivial_mixer_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage trivial_mixer` in \
	  c++) echo $(CXXLINK) $(libtrivial_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin trivial_mixer\` ; $(CXXLINK) $(libtrivial_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin trivial_mixer` ;; \
	  objc) echo $(OBJCLINK) $(libtrivial_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin trivial_mixer\` ; $(OBJCLINK) $(libtrivial_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin trivial_mixer` ;; \
	  c|*) echo $(LINK) $(libtrivial_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin trivial_mixer\` ; $(LINK) $(libtrivial_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin trivial_mixer` ;; \
	esac


# The float32_mixer plugin

if UNTRUE
Lfloat32_mixerp = libfloat32_mixer_plugin.a
Dfloat32_mixerp = libfloat32_mixer_plugin$(LIBEXT)
Lfloat32_mixerb = libfloat32_mixer.a
Lfloat32_mixerpic = libfloat32_mixer_pic.a
endif

libfloat32_mixer_plugin_a_SOURCES = $(SOURCES_float32_mixer)
libfloat32_mixer_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin float32_mixer`
libfloat32_mixer_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin float32_mixer`
libfloat32_mixer_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin float32_mixer`

libfloat32_mixer_pic_a_SOURCES = $(SOURCES_float32_mixer)
libfloat32_mixer_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic float32_mixer`
libfloat32_mixer_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic float32_mixer`
libfloat32_mixer_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic float32_mixer`

libfloat32_mixer_a_SOURCES = $(SOURCES_float32_mixer)
libfloat32_mixer_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin float32_mixer`
libfloat32_mixer_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin float32_mixer`
libfloat32_mixer_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin float32_mixer`

libvlc_LIBRARIES += $(Lfloat32_mixerb) $(Lfloat32_mixerpic)
libfloat32_mixer_DATA = $(Dfloat32_mixerp)

libfloat32_mixerdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lfloat32_mixerp)
libfloat32_mixer_plugin$(LIBEXT): $(libfloat32_mixer_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage float32_mixer` in \
	  c++) echo $(CXXLINK) $(libfloat32_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32_mixer\` ; $(CXXLINK) $(libfloat32_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32_mixer` ;; \
	  objc) echo $(OBJCLINK) $(libfloat32_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32_mixer\` ; $(OBJCLINK) $(libfloat32_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32_mixer` ;; \
	  c|*) echo $(LINK) $(libfloat32_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin float32_mixer\` ; $(LINK) $(libfloat32_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin float32_mixer` ;; \
	esac


# The spdif_mixer plugin

if UNTRUE
Lspdif_mixerp = libspdif_mixer_plugin.a
Dspdif_mixerp = libspdif_mixer_plugin$(LIBEXT)
Lspdif_mixerb = libspdif_mixer.a
Lspdif_mixerpic = libspdif_mixer_pic.a
endif

libspdif_mixer_plugin_a_SOURCES = $(SOURCES_spdif_mixer)
libspdif_mixer_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin spdif_mixer`
libspdif_mixer_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin spdif_mixer`
libspdif_mixer_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin spdif_mixer`

libspdif_mixer_pic_a_SOURCES = $(SOURCES_spdif_mixer)
libspdif_mixer_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic spdif_mixer`
libspdif_mixer_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic spdif_mixer`
libspdif_mixer_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic spdif_mixer`

libspdif_mixer_a_SOURCES = $(SOURCES_spdif_mixer)
libspdif_mixer_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin spdif_mixer`
libspdif_mixer_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin spdif_mixer`
libspdif_mixer_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin spdif_mixer`

libvlc_LIBRARIES += $(Lspdif_mixerb) $(Lspdif_mixerpic)
libspdif_mixer_DATA = $(Dspdif_mixerp)

libspdif_mixerdir = $(libdir)/vlc/
noinst_LIBRARIES += $(Lspdif_mixerp)
libspdif_mixer_plugin$(LIBEXT): $(libspdif_mixer_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage spdif_mixer` in \
	  c++) echo $(CXXLINK) $(libspdif_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin spdif_mixer\` ; $(CXXLINK) $(libspdif_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin spdif_mixer` ;; \
	  objc) echo $(OBJCLINK) $(libspdif_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin spdif_mixer\` ; $(OBJCLINK) $(libspdif_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin spdif_mixer` ;; \
	  c|*) echo $(LINK) $(libspdif_mixer_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin spdif_mixer\` ; $(LINK) $(libspdif_mixer_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin spdif_mixer` ;; \
	esac


